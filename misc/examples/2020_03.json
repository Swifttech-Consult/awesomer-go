{
  "sourceStr": "# Awesome Go\n\n[![Build Status](https://travis-ci.org/avelino/awesome-go.svg?branch=master)](https://travis-ci.org/avelino/awesome-go) [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome) [![Slack Widget](https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&logo=slack&colorB=red)](http://gophers.slack.com/messages/awesome) [![Netlify Status](https://api.netlify.com/api/v1/badges/83a6dcbe-0da6-433e-b586-f68109286bd5/deploy-status)](https://app.netlify.com/sites/awesome-go/deploys)\n\n[![patreon avelino](https://c5.patreon.com/external/logo/become_a_patron_button@2x.png)](https://www.patreon.com/avelinosource) financial support to Awesome Go\n\nA curated list of awesome Go frameworks, libraries and software. Inspired by [awesome-python](https://github.com/vinta/awesome-python).\n\n### Contributing\n\nPlease take a quick gander at the [contribution guidelines](https://github.com/avelino/awesome-go/blob/master/CONTRIBUTING.md) first. Thanks to all [contributors](https://github.com/avelino/awesome-go/graphs/contributors); you rock!\n\n#### *If you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you!*\n\n### Contents\n\n- [Awesome Go](#awesome-go)\n    - [Audio and Music](#audio-and-music)\n    - [Authentication and OAuth](#authentication-and-oauth)\n    - [Bot Building](#bot-building)\n    - [Command Line](#command-line)\n    - [Configuration](#configuration)\n    - [Continuous Integration](#continuous-integration)\n    - [CSS Preprocessors](#css-preprocessors)\n    - [Data Structures](#data-structures)\n    - [Database](#database)\n    - [Database Drivers](#database-drivers)\n    - [Date and Time](#date-and-time)\n    - [Distributed Systems](#distributed-systems)\n    - [Dynamic DNS](#dynamic-dns)\n    - [Email](#email)\n    - [Embeddable Scripting Languages](#embeddable-scripting-languages)\n    - [Error Handling](#error-handling)\n    - [Files](#files)\n    - [Financial](#financial)\n    - [Forms](#forms)\n    - [Functional](#functional)\n    - [Game Development](#game-development)\n    - [Generation and Generics](#generation-and-generics)\n    - [Geographic](#geographic)\n    - [Go Compilers](#go-compilers)\n    - [Goroutines](#goroutines)\n    - [GUI](#gui)\n    - [Hardware](#hardware)\n    - [Images](#images)\n    - [IoT](#iot-internet-of-things)\n    - [Job Scheduler](#job-scheduler)\n    - [JSON](#json)\n    - [Logging](#logging)\n    - [Machine Learning](#machine-learning)\n    - [Messaging](#messaging)\n    - [Microsoft Office](#microsoft-office)\n        - [Microsoft Excel](#microsoft-excel)\n    - [Miscellaneous](#miscellaneous)\n        - [Dependency Injection](#dependency-injection)\n        - [Project Layout](#project-layout)\n        - [Strings](#strings)\n    - [Natural Language Processing](#natural-language-processing)\n    - [Networking](#networking)\n        - [HTTP Clients](#http-clients)\n    - [OpenGL](#opengl)\n    - [ORM](#orm)\n    - [Package Management](#package-management)\n    - [Performance](#performance)\n    - [Query Language](#query-language)\n    - [Resource Embedding](#resource-embedding)\n    - [Science and Data Analysis](#science-and-data-analysis)\n    - [Security](#security)\n    - [Serialization](#serialization)\n    - [Server Applications](#server-applications)\n    - [Stream Processing](#stream-processing)\n    - [Template Engines](#template-engines)\n    - [Testing](#testing)\n    - [Text Processing](#text-processing)\n    - [Third-party APIs](#third-party-apis)\n    - [Utilities](#utilities)\n    - [UUID](#uuid)\n    - [Validation](#validation)\n    - [Version Control](#version-control)\n    - [Video](#video)\n    - [Web Frameworks](#web-frameworks)\n        - [Middlewares](#middlewares)\n            - [Actual middlewares](#actual-middlewares)\n            - [Libraries for creating HTTP middlewares](#libraries-for-creating-http-middlewares)\n        - [Routers](#routers)\n    - [Windows](#windows)\n    - [XML](#xml)\n\n- [Tools](#tools)\n    - [Code Analysis](#code-analysis)\n    - [Editor Plugins](#editor-plugins)\n    - [Go Generate Tools](#go-generate-tools)\n    - [Go Tools](#go-tools)\n    - [Software Packages](#software-packages)\n        - [DevOps Tools](#devops-tools)\n        - [Other Software](#other-software)\n\n- [Resources](#resources)\n    - [Benchmarks](#benchmarks)\n    - [Conferences](#conferences)\n    - [E-Books](#e-books)\n    - [Gophers](#gophers)\n    - [Meetups](#meetups)\n    - [Twitter](#twitter)\n    - [Websites](#websites)\n        - [Tutorials](#tutorials)\n\n## Audio and Music\n\n*Libraries for manipulating audio.*\n\n* [EasyMIDI](https://github.com/algoGuy/EasyMIDI) - EasyMidi is a simple and reliable library for working with standard midi file (SMF).\n* [flac](https://github.com/mewkiz/flac) - Native Go FLAC encoder/decoder with support for FLAC streams.\n* [gaad](https://github.com/Comcast/gaad) - Native Go AAC bitstream parser.\n* [go-sox](https://github.com/krig/go-sox) - libsox bindings for go.\n* [go_mediainfo](https://github.com/zhulik/go_mediainfo) - libmediainfo bindings for go.\n* [gosamplerate](https://github.com/dh1tw/gosamplerate) - libsamplerate bindings for go.\n* [id3v2](https://github.com/bogem/id3v2) - Fast and stable ID3 parsing and writing library for Go.\n* [malgo](https://github.com/gen2brain/malgo) - Mini audio library.\n* [minimp3](https://github.com/tosone/minimp3) - Lightweight MP3 decoder library.\n* [mix](https://github.com/go-mix/mix) - Sequence-based Go-native audio mixer for music apps.\n* [mp3](https://github.com/tcolgate/mp3) - Native Go MP3 decoder.\n* [music-theory](https://github.com/go-music-theory/music-theory) - Music theory models in Go.\n* [Oto](https://github.com/hajimehoshi/oto) - A low-level library to play sound on multiple platforms.\n* [PortAudio](https://github.com/gordonklaus/portaudio) - Go bindings for the PortAudio audio I/O library.\n* [portmidi](https://github.com/rakyll/portmidi) - Go bindings for PortMidi.\n* [taglib](https://github.com/wtolson/go-taglib) - Go bindings for taglib.\n* [vorbis](https://github.com/mccoyst/vorbis) - \"Native\" Go Vorbis decoder (uses CGO, but has no dependencies).\n* [waveform](https://github.com/mdlayher/waveform) - Go package capable of generating waveform images from audio streams.\n\n## Authentication and OAuth\n\n*Libraries for implementing authentications schemes.*\n\n* [authboss](https://github.com/volatiletech/authboss) - Modular authentication system for the web. It tries to remove as much boilerplate and \"hard things\" as possible so that each time you start a new web project in Go, you can plug it in, configure, and start building your app without having to build an authentication system each time.\n* [branca](https://github.com/hako/branca) - Golang implementation of Branca Tokens.\n* [casbin](https://github.com/hsluoyz/casbin) - Authorization library that supports access control models like ACL, RBAC, ABAC.\n* [cookiestxt](https://github.com/mengzhuo/cookiestxt) - provides parser of cookies.txt file format.\n* [go-jose](https://github.com/square/go-jose) - Fairly complete implementation of the JOSE working group's JSON Web Token, JSON Web Signatures, and JSON Web Encryption specs.\n* [go-oauth2-server](https://github.com/RichardKnop/go-oauth2-server) - Standalone, specification-compliant,  OAuth2 server written in Golang.\n* [gologin](https://github.com/dghubble/gologin) - chainable handlers for login with OAuth1 and OAuth2 authentication providers.\n* [gorbac](https://github.com/mikespook/gorbac) - provides a lightweight role-based access control (RBAC) implementation in Golang.\n* [goth](https://github.com/markbates/goth) - provides a simple, clean, and idiomatic way to use OAuth and OAuth2. Handles multiple providers out of the box.\n* [httpauth](https://github.com/goji/httpauth) - HTTP Authentication middleware.\n* [jeff](https://github.com/abraithwaite/jeff) - Simple, flexible, secure and idiomatic web session management with pluggable backends.\n* [jwt](https://github.com/robbert229/jwt) - Clean and easy to use implementation of JSON Web Tokens (JWT).\n* [jwt](https://github.com/pascaldekloe/jwt) - Lightweight JSON Web Token (JWT) library.\n* [jwt-auth](https://github.com/adam-hanna/jwt-auth) - JWT middleware for Golang http servers with many configuration options.\n* [jwt-go](https://github.com/dgrijalva/jwt-go) - Golang implementation of JSON Web Tokens (JWT).\n* [loginsrv](https://github.com/tarent/loginsrv) - JWT login microservice with plugable backends such as OAuth2 (Github), htpasswd, osiam.\n* [oauth2](https://github.com/golang/oauth2) - Successor of goauth2. Generic OAuth 2.0 package that comes with JWT, Google APIs, Compute Engine and App Engine support.\n* [osin](https://github.com/openshift/osin) - Golang OAuth2 server library.\n* [paseto](https://github.com/o1egl/paseto) - Golang implementation of Platform-Agnostic Security Tokens (PASETO).\n* [permissions2](https://github.com/xyproto/permissions2) - Library for keeping track of users, login states and permissions. Uses secure cookies and bcrypt.\n* [rbac](https://github.com/zpatrick/rbac) - Minimalistic RBAC package for Go applications.\n* [scope](https://github.com/SonicRoshan/scope) - Easily Manage OAuth2 Scopes In Go.\n* [scs](https://github.com/alexedwards/scs) - Session Manager for HTTP servers.\n* [securecookie](https://github.com/chmike/securecookie) - Efficient secure cookie encoding/decoding.\n* [session](https://github.com/icza/session) - Go session management for web servers (including support for Google App Engine - GAE).\n* [sessiongate-go](https://github.com/f0rmiga/sessiongate-go) - Go session management using the SessionGate Redis module.\n* [sessions](https://github.com/adam-hanna/sessions) - Dead simple, highly performant, highly customizable sessions service for go http servers.\n* [sessionup](https://github.com/swithek/sessionup) - Simple, yet effective HTTP session management and identification package.\n* [signedvalue](https://github.com/sashka/signedvalue) - Signed and timestamped strings compatible with [Tornado's](https://github.com/tornadoweb/tornado) `create_signed_value`, `decode_signed_value`, and therefore `set_secure_cookie` and `get_secure_cookie`.\n* [sjwt](https://github.com/brianvoe/sjwt) - Simple jwt generator and parser.\n\n## Bot Building\n\n*Libraries for building and working with bots.*\n\n* [ephemeral-roles](https://github.com/ewohltman/ephemeral-roles) - A Discord bot for managing ephemeral roles based upon voice channel member presence.\n* [go-chat-bot](https://github.com/go-chat-bot/bot) - IRC, Slack & Telegram bot written in Go.\n* [go-joe](https://joe-bot.net) - A general-purpose bot library inspired by Hubot but written in Go.\n* [go-sarah](https://github.com/oklahomer/go-sarah) - Framework to build bot for desired chat services including LINE, Slack, Gitter and more.\n* [go-tgbot](https://github.com/olebedev/go-tgbot) - Pure Golang Telegram Bot API wrapper, generated from swagger file, session-based router and middleware.\n* [go-twitch-irc](https://github.com/gempir/go-twitch-irc) - Libary to write bots for twitch.tv chat\n* [Golang CryptoTrading Bot](https://github.com/saniales/golang-crypto-trading-bot) - A golang implementation of a console-based trading bot for cryptocurrency exchanges.\n* [govkbot](https://github.com/nikepan/govkbot) - Simple Go [VK](https://vk.com) bot library.\n* [hanu](https://github.com/sbstjn/hanu) - Framework for writing Slack bots.\n* [Kelp](https://github.com/stellar/kelp) - official trading and market-making bot for the [Stellar](https://www.stellar.org/) DEX. Works out-of-the-box, written in Golang, compatible with centralized exchanges and custom trading strategies.\n* [margelet](https://github.com/zhulik/margelet) - Framework for building Telegram bots.\n* [micha](https://github.com/onrik/micha) - Go Library for Telegram bot api.\n* [slacker](https://github.com/shomali11/slacker) - Easy to use framework to create Slack bots.\n* [slackscot](https://github.com/alexandre-normand/slackscot) - Another framework for building Slack bots.\n* [tbot](https://github.com/yanzay/tbot) - Telegram bot server with API similar to net/http.\n* [telebot](https://github.com/tucnak/telebot) - Telegram bot framework written in Go.\n* [telegram-bot-api](https://github.com/Syfaro/telegram-bot-api) - Simple and clean Telegram bot client.\n* [Tenyks](https://github.com/kyleterry/tenyks) - Service oriented IRC bot using Redis and JSON for messaging.\n\n## Command Line\n\n### Standard CLI\n\n*Libraries for building standard or basic Command Line applications.*\n\n* [1build](https://github.com/gopinath-langote/1build) - Command line tool to frictionlessly manage project-specific commands.\n* [argparse](https://github.com/akamensky/argparse) - Command line argument parser inspired by Python's argparse module.\n* [argv](https://github.com/cosiner/argv) - Go library to split command line string as arguments array using the bash syntax.\n* [cli](https://github.com/mkideal/cli) - Feature-rich and easy to use command-line package based on golang struct tags.\n* [cli](https://github.com/teris-io/cli) - Simple and complete API for building command line interfaces in Go.\n* [cli-init](https://github.com/tcnksm/gcli) - The easy way to start building Golang command line applications.\n* [climax](http://github.com/tucnak/climax) - Alternative CLI with \"human face\", in spirit of Go command.\n* [clîr](https://github.com/leaanthony/clir) - A Simple and Clear CLI library. Dependency free.\n* [cmd](https://github.com/posener/cmd) - Extends the standard `flag` package to support sub commands and more in idomatic way.\n* [cmdr](https://github.com/hedzr/cmdr) - A POSIX/GNU style, getopt-like command-line UI Go library.\n* [cobra](https://github.com/spf13/cobra) - Commander for modern Go CLI interactions.\n* [commandeer](https://github.com/jaffee/commandeer) - Dev-friendly CLI apps: sets up flags, defaults, and usage based on struct fields and tags.\n* [complete](https://github.com/posener/complete) - Write bash completions in Go + Go command bash completion.\n* [Dnote](https://github.com/dnote/dnote) - A simple command line notebook with multi-device sync.\n* [docopt.go](https://github.com/docopt/docopt.go) - Command-line arguments parser that will make you smile.\n* [env](https://github.com/codingconcepts/env) - Tag-based environment configuration for structs.\n* [flag](https://github.com/cosiner/flag) - Simple but powerful command line option parsing library for Go supporting subcommand.\n* [flaggy](https://github.com/integrii/flaggy) - A robust and idiomatic flags package with excellent subcommand support.\n* [flagvar](https://github.com/sgreben/flagvar) - A collection of flag argument types for Go's standard `flag` package.\n* [go-arg](https://github.com/alexflint/go-arg) - Struct-based argument parsing in Go.\n* [go-commander](https://github.com/yitsushi/go-commander) - Go library to simplify CLI workflow.\n* [go-flags](https://github.com/jessevdk/go-flags) - go command line option parser.\n* [go-getoptions](https://github.com/DavidGamba/go-getoptions) - Go option parser inspired on the flexibility of Perl’s GetOpt::Long.\n* [gocmd](https://github.com/devfacet/gocmd) - Go library for building command line applications.\n* [hiboot cli](https://github.com/hidevopsio/hiboot/tree/master/pkg/app/cli) - cli application framework with auto configuration and dependency injection.\n* [job](https://github.com/liujianping/job) - JOB, make your short-term command as a long-term job.\n* [kingpin](https://github.com/alecthomas/kingpin) - Command line and flag parser supporting sub commands.\n* [liner](https://github.com/peterh/liner) - Go readline-like library for command-line interfaces.\n* [mitchellh/cli](https://github.com/mitchellh/cli) - Go library for implementing command-line interfaces.\n* [mow.cli](https://github.com/jawher/mow.cli) - Go library for building CLI applications with sophisticated flag and argument parsing and validation.\n* [ops](https://github.com/nanovms/ops) - Unikernel Builder/Orchestrator.\n* [pflag](https://github.com/spf13/pflag) - Drop-in replacement for Go's flag package, implementing POSIX/GNU-style --flags.\n* [readline](https://github.com/chzyer/readline) - Pure golang implementation that provides most features in GNU-Readline under MIT license.\n* [sand](https://github.com/Zaba505/sand) - Simple API for creating interpreters and so much more.\n* [sflags](https://github.com/octago/sflags) - Struct based flags generator for flag, urfave/cli, pflag, cobra, kingpin and other libraries.\n* [strumt](https://github.com/antham/strumt) - Library to create prompt chain.\n* [ts](https://github.com/liujianping/ts) - Timestamp convert & compare tool.\n* [ukautz/clif](https://github.com/ukautz/clif) - Small command line interface framework.\n* [urfave/cli](https://github.com/urfave/cli) - Simple, fast, and fun package for building command line apps in Go (formerly codegangsta/cli).\n* [wlog](https://github.com/dixonwille/wlog) - Simple logging interface that supports cross-platform color and concurrency.\n* [wmenu](https://github.com/dixonwille/wmenu) - Easy to use menu structure for cli applications that prompts users to make choices.\n\n### Advanced Console UIs\n\n*Libraries for building Console Applications and Console User Interfaces.*\n\n* [asciigraph](https://github.com/guptarohit/asciigraph) - Go package to make lightweight ASCII line graph ╭┈╯ in command line apps with no other dependencies.\n* [aurora](https://github.com/logrusorgru/aurora) - ANSI terminal colors that supports fmt.Printf/Sprintf.\n* [cfmt](https://github.com/mingrammer/cfmt) - Contextual fmt inspired by bootstrap color classes.\n* [chalk](https://github.com/ttacon/chalk) - Intuitive package for prettifying terminal/console output.\n* [colourize](https://github.com/TreyBastian/colourize) - Go library for ANSI colour text in terminals.\n* [ctc](https://github.com/wzshiming/ctc) - The non-invasive cross-platform terminal color library does not need to modify the Print method.\n* [go-ataman](https://github.com/workanator/go-ataman) - Go library for rendering ANSI colored text templates in terminals.\n* [go-colorable](https://github.com/mattn/go-colorable) - Colorable writer for windows.\n* [go-colortext](https://github.com/daviddengcn/go-colortext) - Go library for color output in terminals.\n* [go-isatty](https://github.com/mattn/go-isatty) - isatty for golang.\n* [go-prompt](https://github.com/c-bata/go-prompt) - Library for building a powerful interactive prompt, inspired by [python-prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit).\n* [gocui](https://github.com/jroimartin/gocui) - Minimalist Go library aimed at creating Console User Interfaces.\n* [gommon/color](https://github.com/labstack/gommon/tree/master/color) - Style terminal text.\n* [gookit/color](https://github.com/gookit/color) - Terminal color rendering tool library, support 16 colors, 256 colors, RGB color rendering output, compatible with Windows.\n* [mpb](https://github.com/vbauerster/mpb) - Multi progress bar for terminal applications.\n* [progressbar](https://github.com/schollz/progressbar) - Basic thread-safe progress bar that works in every OS.\n* [simpletable](https://github.com/alexeyco/simpletable) - Simple tables in terminal with Go.\n* [tabby](https://github.com/cheynewallace/tabby) - A tiny library for super simple Golang tables.\n* [tabular](https://github.com/InVisionApp/tabular) - Print ASCII tables from command line utilities without the need to pass large sets of data to the API.\n* [termbox-go](https://github.com/nsf/termbox-go) - Termbox is a library for creating cross-platform text-based interfaces.\n* [termdash](https://github.com/mum4k/termdash) - Go terminal dashboard based on **termbox-go** and inspired by [termui](https://github.com/gizak/termui).\n* [termui](https://github.com/gizak/termui) - Go terminal dashboard based on **termbox-go** and inspired by [blessed-contrib](https://github.com/yaronn/blessed-contrib).\n* [uilive](https://github.com/gosuri/uilive) - Library for updating terminal output in realtime.\n* [uiprogress](https://github.com/gosuri/uiprogress) - Flexible library to render progress bars in terminal applications.\n* [uitable](https://github.com/gosuri/uitable) - Library to improve readability in terminal apps using tabular data.\n* [yacspin](https://github.com/theckman/yacspin) - Yet Another CLi Spinner package, for working with terminal spinners.\n\n## Configuration\n\n*Libraries for configuration parsing.*\n\n* [cleanenv](https://github.com/ilyakaznacheev/cleanenv) - Minimalistic configuration reader (from files, ENV, and wherever you want).\n* [config](https://github.com/golobby/config) - A lightweight yet powerful config package for Go projects.\n* [config](https://github.com/JeremyLoy/config) - Cloud native application configuration. Bind ENV to structs in only two lines.\n* [config](https://github.com/olebedev/config) - JSON or YAML configuration wrapper with environment variables and flags parsing.\n* [configuration](https://github.com/BoRuDar/configuration) - Library for initializing configuration structs from env variables, files, flags and 'default' tag.\n* [configure](https://github.com/paked/configure) - Provides configuration through multiple sources, including JSON, flags and environment variables.\n* [confita](https://github.com/heetch/confita) - Load configuration in cascade from multiple backends into a struct.\n* [conflate](https://github.com/the4thamigo-uk/conflate) - Library/tool to merge multiple JSON/YAML/TOML files from arbitrary URLs, validation against a JSON schema, and application of default values defined in the schema.\n* [env](https://github.com/caarlos0/env) - Parse environment variables to Go structs (with defaults).\n* [envcfg](https://github.com/tomazk/envcfg) - Un-marshaling environment variables to Go structs.\n* [envconf](https://github.com/ian-kent/envconf) - Configuration from environment.\n* [envconfig](https://github.com/vrischmann/envconfig) - Read your configuration from environment variables.\n* [envh](https://github.com/antham/envh) - Helpers to manage environment variables.\n* [gcfg](https://github.com/go-gcfg/gcfg) - read INI-style configuration files into Go structs; supports user-defined types and subsections.\n* [genv](https://github.com/sakirsensoy/genv) - Read environment variables easily with dotenv support.\n* [go-ssm-config](https://github.com/ianlopshire/go-ssm-config) - Go utility for loading configuration parameters from AWS SSM (Parameter Store).\n* [go-up](https://github.com/ufoscout/go-up) - A simple configuration library with recursive placeholders resolution and no magic.\n* [goConfig](https://github.com/crgimenes/goConfig) - Parses a struct as input and populates the fields of this struct with parameters from command line, environment variables and configuration file.\n* [godotenv](https://github.com/joho/godotenv) - Go port of Ruby's dotenv library (Loads environment variables from `.env`).\n* [gofigure](https://github.com/ian-kent/gofigure) - Go application configuration made easy.\n* [gone/jconf](https://github.com/One-com/gone/tree/master/jconf) - Modular JSON configuration. Keep you config structs along with the code they configure and delegate parsing to submodules without sacrificing full config serialization.\n* [gookit/config](https://github.com/gookit/config) - application config manage(load,get,set). support JSON, YAML, TOML, INI, HCL. multi file load, data override merge.\n* [harvester](https://github.com/beatlabs/harvester) - Harvester, a easy to use static and dynamic configuration package supportig seeding, env vars and Consul integration.\n* [hjson](https://github.com/hjson/hjson-go) - Human JSON, a configuration file format for humans. Relaxed syntax, fewer mistakes, more comments.\n* [ingo](https://github.com/schachmat/ingo) - Flags persisted in an ini-like config file.\n* [ini](https://github.com/go-ini/ini) - Go package to read and write INI files.\n* [joshbetz/config](https://github.com/joshbetz/config) - Small configuration library for Go that parses environment variables, JSON files, and reloads automatically on SIGHUP.\n* [kelseyhightower/envconfig](https://github.com/kelseyhightower/envconfig) - Go library for managing configuration data from environment variables.\n* [koanf](https://github.com/knadh/koanf) - Light weight, extensible library for reading config in Go applications. Built in support for JSON, TOML, YAML, env, command line.\n* [konfig](https://github.com/lalamove/konfig) - Composable, observable and performant config handling for Go for the distributed processing era.\n* [mini](https://github.com/sasbury/mini) - Golang package for parsing ini-style configuration files.\n* [nasermirzaei89/env](https://github.com/nasermirzaei89/env) - Simple useful package for read environment variables.\n* [onion](http://github.com/goraz/onion) - Layer based configuration for Go, Supports JSON, TOML, YAML, properties, etcd, env, and encryption using PGP.\n* [sprbox](https://github.com/oblq/sprbox) - Build-environment aware toolbox factory and agnostic config parser (YAML, TOML, JSON and Environment vars).\n* [store](https://github.com/tucnak/store) - Lightweight configuration manager for Go.\n* [viper](https://github.com/spf13/viper) - Go configuration with fangs.\n* [xdg](https://github.com/OpenPeeDeeP/xdg) - Cross platform package that follows the [XDG Standard](https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html).\n\n## Continuous Integration\n\n*Tools for help with continuous integration.*\n\n* [CDS](https://github.com/ovh/cds) - Enterprise-Grade CI/CD and DevOps Automation Open Source Platform.\n* [drone](https://github.com/drone/drone) - Drone is a Continuous Integration platform built on Docker, written in Go.\n* [duci](https://github.com/duck8823/duci) - A simple ci server no needs domain specific languages.\n* [gomason](https://github.com/nikogura/gomason) - Test, Build, Sign, and Publish your go binaries from a clean workspace.\n* [goveralls](https://github.com/mattn/goveralls) - Go integration for Coveralls.io continuous code coverage tracking system.\n* [overalls](https://github.com/go-playground/overalls) - Multi-Package go project coverprofile for tools like goveralls.\n* [roveralls](https://github.com/LawrenceWoodman/roveralls) - Recursive coverage testing tool.\n\n## CSS Preprocessors\n\n*Libraries for preprocessing CSS files.*\n\n* [gcss](https://github.com/yosssi/gcss) - Pure Go CSS Preprocessor.\n* [go-libsass](https://github.com/wellington/go-libsass) - Go wrapper to the 100% Sass compatible libsass project.\n\n## Data Structures\n\n*Generic datastructures and algorithms in Go.*\n\n* [algorithms](https://github.com/shady831213/algorithms) - Algorithms and data structures.CLRS study.\n* [binpacker](https://github.com/zhuangsirui/binpacker) - Binary packer and unpacker helps user build custom binary stream.\n* [bit](https://github.com/yourbasic/bit) - Golang set data structure with bonus bit-twiddling functions.\n* [bitset](https://github.com/willf/bitset) - Go package implementing bitsets.\n* [bloom](https://github.com/zhenjl/bloom) - Bloom filters implemented in Go.\n* [bloom](https://github.com/yourbasic/bloom) - Golang Bloom filter implementation.\n* [boomfilters](https://github.com/tylertreat/BoomFilters) - Probabilistic data structures for processing continuous, unbounded streams.\n* [concurrent-writer](https://github.com/free/concurrent-writer) - Highly concurrent drop-in replacement for `bufio.Writer`.\n* [conjungo](https://github.com/InVisionApp/conjungo) - A small, powerful and flexible merge library.\n* [count-min-log](https://github.com/seiflotfy/count-min-log) - Go implementation Count-Min-Log sketch: Approximately counting with approximate counters (Like Count-Min sketch but using less memory).\n* [crunch](https://github.com/superwhiskers/crunch) - Go package implementing buffers for handling various datatypes easily.\n* [cuckoofilter](https://github.com/seiflotfy/cuckoofilter) - Cuckoo filter: a good alternative to a counting bloom filter implemented in Go.\n* [deque](https://github.com/edwingeng/deque) - A highly optimized double-ended queue.\n* [deque](https://github.com/gammazero/deque) - Fast ring-buffer deque (double-ended queue).\n* [dict](https://github.com/srfrog/dict) - Python-like dictionaries (dict) for Go.\n* [encoding](https://github.com/zhenjl/encoding) - Integer Compression Libraries for Go.\n* [go-adaptive-radix-tree](https://github.com/plar/go-adaptive-radix-tree) - Go implementation of Adaptive Radix Tree.\n* [go-datastructures](https://github.com/Workiva/go-datastructures) - Collection of useful, performant, and thread-safe data structures.\n* [go-ef](https://github.com/amallia/go-ef) - A Go implementation of the Elias-Fano encoding.\n* [go-geoindex](https://github.com/hailocab/go-geoindex) - In-memory geo index.\n* [go-mcache](https://github.com/OrlovEvgeny/go-mcache) - Fast in-memory key:value store/cache library. Pointer caches.\n* [go-rquad](https://github.com/aurelien-rainone/go-rquad) - Region quadtrees with efficient point location and neighbour finding.\n* [gocache](https://github.com/eko/gocache) - A complete Go cache library with mutiple stores (memory, memcache, redis, ...), chainable, loadable, metrics cache and more.\n* [goconcurrentqueue](https://github.com/enriquebris/goconcurrentqueue) - Concurrent FIFO queue.\n* [gods](https://github.com/emirpasic/gods) - Go Data Structures. Containers, Sets, Lists, Stacks, Maps, BidiMaps, Trees, HashSet etc.\n* [gofal](https://github.com/xxjwxc/gofal) - fractional api for Go.\n* [golang-set](https://github.com/deckarep/golang-set) - Thread-Safe and Non-Thread-Safe high-performance sets for Go.\n* [goset](https://github.com/zoumo/goset) - A useful Set collection implementation for Go.\n* [goskiplist](https://github.com/ryszard/goskiplist) - Skip list implementation in Go.\n* [gostl](https://github.com/liyue201/gostl) - Data structure and algorithm library for go, designed to provide functions similar to C++ STL.\n* [gota](https://github.com/kniren/gota) - Implementation of dataframes, series, and data wrangling methods for Go.\n* [hide](https://github.com/emvi/hide) - ID type with marshalling to/from hash to prevent sending IDs to clients.\n* [hilbert](https://github.com/google/hilbert) - Go package for mapping values to and from space-filling curves, such as Hilbert and Peano curves.\n* [hyperloglog](https://github.com/axiomhq/hyperloglog) - HyperLogLog implementation with Sparse, LogLog-Beta bias correction and TailCut space reduction.\n* [iter](https://github.com/disksing/iter) - Go implementation of C++ STL iterators and algorithms.\n* [levenshtein](https://github.com/agext/levenshtein) - Levenshtein distance and similarity metrics with customizable edit costs and Winkler-like bonus for common prefix.\n* [levenshtein](https://github.com/agnivade/levenshtein) - Implementation to calculate levenshtein distance in Go.\n* [mafsa](https://github.com/smartystreets/mafsa) - MA-FSA implementation with Minimal Perfect Hashing.\n* [merkletree](https://github.com/cbergoon/merkletree) - Implementation of a merkle tree providing an efficient and secure verification of the contents of data structures.\n* [mspm](https://github.com/BlackRabbitt/mspm) - Multi-String Pattern Matching Algorithm for information retrieval.\n* [null](https://github.com/emvi/null) - Nullable Go types that can be marshalled/unmarshalled to/from JSON.\n* [parsefields](https://github.com/MonaxGT/parsefields) - Tools for parse JSON-like logs for collecting unique fields and events.\n* [pipeline](https://github.com/hyfather/pipeline) - An implementation of pipelines with fan-in and fan-out.\n* [ptrie](https://github.com/viant/ptrie) - An implementation of prefix tree.\n* [remember-go](https://github.com/rocketlaunchr/remember-go) - A universal interface for caching slow database queries (backed by redis, memcached, ristretto, or in-memory).\n* [ring](https://github.com/TheTannerRyan/ring) - Go implementation of a high performance, thread safe bloom filter.\n* [roaring](https://github.com/RoaringBitmap/roaring) - Go package implementing compressed bitsets.\n* [set](https://github.com/StudioSol/set) - Simple set data structure implementation in Go using LinkedHashMap.\n* [skiplist](https://github.com/MauriceGit/skiplist) - Very fast Go Skiplist implementation.\n* [skiplist](https://github.com/gansidui/skiplist) - Skiplist implementation in Go.\n* [timedmap](https://github.com/zekroTJA/timedmap) - Map with expiring key-value pairs.\n* [treap](https://github.com/perdata/treap) - Persistent, fast ordered map using tree heaps.\n* [trie](https://github.com/derekparker/trie) - Trie implementation in Go.\n* [ttlcache](https://github.com/diegobernardes/ttlcache) - In-memory LRU string-interface{} map with expiration for golang.\n* [typ](https://github.com/gurukami/typ) - Null Types, Safe primitive type conversion and fetching value from complex structures.\n* [willf/bloom](https://github.com/willf/bloom) - Go package implementing Bloom filters.\n\n## Database\n\n*Databases implemented in Go.*\n\n* [badger](https://github.com/dgraph-io/badger) - Fast key-value store in Go.\n* [bbolt](https://github.com/etcd-io/bbolt) - An embedded key/value database for Go.\n* [bcache](https://github.com/iwanbk/bcache) - Eventually consistent distributed in-memory  cache Go library.\n* [BigCache](https://github.com/allegro/bigcache) - Efficient key/value cache for gigabytes of data.\n* [Bitcask](https://github.com/prologic/bitcask) - Bitcask is an embeddable, persistent and fast key-value (KV) database written in pure Go with predictable read/write performance, low latency and high throughput thanks to the bitcask on-disk layout (LSM+WAL).\n* [buntdb](https://github.com/tidwall/buntdb) - Fast, embeddable, in-memory key/value database for Go with custom indexing and spatial support.\n* [cache](https://github.com/akyoto/cache) - In-memory key:value store with expiration time, 0 dependencies, <100 LoC, 100% coverage.\n* [cache2go](https://github.com/muesli/cache2go) - In-memory key:value cache which supports automatic invalidation based on timeouts.\n* [clusteredBigCache](https://github.com/oaStuff/clusteredBigCache) - BigCache with clustering support and individual item expiration.\n* [cockroach](https://github.com/cockroachdb/cockroach) - Scalable, Geo-Replicated, Transactional Datastore.\n* [Coffer](https://github.com/claygod/coffer) - Simple ACID key-value database that supports transactions.\n* [couchcache](https://github.com/codingsince1985/couchcache) - RESTful caching micro-service backed by Couchbase server.\n* [CovenantSQL](https://github.com/CovenantSQL/CovenantSQL) - CovenantSQL is a SQL database on blockchain.\n* [Databunker](https://github.com/paranoidguy/databunker) - Personally identifiable information (PII) storage service built to comply with GDPR and CCPA.\n* [dgraph](https://github.com/dgraph-io/dgraph) - Scalable, Distributed, Low Latency, High Throughput Graph Database.\n* [diskv](https://github.com/peterbourgon/diskv) - Home-grown disk-backed key-value store.\n* [eliasdb](https://github.com/krotik/eliasdb) - Dependency-free, transactional graph database with REST API, phrase search and SQL-like query language.\n* [fastcache](https://github.com/VictoriaMetrics/fastcache) - fast thread-safe inmemory cache for big number of entries. Minimizes GC overhead.\n* [GCache](https://github.com/bluele/gcache) - Cache library with support for expirable Cache, LFU, LRU and ARC.\n* [go-cache](https://github.com/pmylund/go-cache) - In-memory key:value store/cache (similar to Memcached) library for Go, suitable for single-machine applications.\n* [goleveldb](https://github.com/syndtr/goleveldb) - Implementation of the [LevelDB](https://github.com/google/leveldb) key/value database in Go.\n* [gorocksdb](https://github.com/kapitan-k/gorocksdb) - Gorocksdb is a wrapper for [RocksDB](https://rocksdb.org) written in Go.\n* [gostore](https://github.com/twharmon/gostore) - Gostore is a simple, durable, embedded key-value storage engine written in Go.\n* [groupcache](https://github.com/golang/groupcache) - Groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases.\n* [influxdb](https://github.com/influxdb/influxdb) - Scalable datastore for metrics, events, and real-time analytics.\n* [Kivik](https://github.com/go-kivik/kivik) - Kivik provides a common Go and GopherJS client library for CouchDB, PouchDB, and similar databases.\n* [ledisdb](https://github.com/siddontang/ledisdb) - Ledisdb is a high performance NoSQL like Redis based on LevelDB.\n* [levigo](https://github.com/jmhodges/levigo) - Levigo is a Go wrapper for LevelDB.\n* [moss](https://github.com/couchbase/moss) - Moss is a simple LSM key-value storage engine written in 100% Go.\n* [nutsdb](https://github.com/xujiajun/nutsdb) - Nutsdb is a simple, fast, embeddable, persistent key/value store written in pure Go. It supports fully serializable transactions and many data structures such as  list, set, sorted set.\n* [piladb](https://github.com/fern4lvarez/piladb) - Lightweight RESTful database engine based on stack data structures.\n* [prometheus](https://github.com/prometheus/prometheus) - Monitoring system and time series database.\n* [pudge](https://github.com/recoilme/pudge) - Fast and simple  key/value store written using Go's standard library.\n* [rqlite](https://github.com/rqlite/rqlite) - The lightweight, distributed, relational database built on SQLite.\n* [Scribble](https://github.com/nanobox-io/golang-scribble) - Tiny flat file JSON store.\n* [slowpoke](https://github.com/recoilme/slowpoke) - Key-value store with persistence.\n* [tempdb](https://github.com/rafaeljesus/tempdb) - Key-value store for temporary items.\n* [tidb](https://github.com/pingcap/tidb) - TiDB is a distributed SQL database. Inspired by the design of Google F1.\n* [tiedot](https://github.com/HouzuoGuo/tiedot) - Your NoSQL database powered by Golang.\n* [tracedb](https://github.com/unit-io/tracedb) - Fast timeseries database for IoT, realtime messaging  applications. Access tracedb with pubsub over tcp or websocket using github.com/unit-io/trace application.\n* [Vasto](https://github.com/chrislusf/vasto) - A distributed high-performance key-value store. On Disk. Eventual consistent. HA. Able to grow or shrink without service interruption.\n* [VictoriaMetrics](https://github.com/VictoriaMetrics/VictoriaMetrics) - fast, resource-effective and scalable open source time series database. May be used as long-term remote storage for Prometheus. Supports PromQL.\n\n*Database schema migration.*\n\n* [avro](https://github.com/khezen/avro) - Discover SQL schemas and convert them to AVRO schemas. Query SQL records into AVRO bytes.\n* [darwin](https://github.com/GuiaBolso/darwin) - Database schema evolution library for Go.\n* [go-fixtures](https://github.com/RichardKnop/go-fixtures) - Django style fixtures for Golang's excellent built-in database/sql library.\n* [go-pg-migrations](https://github.com/robinjoseph08/go-pg-migrations) - A Go package to help write migrations with go-pg/pg.\n* [gondolier](https://github.com/emvi/gondolier) - Database migration library using struct decorators.\n* [goose](https://github.com/steinbacher/goose) - Database migration tool. You can manage your database's evolution by creating incremental SQL or Go scripts.\n* [gormigrate](https://github.com/go-gormigrate/gormigrate) - Database schema migration helper for Gorm ORM.\n* [migrate](https://github.com/golang-migrate/migrate) - Database migrations. CLI and Golang library.\n* [migrator](https://github.com/lopezator/migrator) - Dead simple Go database migration library.\n* [pravasan](https://github.com/pravasan/pravasan) - Simple Migration tool - currently for MySQL but planning to soon support Postgres, SQLite, MongoDB, etc.\n* [schema](https://github.com/adlio/schema) - Library to embed schema migrations for database/sql-compatible databases inside your Go binaries.\n* [skeema](https://github.com/skeema/skeema) - Pure-SQL schema management system for MySQL, with support for sharding and external online schema change tools.\n* [soda](https://github.com/gobuffalo/pop/tree/master/soda) - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.\n* [sql-migrate](https://github.com/rubenv/sql-migrate) - Database migration tool. Allows embedding migrations into the application using go-bindata.\n\n*Database tools.*\n\n* [bucket](https://github.com/PumpkinSeed/bucket) - Optimized data structure framework for Couchbase specialized on one bucket usage.\n* [chproxy](https://github.com/Vertamedia/chproxy) - HTTP proxy for ClickHouse database.\n* [clickhouse-bulk](https://github.com/nikepan/clickhouse-bulk) - Collects small insterts and sends big requests to ClickHouse servers.\n* [datagen](https://github.com/codingconcepts/datagen) - A fast data generator that's multi-table aware and supports multi-row DML.\n* [dbbench](https://github.com/sj14/dbbench) - Database benchmarking tool with support for several databases and scripts.\n* [go-mysql](https://github.com/siddontang/go-mysql) - Go toolset to handle MySQL protocol and replication.\n* [go-mysql-elasticsearch](https://github.com/siddontang/go-mysql-elasticsearch) - Sync your MySQL data into Elasticsearch automatically.\n* [kingshard](https://github.com/flike/kingshard) - kingshard is a high performance proxy for MySQL powered by Golang.\n* [myreplication](https://github.com/2tvenom/myreplication) - MySql binary log replication listener. Supports statement and row based replication.\n* [octillery](https://github.com/knocknote/octillery) - Go package for sharding databases ( Supports every ORM or raw SQL ).\n* [orchestrator](https://github.com/github/orchestrator) - MySQL replication topology manager & visualizer.\n* [pgweb](https://github.com/sosedoff/pgweb) - Web-based PostgreSQL database browser.\n* [prep](https://github.com/hexdigest/prep) - Use prepared SQL statements without changing your code.\n* [pREST](https://github.com/nuveo/prest) - Serve a RESTful API from any PostgreSQL database.\n* [rwdb](https://github.com/andizzle/rwdb) - rwdb provides read replica capability for multiple database servers setup.\n* [vitess](https://github.com/youtube/vitess) - vitess provides servers and tools which facilitate scaling of MySQL databases for large scale web services.\n\n*SQL query builder, libraries for building and using SQL.*\n\n* [dbq](https://github.com/rocketlaunchr/dbq) - Zero boilerplate database operations for Go.\n* [Dotsql](https://github.com/gchaincl/dotsql) - Go library that helps you keep sql files in one place and use them with ease.\n* [gendry](https://github.com/didi/gendry) - Non-invasive SQL builder and powerful data binder.\n* [godbal](https://github.com/xujiajun/godbal) - Database Abstraction Layer (dbal) for go. Support SQL builder and get result easily.\n* [goqu](https://github.com/doug-martin/goqu) - Idiomatic SQL builder and query library.\n* [igor](https://github.com/galeone/igor) - Abstraction layer for PostgreSQL that supports advanced functionality and uses gorm-like syntax.\n* [jet](https://github.com/go-jet/jet) - Framework for writing type-safe SQL queries in Go, with ability to easily convert database query result into desired arbitrary object structure.\n* [mpath](https://github.com/spacetab-io/mpath-go) - MPTT (Modified Preorder Tree Traversal) package for SQL records - materialized path realisation.\n* [ormlite](https://github.com/pupizoid/ormlite) - Lightweight package containing some ORM-like features and helpers for sqlite databases.\n* [ozzo-dbx](https://github.com/go-ozzo/ozzo-dbx) - Powerful data retrieval methods as well as DB-agnostic query building capabilities.\n* [qry](https://github.com/HnH/qry) - Tool that generates constants from files with raw SQL queries.\n* [sqlf](https://github.com/leporo/sqlf) - Fast SQL query builder.\n* [sqrl](https://github.com/elgris/sqrl) - SQL query builder, fork of Squirrel with improved performance.\n* [Squalus](https://gitlab.com/qosenergy/squalus) - Thin layer over the Go SQL package that makes it easier to perform queries.\n* [Squirrel](https://github.com/Masterminds/squirrel) - Go library that helps you build SQL queries.\n* [xo](https://github.com/knq/xo) - Generate idiomatic Go code for databases based on existing schema definitions or custom queries supporting PostgreSQL, MySQL, SQLite, Oracle, and Microsoft SQL Server.\n\n## Database Drivers\n\n*Libraries for connecting and operating databases.*\n\n* Relational Databases\n    * [avatica](https://github.com/apache/calcite-avatica-go) - Apache Avatica/Phoenix SQL driver for database/sql.\n    * [bgc](https://github.com/viant/bgc) - Datastore Connectivity for BigQuery for go.\n    * [firebirdsql](https://github.com/nakagami/firebirdsql) - Firebird RDBMS SQL driver for Go.\n    * [go-adodb](https://github.com/mattn/go-adodb) - Microsoft ActiveX Object DataBase driver for go that uses database/sql.\n    * [go-mssqldb](https://github.com/denisenkom/go-mssqldb) - Microsoft MSSQL driver for Go.\n    * [go-oci8](https://github.com/mattn/go-oci8) - Oracle driver for go that uses database/sql.\n    * [go-sql-driver/mysql](https://github.com/go-sql-driver/mysql) - MySQL driver for Go.\n    * [go-sqlite3](https://github.com/mattn/go-sqlite3) - SQLite3 driver for go that uses database/sql.\n    * [gofreetds](https://github.com/minus5/gofreetds) - Microsoft MSSQL driver. Go wrapper over [FreeTDS](http://www.freetds.org).\n    * [goracle](https://github.com/go-goracle/goracle) - Oracle driver for Go, using the ODPI-C driver.\n    * [pgx](https://github.com/jackc/pgx) - PostgreSQL driver supporting features beyond those exposed by database/sql.\n    * [pq](https://github.com/lib/pq) - Pure Go Postgres driver for database/sql.\n\n* NoSQL Databases\n    * [aerospike-client-go](https://github.com/aerospike/aerospike-client-go) - Aerospike client in Go language.\n    * [arangolite](https://github.com/solher/arangolite) - Lightweight golang driver for ArangoDB.\n    * [asc](https://github.com/viant/asc) - Datastore Connectivity for Aerospike for go.\n    * [dynago](https://github.com/underarmour/dynago) - Dynago is a principle of least surprise client for DynamoDB.\n    * [forestdb](https://github.com/couchbase/goforestdb) - Go bindings for ForestDB.\n    * [go-couchbase](https://github.com/couchbase/go-couchbase) - Couchbase client in Go.\n    * [go-pilosa](https://github.com/pilosa/go-pilosa) - Go client library for Pilosa.\n    * [go-rejson](https://github.com/nitishm/go-rejson) - Golang client for redislabs' ReJSON module using Redigo golang client. Store and manipulate structs as JSON objects in redis with ease.\n    * [gocb](https://github.com/couchbase/gocb) - Official Couchbase Go SDK.\n    * [gocql](http://gocql.github.io) - Go language driver for Apache Cassandra.\n    * [godis](https://github.com/piaohao/godis) - redis client implement by golang, inspired by jedis.\n    * [godscache](https://github.com/defcronyke/godscache) - A wrapper for the Google Cloud Platform Go Datastore package that adds caching using memcached.\n    * [gomemcache](https://github.com/bradfitz/gomemcache/) - memcache client library for the Go programming language.\n    * [gorethink](https://github.com/dancannon/gorethink) - Go language driver for RethinkDB.\n    * [goriak](https://github.com/zegl/goriak) - Go language driver for Riak KV.\n    * [mgm](https://github.com/kamva/mgm) - MongoDB model-based ODM for Go (based on official MongoDB driver).\n    * [mgo](https://github.com/globalsign/mgo) - (unmaintained) MongoDB driver for the Go language that implements a rich and well tested selection of features under a very simple API following standard Go idioms.\n    * [mongo-go-driver](https://github.com/mongodb/mongo-go-driver) - Official MongoDB driver for the Go language.\n    * [neo4j](https://github.com/cihangir/neo4j) - Neo4j Rest API Bindings for Golang.\n    * [Neo4j-GO](https://github.com/davemeehan/Neo4j-GO) - Neo4j REST Client in golang.\n    * [neoism](https://github.com/jmcvetta/neoism) - Neo4j client for Golang.\n    * [redeo](https://github.com/bsm/redeo) - Redis-protocol compatible TCP servers/services.\n    * [redigo](https://github.com/gomodule/redigo) - Redigo is a Go client for the Redis database.\n    * [redis](https://github.com/go-redis/redis) - Redis client for Golang.\n    * [xredis](https://github.com/shomali11/xredis) - Typesafe, customizable, clean & easy to use Redis client.\n\n* Search and Analytic Databases.\n    * [bleve](https://github.com/blevesearch/bleve) - Modern text indexing library for go.\n    * [elastic](https://github.com/olivere/elastic) - Elasticsearch client for Go.\n    * [elasticsql](https://github.com/cch123/elasticsql) - Convert sql to elasticsearch dsl in Go.\n    * [elastigo](https://github.com/mattbaird/elastigo) - Elasticsearch client library.\n    * [go-elasticsearch](https://github.com/elastic/go-elasticsearch) - Official Elasticsearch client for Go.\n    * [goes](https://github.com/OwnLocal/goes) - Library to interact with Elasticsearch.\n    * [riot](https://github.com/go-ego/riot) - Go Open Source, Distributed, Simple and efficient Search Engine.\n    * [skizze](https://github.com/seiflotfy/skizze) - probabilistic data-structures service and storage.\n\n* Multiple Backends.\n    * [cachego](https://github.com/fabiorphp/cachego) - Golang Cache component for multiple drivers.\n    * [cayley](https://github.com/google/cayley) - Graph database with support for multiple backends.\n    * [dsc](https://github.com/viant/dsc) - Datastore connectivity for SQL, NoSQL, structured files.\n    * [gokv](https://github.com/philippgille/gokv) - Simple key-value store abstraction and implementations for Go (Redis, Consul, etcd, bbolt, BadgerDB, LevelDB, Memcached, DynamoDB, S3, PostgreSQL, MongoDB, CockroachDB and many more).\n\n## Date and Time\n\n*Libraries for working with dates and times.*\n\n* [carbon](https://github.com/uniplaces/carbon) - Simple Time extension with a lot of util methods, ported from PHP Carbon library.\n* [cronrange](https://github.com/1set/cronrange) - Parses Cron-style time range expressions, checks if the given time is within any ranges.\n* [date](https://github.com/rickb777/date) - Augments Time for working with dates, date ranges, time spans, periods, and time-of-day.\n* [dateparse](https://github.com/araddon/dateparse) - Parse date's without knowing format in advance.\n* [durafmt](https://github.com/hako/durafmt) - Time duration formatting library for Go.\n* [feiertage](https://github.com/wlbr/feiertage) - Set of functions to calculate public holidays in Germany, incl. specialization on the states of Germany (Bundesländer). Things like Easter, Pentecost, Thanksgiving...\n* [go-persian-calendar](https://github.com/yaa110/go-persian-calendar) - The implementation of the Persian (Solar Hijri) Calendar in Go (golang).\n* [go-str2duration](https://github.com/xhit/go-str2duration) - Convert string to duration. Support time.Duration returned string and more.\n* [go-sunrise](https://github.com/nathan-osman/go-sunrise) - Calculate the sunrise and sunset times for a given location.\n* [go-week](https://github.com/stoewer/go-week) - An efficient package to work with ISO8601 week dates.\n* [iso8601](https://github.com/relvacode/iso8601) - Efficiently parse ISO8601 date-times without regex.\n* [kair](https://github.com/GuilhermeCaruso/kair) - Date and Time - Golang Formatting Library.\n* [now](https://github.com/jinzhu/now) - Now is a time toolkit for golang.\n* [NullTime](https://github.com/kirillDanshin/nulltime) - Nullable `time.Time`.\n* [strftime](https://github.com/awoodbeck/strftime) - C99-compatible strftime formatter.\n* [timespan](https://github.com/SaidinWoT/timespan) - For interacting with intervals of time, defined as a start time and a duration.\n* [timeutil](https://github.com/leekchan/timeutil) - Useful extensions (Timedelta, Strftime, ...) to the golang's time package.\n* [tuesday](https://github.com/osteele/tuesday) - Ruby-compatible Strftime function.\n\n## Distributed Systems\n\n*Packages that help with building Distributed Systems.*\n\n* [celeriac](https://github.com/svcavallar/celeriac.v1) - Library for adding support for interacting and monitoring Celery workers, tasks and events in Go.\n* [consistent](https://github.com/buraksezer/consistent) - Consistent hashing with bounded loads.\n* [dht](https://github.com/anacrolix/dht) - BitTorrent Kademlia DHT implementation.\n* [digota](https://github.com/digota/digota) - grpc ecommerce microservice.\n* [dot](https://github.com/dotchain/dot/) - distributed sync using operational transformation/OT.\n* [doublejump](https://github.com/edwingeng/doublejump) - A revamped Google's jump consistent hash.\n* [dragonboat](https://github.com/lni/dragonboat) - A feature complete and high performance multi-group Raft library in Go.\n* [drmaa](https://github.com/dgruber/drmaa) - Job submission library for cluster schedulers based on the DRMAA standard.\n* [dynamolock](https://cirello.io/dynamolock) - DynamoDB-backed distributed locking implementation.\n* [dynatomic](https://github.com/tylfin/dynatomic) - A library for using DynamoDB as an atomic counter.\n* [emitter-io](https://github.com/emitter-io/emitter) - High performance, distributed, secure and low latency publish-subscribe platform built with MQTT, Websockets and love.\n* [flowgraph](https://github.com/vectaport/flowgraph) - flow-based programming package.\n* [gleam](https://github.com/chrislusf/gleam) - Fast and scalable distributed map/reduce system written in pure Go and Luajit, combining Go's high concurrency with Luajit's high performance, runs standalone or distributed.\n* [glow](https://github.com/chrislusf/glow) - Easy-to-Use scalable distributed big data processing, Map-Reduce, DAG execution, all in pure Go.\n* [go-health](https://github.com/InVisionApp/go-health) - Library for enabling asynchronous dependency health checks in your service.\n* [go-jump](https://github.com/dgryski/go-jump) - Port of Google's \"Jump\" Consistent Hash function.\n* [go-kit](https://github.com/go-kit/kit) - Microservice toolkit with support for service discovery, load balancing, pluggable transports, request tracking, etc.\n* [go-pdu](https://github.com/pdupub/go-pdu) - A decentralized identity-based social network.\n* [go-sundheit](https://github.com/AppsFlyer/go-sundheit) - A library built to provide support for defining async service health checks for golang services.\n* [gorpc](https://github.com/valyala/gorpc) - Simple, fast and scalable RPC library for high load.\n* [grpc-go](https://github.com/grpc/grpc-go) - The Go language implementation of gRPC. HTTP/2 based RPC.\n* [hprose](https://github.com/hprose/hprose-golang) - Very newbility RPC Library, support 25+ languages now.\n* [jsonrpc](https://github.com/osamingo/jsonrpc) - The jsonrpc package helps implement of JSON-RPC 2.0.\n* [jsonrpc](https://github.com/ybbus/jsonrpc) - JSON-RPC 2.0 HTTP client implementation.\n* [KrakenD](https://github.com/devopsfaith/krakend) - Ultra performant API Gateway framework with middlewares.\n* [liftbridge](https://github.com/liftbridge-io/liftbridge) - Lightweight, fault-tolerant message streams for NATS.\n* [micro](https://github.com/micro/micro) - Pluggable microservice toolkit and distributed systems platform.\n* [NATS](https://github.com/nats-io/gnatsd) - Lightweight, high performance messaging system for microservices, IoT, and cloud native systems.\n* [outboxer](https://github.com/italolelis/outboxer) - Outboxer is a go library that implements the outbox pattern.\n* [pglock](https://cirello.io/pglock) - PostgreSQL-backed distributed locking implementation.\n* [raft](https://github.com/hashicorp/raft) - Golang implementation of the Raft consensus protocol, by HashiCorp.\n* [raft](https://github.com/coreos/etcd/tree/master/raft) - Go implementation of the Raft consensus protocol, by CoreOS.\n* [rain](https://github.com/cenkalti/rain) - BitTorrent client and library.\n* [redis-lock](https://github.com/bsm/redislock) - Simplified distributed locking implementation using Redis.\n* [resgate](https://resgate.io/) - Realtime API Gateway for building REST, real time, and RPC APIs, where all clients are synchronized seamlessly.\n* [ringpop-go](https://github.com/uber/ringpop-go) - Scalable, fault-tolerant application-layer sharding for Go applications.\n* [rpcx](https://github.com/smallnest/rpcx) - Distributed pluggable RPC service framework like alibaba Dubbo.\n* [sleuth](https://github.com/ursiform/sleuth) - Library for master-less p2p auto-discovery and RPC between HTTP services (using [ZeroMQ](https://github.com/zeromq/libzmq)).\n* [tendermint](https://github.com/tendermint/tendermint) - High-performance middleware for transforming a state machine written in any programming language into a Byzantine Fault Tolerant replicated state machine using the Tendermint consensus and blockchain protocols.\n* [torrent](https://github.com/anacrolix/torrent) - BitTorrent client package.\n\n## Dynamic DNS\n\n*Tools for updating dynamic DNS records.*\n\n* [DDNS](https://github.com/skibish/ddns) - Personal DDNS client with Digital Ocean Networking DNS as backend.\n* [dyndns](https://gitlab.com/alcastle/dyndns) - Background Go process to regularly and automatically check your IP Address and make updates to (one or many) Dynamic DNS records for Google domains whenever your address changes.\n* [GoDNS](https://github.com/timothyye/godns) - A dynamic DNS client tool, supports DNSPod & HE.net, written in Go.\n\n## Email\n\n*Libraries and tools that implement email creation and sending.*\n\n* [chasquid](https://blitiri.com.ar/p/chasquid) - SMTP server written in Go.\n* [douceur](https://github.com/aymerick/douceur) - CSS inliner for your HTML emails.\n* [email](https://github.com/jordan-wright/email) - A robust and flexible email library for Go.\n* [go-dkim](https://github.com/toorop/go-dkim) - DKIM library, to sign & verify email.\n* [go-imap](https://github.com/emersion/go-imap) - IMAP library for clients and servers.\n* [go-message](https://github.com/emersion/go-message) - Streaming library for the Internet Message Format and mail messages.\n* [go-premailer](https://github.com/vanng822/go-premailer) - Inline styling for HTML mail in Go.\n* [go-simple-mail](https://github.com/xhit/go-simple-mail) - Very simple package to send emails with SMTP Keep Alive and two timeouts: Connect and Send.\n* [Hectane](https://github.com/hectane/hectane) - Lightweight SMTP client providing an HTTP API.\n* [hermes](https://github.com/matcornic/hermes) - Golang package that generates clean, responsive HTML e-mails.\n* [mailchain](https://github.com/mailchain/mailchain) - Send encrypted emails to blockchain addresses written in Go.\n* [mailgun-go](https://github.com/mailgun/mailgun-go) - Go library for sending mail with the Mailgun API.\n* [MailHog](https://github.com/mailhog/MailHog) - Email and SMTP testing with web and API interface.\n* [SendGrid](https://github.com/sendgrid/sendgrid-go) - SendGrid's Go library for sending email.\n* [smtp](https://github.com/mailhog/smtp) - SMTP server protocol state machine.\n\n## Embeddable Scripting Languages\n\n*Embedding other languages inside your go code.*\n\n* [anko](https://github.com/mattn/anko) - Scriptable interpreter written in Go.\n* [binder](https://github.com/alexeyco/binder) - Go to Lua binding library, based on [gopher-lua](https://github.com/yuin/gopher-lua).\n* [cel-go](https://github.com/google/cel-go) - Fast, portable, non-Turing complete expression evaluation with gradual typing.\n* [expr](https://github.com/antonmedv/expr) - Expression evaluation engine for Go: fast, non-Turing complete, dynamic typing, static typing.\n* [gentee](https://github.com/gentee/gentee) - Embeddable scripting programming language.\n* [gisp](https://github.com/jcla1/gisp) - Simple LISP in Go.\n* [go-duktape](https://github.com/olebedev/go-duktape) - Duktape JavaScript engine bindings for Go.\n* [go-lua](https://github.com/Shopify/go-lua) - Port of the Lua 5.2 VM to pure Go.\n* [go-php](https://github.com/deuill/go-php) - PHP bindings for Go.\n* [go-python](https://github.com/sbinet/go-python) - naive go bindings to the CPython C-API.\n* [golua](https://github.com/aarzilli/golua) - Go bindings for Lua C API.\n* [gopher-lua](https://github.com/yuin/gopher-lua) - Lua 5.1 VM and compiler written in Go.\n* [gval](https://github.com/PaesslerAG/gval) - A highly customizable expression language written in Go.\n* [ngaro](https://github.com/db47h/ngaro) - Embeddable Ngaro VM implementation enabling scripting in Retro.\n* [otto](https://github.com/robertkrimen/otto) - JavaScript interpreter written in Go.\n* [purl](https://github.com/ian-kent/purl) - Perl 5.18.2 embedded in Go.\n* [tengo](https://github.com/d5/tengo) - Bytecode compiled script language for Go.\n\n## Error Handling\n\n*Libraries for handling errors.*\n\n* [emperror](https://github.com/emperror/emperror) - Error handling tools and best practices for Go libraries and applications.\n* [eris](https://github.com/rotisserie/eris) - A better way to handle, trace, and log errors in Go. Compatible with the standard error library and github.com/pkg/errors.\n* [errlog](https://github.com/snwfdhmp/errlog) - Hackable package that determines responsible source code for an error (and some other fast-debugging features). Pluggable to any logger in-place.\n* [errors](https://github.com/emperror/errors) - Drop-in replacement for the standard library errors package and github.com/pkg/errors. Provides various error handling primitives.\n* [errors](https://github.com/pkg/errors) - Package that provides simple error handling primitives.\n* [errors](https://github.com/neuronlabs/errors) - Simple golang error handling with classification primitives.\n* [errors](https://github.com/PumpkinSeed/errors) - The most simple error wrapper with awesome performance and minimal memory overhead.\n* [errorx](https://github.com/joomcode/errorx) - A feature rich error package with stack traces, composition of errors and more.\n* [Falcon](https://github.com/SonicRoshan/falcon) - A Simple Yet Highly Powerful Package For Error Handling.\n* [go-multierror](https://github.com/hashicorp/go-multierror) - Go (golang) package for representing a list of errors as a single error.\n* [tracerr](https://github.com/ztrue/tracerr) - Golang errors with stack trace and source fragments.\n* [werr](https://github.com/txgruppi/werr) - Error Wrapper creates an wrapper for the error type in Go which captures the File, Line and Stack of where it was called.\n\n## Files\n\n*Libraries for handling files and file systems.*\n\n* [afero](https://github.com/spf13/afero) - FileSystem Abstraction System for Go.\n* [afs](https://github.com/viant/afs) - Abstract File Storage (mem, scp, zip, tar, cloud: s3, gs) for Go.\n* [bigfile](https://github.com/bigfile/bigfile) - A file transfer system, support to manage files with http api, rpc call and ftp client.\n* [checksum](https://github.com/codingsince1985/checksum) - Compute message digest, like MD5 and SHA256, for large files.\n* [copy](https://github.com/otiai10/copy) - Copy directory recursively.\n* [flop](https://github.com/homedepot/flop) - File operations library which aims to mirror feature parity with [GNU cp](https://www.gnu.org/software/coreutils/manual/html_node/cp-invocation.html).\n* [go-csv-tag](https://github.com/artonge/go-csv-tag) - Load csv file using tag.\n* [go-decent-copy](https://github.com/hugocarreira/go-decent-copy) - Copy files for humans.\n* [go-exiftool](https://github.com/barasher/go-exiftool) - Go bindings for ExifTool, the well-known library used to extract as much metadata as possible (EXIF, IPTC, ...) from files (pictures, PDF, office, ...).\n* [go-gtfs](https://github.com/artonge/go-gtfs) - Load gtfs files in go.\n* [gut/yos](https://github.com/1set/gut) - Simple and reliable package for file operations like copy/move/diff/list on files, directories and symbolic links.\n* [notify](https://github.com/rjeczalik/notify) - File system event notification library with simple API, similar to os/signal.\n* [opc](https://github.com/qmuntal/opc) - Load Open Packaging Conventions (OPC) files for Go.\n* [parquet](https://github.com/parsyl/parquet) - Read and write [parquet](https://parquet.apache.org) files.\n* [pdfcpu](https://github.com/pdfcpu/pdfcpu) - PDF processor.\n* [skywalker](https://github.com/dixonwille/skywalker) - Package to allow one to concurrently go through a filesystem with ease.\n* [stl](https://gitlab.com/russoj88/stl) - Modules to read and write STL (stereolithography) files.  Concurrent algorithm for reading.\n* [tarfs](https://github.com/posener/tarfs) - Implementation of the [`FileSystem` interface](https://godoc.org/github.com/kr/fs#FileSystem) for tar files.\n* [vfs](https://github.com/C2FO/vfs) - A pluggable, extensible, and opinionated set of filesystem functionality for Go across a number of filesystem types such as os, S3, and GCS.\n\n## Financial\n\n*Packages for accounting and finance.*\n\n* [accounting](https://github.com/leekchan/accounting) - money and currency formatting for golang.\n* [currency](https://github.com/bnkamalesh/currency) - High performant & accurate currency computation package.\n* [decimal](https://github.com/shopspring/decimal) - Arbitrary-precision fixed-point decimal numbers.\n* [go-finance](https://github.com/FlashBoys/go-finance) - Comprehensive financial markets data in Go.\n* [go-finance](https://github.com/alpeb/go-finance) - Library of financial functions for time value of money (annuities), cash flow, interest rate conversions, bonds and depreciation calculations.\n* [go-finance](https://github.com/pieterclaerhout/go-finance) - Module to fetch exchange rates, check VAT numbers via VIES and check IBAN bank account numbers.\n* [go-finnhub](https://github.com/m1/go-finnhub) - Client for stock market, forex and crypto data from finnhub.io. Access real-time financial market data from 60+ stock exchanges, 10 forex brokers, and 15+ crypto exchanges.\n* [go-money](https://github.com/rhymond/go-money) - Implementation of Fowler's Money pattern.\n* [ofxgo](https://github.com/aclindsa/ofxgo) - Query OFX servers and/or parse the responses (with example command-line client).\n* [orderbook](https://github.com/i25959341/orderbook) - Matching Engine for Limit Order Book in Golang.\n* [techan](https://github.com/sdcoffey/techan) - Technical analysis library with advanced market analysis and trading strategies.\n* [transaction](https://github.com/claygod/transaction) - Embedded transactional database of accounts, running in multithreaded mode.\n* [vat](https://github.com/dannyvankooten/vat) - VAT number validation & EU VAT rates.\n\n## Forms\n\n*Libraries for working with forms.*\n\n* [bind](https://github.com/robfig/bind) - Bind form data to any Go values.\n* [binding](https://github.com/mholt/binding) - Binds form and JSON data from net/http Request to struct.\n* [conform](https://github.com/leebenson/conform) - Keeps user input in check. Trims, sanitizes & scrubs data based on struct tags.\n* [form](https://github.com/go-playground/form) - Decodes url.Values into Go value(s) and Encodes Go value(s) into url.Values. Dual Array and Full map support.\n* [formam](https://github.com/monoculum/formam) - decode form's values into a struct.\n* [forms](https://github.com/albrow/forms) - Framework-agnostic library for parsing and validating form/JSON data which supports multipart forms and files.\n* [gorilla/csrf](https://github.com/gorilla/csrf) - CSRF protection for Go web applications & services.\n* [nosurf](https://github.com/justinas/nosurf) - CSRF protection middleware for Go.\n* [queryparam](https://github.com/tomwright/queryparam) - Decode `url.Values` into usable struct values of standard or custom types.\n\n## Functional\n\n*Packages to support functional programming in Go.*\n\n* [fpGo](https://github.com/TeaEntityLab/fpGo) - Monad, Functional Programming features for Golang.\n* [fuego](https://github.com/seborama/fuego) - Functional Experiment in Go.\n* [go-underscore](https://github.com/tobyhede/go-underscore) - Useful collection of helpfully functional Go collection utilities.\n\n## Game Development\n\n*Awesome game development libraries.*\n\n* [Azul3D](https://github.com/azul3d/engine) - 3D game engine written in Go.\n* [Ebiten](https://github.com/hajimehoshi/ebiten) - dead simple 2D game library in Go.\n* [engo](https://github.com/EngoEngine/engo) - Engo is an open-source 2D game engine written in Go. It follows the Entity-Component-System paradigm.\n* [g3n](https://github.com/g3n/engine) - Go 3D Game Engine.\n* [GarageEngine](https://github.com/vova616/GarageEngine) - 2d game engine written in Go working on OpenGL.\n* [glop](https://github.com/runningwild/glop) - Glop (Game Library Of Power) is a fairly simple cross-platform game library.\n* [go-astar](https://github.com/beefsack/go-astar) - Go implementation of the A\\* path finding algorithm.\n* [go-collada](https://github.com/GlenKelley/go-collada) - Go package for working with the Collada file format.\n* [go-sdl2](https://github.com/veandco/go-sdl2) - Go bindings for the [Simple DirectMedia Layer](https://www.libsdl.org/).\n* [go3d](https://github.com/ungerik/go3d) - Performance oriented 2D/3D math package for Go.\n* [gonet](https://github.com/xtaci/gonet) - Game server skeleton implemented with golang.\n* [goworld](https://github.com/xiaonanln/goworld) - Scalable game server engine, featuring space-entity framework and hot-swapping.\n* [Leaf](https://github.com/name5566/leaf) - Lightweight game server framework.\n* [nano](https://github.com/lonng/nano) - Lightweight, facility, high performance golang based game server framework.\n* [Oak](https://github.com/oakmound/oak) - Pure Go game engine.\n* [Pitaya](https://github.com/topfreegames/pitaya) - Scalable game server framework with clustering support and client libraries for iOS, Android, Unity and others through the C SDK.\n* [Pixel](https://github.com/faiface/pixel) - Hand-crafted 2D game library in Go.\n* [raylib-go](https://github.com/gen2brain/raylib-go) - Go bindings for [raylib](http://www.raylib.com/), a simple and easy-to-use library to learn videogames programming.\n* [termloop](https://github.com/JoelOtter/termloop) - Terminal-based game engine for Go, built on top of Termbox.\n\n## Generation and Generics\n\n*Tools to enhance the language with features like generics via code generation.*\n\n* [efaceconv](https://github.com/t0pep0/efaceconv) - Code generation tool for high performance conversion from interface{} to immutable type without allocations.\n* [gen](https://github.com/clipperhouse/gen) - Code generation tool for ‘generics’-like functionality.\n* [generis](https://github.com/senselogic/GENERIS) - Code generation tool providing generics, free-form macros, conditional compilation and HTML templating.\n* [go-enum](https://github.com/abice/go-enum) - Code generation for enums from code comments.\n* [go-linq](https://github.com/ahmetalpbalkan/go-linq) - .NET LINQ-like query methods for Go.\n* [go-xray](https://github.com/pieterclaerhout/go-xray) - Helpers for making the use of reflection easier.\n* [goderive](https://github.com/awalterschulze/goderive) - Derives functions from input types.\n* [gotype](https://github.com/wzshiming/gotype) - Golang source code parsing, usage like reflect package.\n* [GoWrap](https://github.com/hexdigest/gowrap) - Generate decorators for Go interfaces using simple templates.\n* [interfaces](https://github.com/rjeczalik/interfaces) - Command line tool for generating interface definitions.\n* [jennifer](https://github.com/dave/jennifer) - Generate arbitrary Go code without templates.\n* [pkgreflect](https://github.com/ungerik/pkgreflect) - Go preprocessor for package scoped reflection.\n* [typeregistry](https://github.com/xiaoxin01/typeregistry) - A library to create type dynamically.\n\n## Geographic\n\n*Geographic tools and servers*\n\n* [geocache](https://github.com/melihmucuk/geocache) - In-memory cache that is suitable for geolocation based applications.\n* [geoserver](https://github.com/hishamkaram/geoserver) - geoserver Is a Go Package For Manipulating a GeoServer Instance via the GeoServer REST API.\n* [gismanager](https://github.com/hishamkaram/gismanager) - Publish Your GIS Data(Vector Data) to PostGIS and Geoserver.\n* [mbtileserver](https://github.com/consbio/mbtileserver) - A simple Go-based server for map tiles stored in mbtiles format.\n* [osm](https://github.com/paulmach/osm) - Library for reading, writing and working with OpenStreetMap data and APIs.\n* [pbf](https://github.com/maguro/pbf) - OpenStreetMap PBF golang encoder/decoder.\n* [S2 geometry](https://github.com/golang/geo) - S2 geometry library in Go.\n* [Tile38](https://github.com/tidwall/tile38) - Geolocation DB with spatial index and realtime geofencing.\n* [WGS84](https://github.com/wroge/wgs84) - Library for Coordinate Conversion and Transformation (ETRS89, OSGB36, NAD83, RGF93, Web Mercator, UTM).\n\n## Go Compilers\n\n*Tools for compiling Go to other languages.*\n\n* [c4go](https://github.com/Konstantin8105/c4go) - Transpile C code to Go code.\n* [f4go](https://github.com/Konstantin8105/f4go) - Transpile FORTRAN 77 code to Go code.\n* [gopherjs](https://github.com/gopherjs/gopherjs) - Compiler from Go to JavaScript.\n* [llgo](https://github.com/go-llvm/llgo) - LLVM-based compiler for Go.\n* [tardisgo](https://github.com/tardisgo/tardisgo) - Golang to Haxe to CPP/CSharp/Java/JavaScript transpiler.\n\n## Goroutines\n\n*Tools for managing and working with Goroutines.*\n\n* [ants](https://github.com/panjf2000/ants) - A high-performance and low-cost goroutine pool in Go.\n* [artifex](https://github.com/borderstech/artifex) - Simple in-memory job queue for Golang using worker-based dispatching.\n* [async](https://github.com/studiosol/async) - A safe way to execute functions asynchronously, recovering them in case of panic.\n* [breaker](https://github.com/kamilsk/breaker) - Flexible mechanism to make execution flow interruptible.\n* [conexec](https://github.com/ITcathyh/conexec) - A concurrent toolkit to help execute funcs concurrently in an efficient and safe way.It supports specifying the overall timeout to avoid blocking and uses goroutine pool to improve efficiency.\n* [cyclicbarrier](https://github.com/marusama/cyclicbarrier) - CyclicBarrier for golang.\n* [go-floc](https://github.com/workanator/go-floc) - Orchestrate goroutines with ease.\n* [go-flow](https://github.com/kamildrazkiewicz/go-flow) - Control goroutines execution order.\n* [go-tools/multithreading](https://github.com/nikhilsaraf/go-tools) - Manage a pool of goroutines using this lightweight library with a simple API.\n* [go-trylock](https://github.com/subchen/go-trylock) - TryLock support on read-write lock for Golang.\n* [go-waitgroup](https://github.com/pieterclaerhout/go-waitgroup) - Like `sync.WaitGroup` with error handling and concurrency control.\n* [gohive](https://github.com/loveleshsharma/gohive) - A highly performant and easy to use Goroutine pool for Go.\n* [gollback](https://github.com/vardius/gollback) - asynchronous simple function utilities, for managing execution of closures and callbacks.\n* [GoSlaves](https://github.com/themester/GoSlaves) - Simple and Asynchronous Goroutine pool library.\n* [goworker](https://github.com/benmanns/goworker) - goworker is a Go-based background worker.\n* [gowp](https://github.com/xxjwxc/gowp) - gowp is concurrency limiting goroutine pool.\n* [gpool](https://github.com/Sherifabdlnaby/gpool) - manages a resizeable pool of context-aware goroutines to bound concurrency.\n* [grpool](https://github.com/ivpusic/grpool) - Lightweight Goroutine pool.\n* [Hunch](https://github.com/AaronJan/Hunch) - Hunch provides functions like: `All`, `First`, `Retry`, `Waterfall` etc., that makes asynchronous flow control more intuitive.\n* [kyoo](https://github.com/dirkaholic/kyoo) - Provides an unlimited job queue and concurrent worker pools.\n* [oversight](https://cirello.io/oversight) - Oversight is a complete implementation of the Erlang supervision trees.\n* [parallel-fn](https://github.com/rafaeljesus/parallel-fn) - Run functions in parallel.\n* [pool](https://github.com/go-playground/pool) - Limited consumer goroutine or unlimited goroutine pool for easier goroutine handling and cancellation.\n* [queue](https://github.com/AnikHasibul/queue) - Gives you a `sync.WaitGroup` like queue group accessibility. Helps you to throttle and limit goroutines, wait for the end of the all goroutines and much more.\n* [routine](https://github.com/x-mod/routine) - go routine control with context, support: Main, Go, Pool and some useful Executors.\n* [semaphore](https://github.com/kamilsk/semaphore) - Semaphore pattern implementation with timeout of lock/unlock operations based on channel and context.\n* [semaphore](https://github.com/marusama/semaphore) - Fast resizable semaphore implementation based on CAS (faster than channel-based semaphore implementations).\n* [stl](https://github.com/ssgreg/stl) - Software transactional locks based on Software Transactional Memory (STM) concurrency control mechanism.\n* [threadpool](https://github.com/shettyh/threadpool) - Golang threadpool implementation.\n* [tunny](https://github.com/Jeffail/tunny) - Goroutine pool for golang.\n* [worker-pool](https://github.com/vardius/worker-pool) - goworker is a Go simple async worker pool.\n* [workerpool](https://github.com/gammazero/workerpool) - Goroutine pool that limits the concurrency of task execution, not the number of tasks queued.\n\n## GUI\n\n*Libraries for building GUI Applications.*\n\n*Toolkits*\n\n* [app](https://github.com/murlokswarm/app) - Package to create apps with GO, HTML and CSS. Supports: MacOS, Windows in progress.\n* [fyne](https://github.com/fyne-io/fyne) - Cross platform native GUIs designed for Go based on Material Design. Supports: Linux, macOS, Windows, BSD, iOS and Android.\n* [go-astilectron](https://github.com/asticode/go-astilectron) - Build cross platform GUI apps with GO and HTML/JS/CSS (powered by Electron).\n* [go-gtk](http://mattn.github.io/go-gtk/) - Go bindings for GTK.\n* [go-sciter](https://github.com/sciter-sdk/go-sciter) - Go bindings for Sciter: the Embeddable HTML/CSS/script engine for modern desktop UI development. Cross platform.\n* [gotk3](https://github.com/gotk3/gotk3) - Go bindings for GTK3.\n* [gowd](https://github.com/dtylman/gowd) - Rapid and simple desktop UI development with GO, HTML, CSS and NW.js. Cross platform.\n* [qt](https://github.com/therecipe/qt) - Qt binding for Go (support for Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi).\n* [ui](https://github.com/andlabs/ui) - Platform-native GUI library for Go. Cross platform.\n* [Wails](https://wails.app) - Mac, Windows, Linux desktop apps with HTML UI using built-in OS HTML renderer.\n* [walk](https://github.com/lxn/walk) - Windows application library kit for Go.\n* [webview](https://github.com/zserge/webview) - Cross-platform webview window with simple two-way JavaScript bindings (Windows / macOS / Linux).\n\n*Interaction*\n\n* [go-appindicator](https://github.com/dawidd6/go-appindicator) - Go bindings for libappindicator3 C library.\n* [gosx-notifier](https://github.com/deckarep/gosx-notifier) - OSX Desktop Notifications library for Go.\n* [mac-activity-tracker](https://github.com/prashantgupta24/activity-tracker) - OSX library to notify about any (pluggable) activity on your machine.\n* [mac-sleep-notifier](https://github.com/prashantgupta24/mac-sleep-notifier) - OSX Sleep/Wake notifications in golang.\n* [robotgo](https://github.com/go-vgo/robotgo) - Go Native cross-platform GUI system automation. Control the mouse, keyboard and other.\n* [systray](https://github.com/getlantern/systray) - Cross platform Go library to place an icon and menu in the notification area.\n* [trayhost](https://github.com/shurcooL/trayhost) - Cross-platform Go library to place an icon in the host operating system's taskbar.\n\n\n## Hardware\n\n*Libraries, tools, and tutorials for interacting with hardware.*\n\nSee [go-hardware](https://github.com/rakyll/go-hardware) for a comprehensive list.\n\n## Images\n\n*Libraries for manipulating images.*\n\n* [bild](https://github.com/anthonynsimon/bild) - Collection of image processing algorithms in pure Go.\n* [bimg](https://github.com/h2non/bimg) - Small package for fast and efficient image processing using libvips.\n* [cameron](https://github.com/aofei/cameron) - An avatar generator for Go.\n* [canvas](https://github.com/tdewolff/canvas) - Vector graphics to PDF, SVG or rasterized image.\n* [darkroom](https://github.com/gojek/darkroom) - An image proxy with changeable storage backends and image processing engines with focus on speed and resiliency.\n* [geopattern](https://github.com/pravj/geopattern) - Create beautiful generative image patterns from a string.\n* [gg](https://github.com/fogleman/gg) - 2D rendering in pure Go.\n* [gift](https://github.com/disintegration/gift) - Package of image processing filters.\n* [gltf](https://github.com/qmuntal/gltf) - Efficient and robust glTF 2.0 reader, writer and validator.\n* [go-cairo](https://github.com/ungerik/go-cairo) - Go binding for the cairo graphics library.\n* [go-gd](https://github.com/bolknote/go-gd) - Go binding for GD library.\n* [go-nude](https://github.com/koyachi/go-nude) - Nudity detection with Go.\n* [go-opencv](https://github.com/lazywei/go-opencv) - Go bindings for OpenCV.\n* [go-webcolors](https://github.com/jyotiska/go-webcolors) - Port of webcolors library from Python to Go.\n* [gocv](https://github.com/hybridgroup/gocv) - Go package for computer vision using OpenCV 3.3+.\n* [goimagehash](https://github.com/corona10/goimagehash) - Go Perceptual image hashing package.\n* [goimghdr](https://github.com/corona10/goimghdr) - The imghdr module determines the type of image contained in a file for Go.\n* [govatar](https://github.com/o1egl/govatar) - Library and CMD tool for generating funny avatars.\n* [image2ascii](https://github.com/qeesung/image2ascii) - Convert image to ASCII.\n* [imagick](https://github.com/gographics/imagick) - Go binding to ImageMagick's MagickWand C API.\n* [imaginary](https://github.com/h2non/imaginary) - Fast and simple HTTP microservice for image resizing.\n* [imaging](https://github.com/disintegration/imaging) - Simple Go image processing package.\n* [img](https://github.com/hawx/img) - Selection of image manipulation tools.\n* [ln](https://github.com/fogleman/ln) - 3D line art rendering in Go.\n* [mergi](https://github.com/noelyahan/mergi) - Tool & Go library for image manipulation (Merge, Crop, Resize, Watermark, Animate).\n* [mort](https://github.com/aldor007/mort) - Storage and image processing server written in Go.\n* [mpo](https://github.com/donatj/mpo) - Decoder and conversion tool for MPO 3D Photos.\n* [picfit](https://github.com/thoas/picfit) - An image resizing server written in Go.\n* [pt](https://github.com/fogleman/pt) - Path tracing engine written in Go.\n* [resize](https://github.com/nfnt/resize) - Image resizing for Go with common interpolation methods.\n* [rez](https://github.com/bamiaux/rez) - Image resizing in pure Go and SIMD.\n* [smartcrop](https://github.com/muesli/smartcrop) - Finds good crops for arbitrary images and crop sizes.\n* [steganography](https://github.com/auyer/steganography) - Pure Go Library for LSB steganography.\n* [stegify](https://github.com/DimitarPetrov/stegify) - Go tool for LSB steganography, capable of hiding any file within an image.\n* [svgo](https://github.com/ajstarks/svgo) - Go Language Library for SVG generation.\n* [tga](https://github.com/ftrvxmtrx/tga) - Package tga is a TARGA image format decoder/encoder.\n\n## IoT (Internet of Things)\n\n*Libraries for programming devices of the IoT.*\n\n* [connectordb](https://github.com/connectordb/connectordb) - Open-Source Platform for Quantified Self & IoT.\n* [devices](https://github.com/goiot/devices) - Suite of libraries for IoT devices, experimental for x/exp/io.\n* [eywa](https://github.com/xcodersun/eywa) - Project Eywa is essentially a connection manager that keeps track of connected devices.\n* [flogo](https://github.com/tibcosoftware/flogo) - Project Flogo is an Open Source Framework for IoT Edge Apps & Integration.\n* [gatt](https://github.com/paypal/gatt) - Gatt is a Go package for building Bluetooth Low Energy peripherals.\n* [gobot](https://github.com/hybridgroup/gobot/) - Gobot is a framework for robotics, physical computing, and the Internet of Things.\n* [huego](https://github.com/amimof/huego) - An extensive Philips Hue client library for Go.\n* [iot](https://github.com/vaelen/iot/) - IoT is a simple framework for implementing a Google IoT Core device.\n* [mainflux](https://github.com/Mainflux/mainflux) - Industrial IoT Messaging and Device Management Server.\n* [periph](https://periph.io/) - Peripherals I/O to interface with low-level board facilities.\n* [sensorbee](https://github.com/sensorbee/sensorbee) - Lightweight stream processing engine for IoT.\n\n## Job Scheduler\n\n*Libraries for scheduling jobs.*\n\n* [clockwerk](http://github.com/onatm/clockwerk) - Go package to schedule periodic jobs using a simple, fluent syntax.\n* [clockwork](https://github.com/whiteShtef/clockwork) - Simple and intuitive job scheduling library in Go.\n* [go-cron](https://github.com/rk/go-cron) - Simple Cron library for go that can execute closures or functions at varying intervals, from once a second to once a year on a specific date and time. Primarily for web applications and long running daemons.\n* [gron](https://github.com/roylee0704/gron) - Define time-based tasks using a simple Go API and Gron’s scheduler will run them accordingly.\n* [JobRunner](https://github.com/bamzi/jobrunner) - Smart and featureful cron job scheduler with job queuing and live monitoring built in.\n* [jobs](https://github.com/albrow/jobs) - Persistent and flexible background jobs library.\n* [leprechaun](https://github.com/kilgaloon/leprechaun) - Job scheduler that supports webhooks, crons and classic scheduling.\n* [scheduler](https://github.com/carlescere/scheduler) - Cronjobs scheduling made easy.\n\n## JSON\n\n*Libraries for working with JSON.*\n\n* [ajson](https://github.com/spyzhov/ajson) - Abstract JSON for golang with JSONPath support.\n* [ej](https://github.com/lucassscaravelli/ej) - Write and read JSON from different sources succinctly.\n* [gjo](https://github.com/skanehira/gjo) - Small utility to create JSON objects.\n* [GJSON](https://github.com/tidwall/gjson) - Get a JSON value with one line of code.\n* [go-jsonerror](https://github.com/ddymko/go-jsonerror) - Go-JsonError is ment to allow us to easily create json response errors that follow the JsonApi spec.\n* [go-respond](https://github.com/nicklaw5/go-respond) - Go package for handling common HTTP JSON responses.\n* [gojq](https://github.com/elgs/gojq) - JSON query in Golang.\n* [gojson](https://github.com/ChimeraCoder/gojson) - Automatically generate Go (golang) struct definitions from example JSON.\n* [JayDiff](https://github.com/yazgazan/jaydiff) - JSON diff utility written in Go.\n* [jettison](https://github.com/wI2L/jettison) - High performance, reflection-less JSON encoder for Go.\n* [JSON-to-Go](https://mholt.github.io/json-to-go/) - Convert JSON to Go struct.\n* [json2go](https://github.com/m-zajac/json2go) - Advanced JSON to Go struct conversion. Provides package that can parse multiple JSON documents and create struct to fit them all.\n* [jsonapi-errors](https://github.com/AmuzaTkts/jsonapi-errors) - Go bindings based on the JSON API errors reference.\n* [jsonf](https://github.com/miolini/jsonf) - Console tool for highlighted formatting and struct query fetching JSON.\n* [jsongo](https://github.com/ricardolonga/jsongo) - Fluent API to make it easier to create Json objects.\n* [jsonhal](https://github.com/RichardKnop/jsonhal) - Simple Go package to make custom structs marshal into HAL compatible JSON responses.\n* [kazaam](https://github.com/Qntfy/kazaam) - API for arbitrary transformation of JSON documents.\n* [mapslice-json](https://github.com/mickep76/mapslice-json) - Go MapSlice for ordered marshal/ unmarshal of maps in JSON.\n* [mp](https://github.com/sanbornm/mp) - Simple cli email parser. It currently takes stdin and outputs JSON.\n\n## Logging\n\n*Libraries for generating and working with log files.*\n\n* [distillog](https://github.com/amoghe/distillog) - distilled levelled logging (think of it as stdlib + log levels).\n* [glg](https://github.com/kpango/glg) - glg is simple and fast leveled logging library for Go.\n* [glo](https://github.com/lajosbencz/glo) - PHP Monolog inspired logging facility with identical severity levels.\n* [glog](https://github.com/golang/glog) - Leveled execution logs for Go.\n* [go-cronowriter](https://github.com/utahta/go-cronowriter) - Simple writer that rotate log files automatically based on current date and time, like cronolog.\n* [go-log](https://github.com/pieterclaerhout/go-log) - A logging library with strack traces, object dumping and optional timestamps.\n* [go-log](https://github.com/subchen/go-log) - Simple and configurable Logging in Go, with level, formatters and writers.\n* [go-log](https://github.com/siddontang/go-log) - Log lib supports level and multi handlers.\n* [go-log](https://github.com/ian-kent/go-log) - Log4j implementation in Go.\n* [go-logger](https://github.com/apsdehal/go-logger) - Simple logger of Go Programs, with level handlers.\n* [gologger](https://github.com/sadlil/gologger) - Simple easy to use log lib for go, logs in Colored Console, Simple Console, File or Elasticsearch.\n* [gomol](https://github.com/aphistic/gomol) - Multiple-output, structured logging for Go with extensible logging outputs.\n* [gone/log](https://github.com/One-com/gone/tree/master/log) - Fast, extendable, full-featured, std-lib source compatible log library.\n* [journald](https://github.com/ssgreg/journald) - Go implementation of systemd Journal's native API for logging.\n* [log](https://github.com/aerogo/log) - An O(1) logging system that allows you to connect one log to multiple writers (e.g. stdout, a file and a TCP connection).\n* [log](https://github.com/apex/log) - Structured logging package for Go.\n* [log](https://github.com/go-playground/log) - Simple, configurable and scalable Structured Logging for Go.\n* [log](https://github.com/teris-io/log) - Structured log interface for Go cleanly separates logging facade from its implementation.\n* [log-voyage](https://github.com/firstrow/logvoyage) - Full-featured logging saas written in golang.\n* [log15](https://github.com/inconshreveable/log15) - Simple, powerful logging for Go.\n* [logdump](https://github.com/ewwwwwqm/logdump) - Package for multi-level logging.\n* [logex](https://github.com/chzyer/logex) - Golang log lib, supports tracking and level, wrap by standard log lib.\n* [logger](https://github.com/azer/logger) - Minimalistic logging library for Go.\n* [logmatic](https://github.com/borderstech/logmatic) - Colorized logger for Golang with dynamic log level configuration.\n* [logo](https://github.com/mbndr/logo) - Golang logger to different configurable writers.\n* [logrus](https://github.com/Sirupsen/logrus) - Structured logger for Go.\n* [logrusiowriter](https://github.com/cabify/logrusiowriter) - `io.Writer` implementation using [logrus](https://github.com/sirupsen/logrus) logger.\n* [logrusly](https://github.com/sebest/logrusly) - [logrus](https://github.com/sirupsen/logrus) plug-in to send errors to a [Loggly](https://www.loggly.com/).\n* [logutils](https://github.com/hashicorp/logutils) - Utilities for slightly better logging in Go (Golang) extending the standard logger.\n* [logxi](https://github.com/mgutz/logxi) - 12-factor app logger that is fast and makes you happy.\n* [lumberjack](https://github.com/natefinch/lumberjack) - Simple rolling logger, implements io.WriteCloser.\n* [mlog](https://github.com/jbrodriguez/mlog) - Simple logging module for go, with 5 levels, an optional rotating logfile feature and stdout/stderr output.\n* [onelog](https://github.com/francoispqt/onelog) - Onelog is a dead simple but very efficient JSON logger. It is the fastest JSON logger out there in all scenario. Also, it is one of the logger with the lowest allocation.\n* [ozzo-log](https://github.com/go-ozzo/ozzo-log) - High performance logging supporting log severity, categorization, and filtering. Can send filtered log messages to various targets (e.g. console, network, mail).\n* [rollingwriter](https://github.com/arthurkiller/rollingWriter) - RollingWriter is an auto-rotate `io.Writer` implementation with multi policies to provide log file rotation.\n* [seelog](https://github.com/cihub/seelog) - Logging functionality with flexible dispatching, filtering, and formatting.\n* [spew](https://github.com/davecgh/go-spew) - Implements a deep pretty printer for Go data structures to aid in debugging.\n* [stdlog](https://github.com/alexcesaro/log) - Stdlog is an object-oriented library providing leveled logging. It is very useful for cron jobs.\n* [tail](https://github.com/hpcloud/tail) - Go package striving to emulate the features of the BSD tail program.\n* [xlog](https://github.com/xfxdev/xlog) - Plugin architecture and flexible log system for Go, with level ctrl, multiple log target and custom log format.\n* [xlog](https://github.com/rs/xlog) - Structured logger for `net/context` aware HTTP handlers with flexible dispatching.\n* [zap](https://github.com/uber-go/zap) - Fast, structured, leveled logging in Go.\n* [zerolog](https://github.com/rs/zerolog) - Zero-allocation JSON logger.\n\n## Machine Learning\n\n*Libraries for Machine Learning.*\n\n* [bayesian](https://github.com/jbrukh/bayesian) - Naive Bayesian Classification for Golang.\n* [CloudForest](https://github.com/ryanbressler/CloudForest) - Fast, flexible, multi-threaded ensembles of decision trees for machine learning in pure Go.\n* [eaopt](https://github.com/MaxHalford/eaopt) - An evolutionary optimization library.\n* [evoli](https://github.com/khezen/evoli) - Genetic Algorithm and Particle Swarm Optimization library.\n* [fonet](https://github.com/Fontinalis/fonet) - A Deep Neural Network library written in Go.\n* [go-cluster](https://github.com/e-XpertSolutions/go-cluster) - Go implementation of the k-modes and k-prototypes clustering algorithms.\n* [go-deep](https://github.com/patrikeh/go-deep) - A feature-rich neural network library in Go.\n* [go-fann](https://github.com/white-pony/go-fann) - Go bindings for Fast Artificial Neural Networks(FANN) library.\n* [go-galib](https://github.com/thoj/go-galib) - Genetic Algorithms library written in Go / golang.\n* [go-pr](https://github.com/daviddengcn/go-pr) - Pattern recognition package in Go lang.\n* [gobrain](https://github.com/goml/gobrain) - Neural Networks written in go.\n* [godist](https://github.com/e-dard/godist) - Various probability distributions, and associated methods.\n* [goga](https://github.com/tomcraven/goga) - Genetic algorithm library for Go.\n* [GoLearn](https://github.com/sjwhitworth/golearn) - General Machine Learning library for Go.\n* [golinear](https://github.com/danieldk/golinear) - liblinear bindings for Go.\n* [GoMind](https://github.com/surenderthakran/gomind) - A simplistic Neural Network Library in Go.\n* [goml](https://github.com/cdipaolo/goml) - On-line Machine Learning in Go.\n* [gonet](https://github.com/dathoangnd/gonet) - Neural Network for Go.\n* [Goptuna](https://github.com/c-bata/goptuna) - Bayesian optimization framework for black-box functions written in Go. Everything will be optimized.\n* [goRecommend](https://github.com/timkaye11/goRecommend) - Recommendation Algorithms library written in Go.\n* [gorgonia](https://github.com/gorgonia/gorgonia) - graph-based computational library like Theano for Go that provides primitives for building various machine learning and neural network algorithms.\n* [gorse](https://github.com/zhenghaoz/gorse) - An offline recommender system backend based on collaborative filtering written in Go.\n* [goscore](https://github.com/asafschers/goscore) - Go Scoring API for PMML.\n* [gosseract](https://github.com/otiai10/gosseract) - Go package for OCR (Optical Character Recognition), by using Tesseract C++ library.\n* [libsvm](https://github.com/datastream/libsvm) - libsvm golang version derived work based on LIBSVM 3.14.\n* [neat](https://github.com/jinyeom/neat) - Plug-and-play, parallel Go framework for NeuroEvolution of Augmenting Topologies (NEAT).\n* [neural-go](https://github.com/schuyler/neural-go) - Multilayer perceptron network implemented in Go, with training via backpropagation.\n* [ocrserver](https://github.com/otiai10/ocrserver) - A simple OCR API server, seriously easy to be deployed by Docker and Heroku.\n* [onnx-go](https://github.com/owulveryck/onnx-go) - Go Interface to Open Neural Network Exchange (ONNX).\n* [probab](https://github.com/ThePaw/probab) - Probability distribution functions. Bayesian inference. Written in pure Go.\n* [randomforest](https://github.com/malaschitz/randomForest) - Easy to use Random Forest library for Go.\n* [regommend](https://github.com/muesli/regommend) - Recommendation & collaborative filtering engine.\n* [shield](https://github.com/eaigner/shield) - Bayesian text classifier with flexible tokenizers and storage backends for Go.\n* [tfgo](https://github.com/galeone/tfgo) - Easy to use Tensorflow bindings: simplifies the usage of the official Tensorflow Go bindings. Define computational graphs in Go, load and execute models trained in Python.\n* [Varis](https://github.com/Xamber/Varis) - Golang Neural Network.\n\n## Messaging\n\n*Libraries that implement messaging systems.*\n\n* [ami](https://github.com/kak-tus/ami) - Go client to reliable queues based on Redis Cluster Streams.\n* [APNs2](https://github.com/sideshow/apns2) - HTTP/2 Apple Push Notification provider for Go — Send push notifications to iOS, tvOS, Safari and OSX apps.\n* [Asynq](https://github.com/hibiken/asynq) - A simple, reliable, and efficient distributed task queue for Go built on top of Redis.\n* [Beaver](https://github.com/Clivern/Beaver) - A real time messaging server to build a scalable in-app notifications, multiplayer games, chat apps in web and mobile apps.\n* [Benthos](https://github.com/Jeffail/benthos) - A message streaming bridge between a range of protocols.\n* [Bus](https://github.com/mustafaturan/bus) - Minimalist message bus implementation for internal communication.\n* [Centrifugo](https://github.com/centrifugal/centrifugo) - Real-time messaging (Websockets or SockJS) server in Go.\n* [Commander](https://github.com/jeroenrinzema/commander) - A high-level event driven consumer/producer supporting various \"dialects\" such as Apache Kafka.\n* [dbus](https://github.com/godbus/dbus) - Native Go bindings for D-Bus.\n* [drone-line](https://github.com/appleboy/drone-line) - Sending [Line](https://at.line.me/en) notifications using a binary, docker or Drone CI.\n* [emitter](https://github.com/olebedev/emitter) - Emits events using Go way, with wildcard, predicates, cancellation possibilities and many other good wins.\n* [event](https://github.com/agoalofalife/event) - Implementation of the pattern observer.\n* [EventBus](https://github.com/asaskevich/EventBus) - The lightweight event bus with async compatibility.\n* [gaurun-client](https://github.com/osamingo/gaurun-client) - Gaurun Client written in Go.\n* [Glue](https://github.com/desertbit/glue) - Robust Go and Javascript Socket Library (Alternative to Socket.io).\n* [go-notify](https://github.com/TheCreeper/go-notify) - Native implementation of the freedesktop notification spec.\n* [go-nsq](https://github.com/nsqio/go-nsq) - the official Go package for NSQ.\n* [go-res](https://github.com/jirenius/go-res) - Package for building REST/real-time services where clients are synchronized seamlessly, using NATS and Resgate.\n* [go-socket.io](https://github.com/googollee/go-socket.io) - socket.io library for golang, a realtime application framework.\n* [go-vitotrol](https://github.com/maxatome/go-vitotrol) - Client library to Viessmann Vitotrol web service.\n* [Gollum](https://github.com/trivago/gollum) - A n:m multiplexer that gathers messages from different sources and broadcasts them to a set of destinations.\n* [golongpoll](https://github.com/jcuga/golongpoll) - HTTP longpoll server library that makes web pub-sub simple.\n* [gopush-cluster](https://github.com/Terry-Mao/gopush-cluster) - gopush-cluster is a go push server cluster.\n* [gorush](https://github.com/appleboy/gorush) - Push notification server using [APNs2](https://github.com/sideshow/apns2) and google [GCM](https://github.com/google/go-gcm).\n* [guble](https://github.com/smancke/guble) - Messaging server using push notifications (Google Firebase Cloud Messaging, Apple Push Notification services, SMS) as well as websockets, a REST API, featuring distributed operation and message-persistence.\n* [hub](https://github.com/leandro-lugaresi/hub) - A Message/Event Hub for Go applications, using publish/subscribe pattern with support for alias like rabbitMQ exchanges.\n* [jazz](https://github.com/socifi/jazz) - A simple RabbitMQ abstraction layer for queue administration and publishing and consuming of messages.\n* [machinery](https://github.com/RichardKnop/machinery) - Asynchronous task queue/job queue based on distributed message passing.\n* [mangos](https://github.com/go-mangos/mangos) - Pure go implementation of the Nanomsg (\"Scalable Protocols\") with transport interoperability.\n* [melody](https://github.com/olahol/melody) - Minimalist framework for dealing with websocket sessions, includes broadcasting and automatic ping/pong handling.\n* [Mercure](https://github.com/dunglas/mercure) - Server and library to dispatch server-sent updates using the Mercure protocol (built on top of Server-Sent Events).\n* [messagebus](https://github.com/vardius/message-bus) - messagebus is a Go simple async message bus, perfect for using as event bus when doing event sourcing, CQRS, DDD.\n* [NATS Go Client](https://github.com/nats-io/nats) - Lightweight and high performance publish-subscribe and distributed queueing messaging system - this is the Go library.\n* [nsq-event-bus](https://github.com/rafaeljesus/nsq-event-bus) - A tiny wrapper around NSQ topic and channel.\n* [oplog](https://github.com/dailymotion/oplog) - Generic oplog/replication system for REST APIs.\n* [pubsub](https://github.com/tuxychandru/pubsub) - Simple pubsub package for go.\n* [rabbus](https://github.com/rafaeljesus/rabbus) - A tiny wrapper over amqp exchanges and queues.\n* [rabtap](https://github.com/jandelgado/rabtap) - RabbitMQ swiss army knife cli app.\n* [RapidMQ](https://github.com/sybrexsys/RapidMQ) - RapidMQ is a lightweight and reliable library for managing of the local messages queue.\n* [redisqueue](https://github.com/robinjoseph08/redisqueue) - redisqueue provides a producer and consumer of a queue that uses Redis streams.\n* [rmqconn](https://github.com/sbabiv/rmqconn) - RabbitMQ Reconnection. Wrapper over amqp.Connection and amqp.Dial. Allowing to do a reconnection when the connection is broken before forcing the call to the Close () method to be closed.\n* [sarama](https://github.com/Shopify/sarama) - Go library for Apache Kafka.\n* [Uniqush-Push](https://github.com/uniqush/uniqush-push) - Redis backed unified push service for server-side notifications to mobile devices.\n* [zmq4](https://github.com/pebbe/zmq4) - Go interface to ZeroMQ version 4. Also available for [version 3](https://github.com/pebbe/zmq3) and [version 2](https://github.com/pebbe/zmq2).\n\n## Microsoft Office\n\n* [unioffice](https://github.com/unidoc/unioffice) - Pure go library for creating and processing Office Word (.docx), Excel (.xlsx) and Powerpoint (.pptx) documents.\n\n### Microsoft Excel\n\n*Libraries for working with Microsoft Excel.*\n\n* [excelize](https://github.com/360EntSecGroup-Skylar/excelize) - Golang library for reading and writing Microsoft Excel™ (XLSX) files.\n* [go-excel](https://github.com/szyhf/go-excel) - A simple and light reader to read a relate-db-like excel as a table.\n* [goxlsxwriter](https://github.com/fterrag/goxlsxwriter) - Golang bindings for libxlsxwriter for writing XLSX (Microsoft Excel) files.\n* [xlsx](https://github.com/tealeg/xlsx) - Library to simplify reading the XML format used by recent version of Microsoft Excel in Go programs.\n* [xlsx](https://github.com/plandem/xlsx) - Fast and safe way to read/update your existing Microsoft Excel files in Go programs.\n\n## Miscellaneous\n\n### Dependency Injection\n\n*Libraries for working with dependency injection.*\n\n* [alice](https://github.com/magic003/alice) - Additive dependency injection container for Golang.\n* [container](https://github.com/golobby/container) - A powerful IoC Container with fluent and easy-to-use interface.\n* [di](https://github.com/goava/di) - A dependency injection container for go programming language.\n* [dig](https://github.com/uber-go/dig) - A reflection based dependency injection toolkit for Go.\n* [dingo](https://github.com/i-love-flamingo/dingo) - A dependency injection toolkit for Go, based on Guice.\n* [fx](https://github.com/uber-go/fx) - A dependency injection based application framework for Go (built on top of dig).\n* [gocontainer](https://github.com/vardius/gocontainer) - Simple Dependency Injection Container.\n* [linker](https://github.com/logrange/linker) - A reflection based dependency injection and inversion of control library with components lifecycle support.\n* [wire](https://github.com/Fs02/wire) - Strict Runtime Dependency Injection for Golang.\n\n### Project Layout\n\n*Unofficial set of patterns for structuring projects.*\n\n* [cookiecutter-golang](https://github.com/lacion/cookiecutter-golang) - A Go application boilerplate template for quick starting projects following production best practices.\n* [go-sample](https://github.com/zitryss/go-sample) - A sample layout for Go application projects with the real code.\n* [golang-standards/project-layout](https://github.com/golang-standards/project-layout) - Set of common historical and emerging project layout patterns in the Go ecosystem.\n* [modern-go-application](https://github.com/sagikazarmark/modern-go-application) - Go application boilerplate and example applying modern practices.\n* [scaffold](https://github.com/catchplay/scaffold) - Scaffold generates starter Go project layout. Lets you focus on business logic implemeted.\n\n### Strings\n\n*Libraries for working with strings.*\n\n* [strutil](https://github.com/ozgio/strutil) - String utilities.\n* [xstrings](https://github.com/huandu/xstrings) - Collection of useful string functions ported from other languages.\n\n*These libraries were placed here because none of the other categories seemed to fit.*\n\n* [anagent](https://github.com/mudler/anagent) - Minimalistic, pluggable Golang evloop/timer handler with dependency-injection.\n* [antch](https://github.com/antchfx/antch) - A fast, powerful and extensible web crawling & scraping framework.\n* [archiver](https://github.com/mholt/archiver) - Library and command for making and extracting .zip and .tar.gz archives.\n* [autoflags](https://github.com/artyom/autoflags) - Go package to automatically define command line flags from struct fields.\n* [avgRating](https://github.com/kirillDanshin/avgRating) - Calculate average score and rating based on Wilson Score Equation.\n* [banner](https://github.com/dimiro1/banner) - Add beautiful banners into your Go applications.\n* [base64Captcha](https://github.com/mojocn/base64Captcha) - Base64captch supports digit, number, alphabet, arithmetic, audio and digit-alphabet captcha.\n* [battery](https://github.com/distatus/battery) - Cross-platform, normalized battery information library.\n* [bitio](https://github.com/icza/bitio) - Highly optimized bit-level Reader and Writer for Go.\n* [browscap_go](https://github.com/digitalcrab/browscap_go) - GoLang Library for [Browser Capabilities Project](http://browscap.org/).\n* [captcha](https://github.com/steambap/captcha) - Package captcha provides an easy to use, unopinionated API for captcha generation.\n* [conv](https://github.com/cstockton/go-conv) - Package conv provides fast and intuitive conversions across Go types.\n* [datacounter](https://github.com/miolini/datacounter) - Go counters for readers/writer/http.ResponseWriter.\n* [ffmt](https://github.com/go-ffmt/ffmt) - Beautify data display for Humans.\n* [ghorg](https://github.com/gabrie30/ghorg) - Quickly clone an entire org/users repositories into one directory - Supports GitHub, GitLab, and Bitbucket.\n* [go-commons-pool](https://github.com/jolestar/go-commons-pool) - Generic object pool for Golang.\n* [go-openapi](https://github.com/go-openapi) - Collection of packages to parse and utilize open-api schemas.\n* [go-resiliency](https://github.com/eapache/go-resiliency) - Resiliency patterns for golang.\n* [go-unarr](https://github.com/gen2brain/go-unarr) - Decompression library for RAR, TAR, ZIP and 7z archives.\n* [gofakeit](https://github.com/brianvoe/gofakeit) - Random data generator written in go.\n* [gommit](https://github.com/antham/gommit) - Analyze git commit messages to ensure they follow defined patterns.\n* [gopsutil](https://github.com/shirou/gopsutil) - Cross-platform library for retrieving process and system utilization(CPU, Memory, Disks, etc).\n* [gosh](https://github.com/osamingo/gosh) - Provide Go Statistics Handler, Struct, Measure Method.\n* [gosms](https://github.com/haxpax/gosms) - Your own local SMS gateway in Go that can be used to send SMS.\n* [gotoprom](https://github.com/cabify/gotoprom) - Type-safe metrics builder wrapper library for the official Prometheus client.\n* [gountries](https://github.com/pariz/gountries) - Package that exposes country and subdivision data.\n* [health](https://github.com/dimiro1/health) - Easy to use, extensible health check library.\n* [healthcheck](https://github.com/etherlabsio/healthcheck) - An opinionated and concurrent health-check HTTP handler for RESTful services.\n* [hostutils](https://github.com/Wing924/hostutils) - A golang library for packing and unpacking FQDNs list.\n* [indigo](https://github.com/osamingo/indigo) - Distributed unique ID generator of using Sonyflake and encoded by Base58.\n* [lk](https://github.com/hyperboloide/lk) - A simple licensing library for golang.\n* [llvm](https://github.com/llir/llvm) - Library for interacting with LLVM IR in pure Go.\n* [metrics](https://github.com/pascaldekloe/metrics) - Library for metrics instrumentation and Prometheus exposition.\n* [morse](https://github.com/alwindoss/morse) - Library to convert to and from morse code.\n* [numa](https://github.com/lrita/numa) - NUMA is a utility library, which is written in go. It help us to write some NUMA-AWARED code.\n* [pdfgen](https://github.com/hyperboloide/pdfgen) - HTTP service to generate PDF from Json requests.\n* [persian](https://github.com/mavihq/persian) - Some utilities for Persian language in go.\n* [sandid](https://github.com/aofei/sandid) - Every grain of sand on earth has its own ID.\n* [shellwords](https://github.com/Wing924/shellwords) - A Golang library to manipulate strings according to the word parsing rules of the UNIX Bourne shell.\n* [shortid](https://github.com/teris-io/shortid) - Distributed generation of super short, unique, non-sequential, URL friendly IDs.\n* [stateless](https://github.com/qmuntal/stateless) - A fluent library for creating state machines.\n* [stats](https://github.com/go-playground/stats) - Monitors Go MemStats + System stats such as Memory, Swap and CPU and sends via UDP anywhere you want for logging etc...\n* [turtle](https://github.com/hackebrot/turtle) - Emojis for Go.\n* [url-shortener](https://github.com/pantrif/url-shortener) - A modern, powerful, and robust URL shortener microservice with mysql support.\n* [VarHandler](https://github.com/azr/generators/tree/master/varhandler) - Generate boilerplate http input and output handling.\n* [xdg](https://github.com/rkoesters/xdg) - FreeDesktop.org (xdg) Specs implemented in Go.\n* [xkg](https://github.com/go-xkg/xkg) - X Keyboard Grabber.\n\n## Natural Language Processing\n\n*Libraries for working with human languages.*\n\n* [detectlanguage](https://github.com/detectlanguage/detectlanguage-go) - Language Detection API Go Client. Supports batch requests, short phrase or single word language detection.\n* [getlang](https://github.com/rylans/getlang) - Fast natural language detection package.\n* [go-i18n](https://github.com/nicksnyder/go-i18n/) - Package and an accompanying tool to work with localized text.\n* [go-localize](https://github.com/m1/go-localize) - Simple and easy to use i18n (Internationalization and localization) engine - used for translating locale strings.\n* [go-mystem](https://github.com/dveselov/mystem) - CGo bindings to Yandex.Mystem - russian morphology analyzer.\n* [go-nlp](https://github.com/nuance/go-nlp) - Utilities for working with discrete probability distributions and other tools useful for doing NLP work.\n* [go-pinyin](https://github.com/mozillazg/go-pinyin) - CN Hanzi to Hanyu Pinyin converter.\n* [go-stem](https://github.com/agonopol/go-stem) - Implementation of the porter stemming algorithm.\n* [go-unidecode](https://github.com/mozillazg/go-unidecode) - ASCII transliterations of Unicode text.\n* [go2vec](https://github.com/danieldk/go2vec) - Reader and utility functions for word2vec embeddings.\n* [gojieba](https://github.com/yanyiwu/gojieba) - This is a Go implementation of [jieba](https://github.com/fxsjy/jieba) which a Chinese word splitting algorithm.\n* [golibstemmer](https://github.com/rjohnsondev/golibstemmer) - Go bindings for the snowball libstemmer library including porter 2.\n* [gotokenizer](https://github.com/xujiajun/gotokenizer) - A tokenizer based on the dictionary and Bigram language models for Golang. (Now only support chinese segmentation)\n* [gounidecode](https://github.com/fiam/gounidecode) - Unicode transliterator (also known as unidecode) for Go.\n* [gse](https://github.com/go-ego/gse) - Go efficient text segmentation; support english, chinese, japanese and other.\n* [icu](https://github.com/goodsign/icu) - Cgo binding for icu4c C library detection and conversion functions. Guaranteed compatibility with version 50.1.\n* [kagome](https://github.com/ikawaha/kagome) - JP morphological analyzer written in pure Go.\n* [libtextcat](https://github.com/goodsign/libtextcat) - Cgo binding for libtextcat C library. Guaranteed compatibility with version 2.2.\n* [MMSEGO](https://github.com/awsong/MMSEGO) - This is a GO implementation of [MMSEG](http://technology.chtsai.org/mmseg/) which a Chinese word splitting algorithm.\n* [nlp](https://github.com/Shixzie/nlp) - Extract values from strings and fill your structs with nlp.\n* [nlp](https://github.com/james-bowman/nlp) - Go Natural Language Processing library supporting LSA (Latent Semantic Analysis).\n* [paicehusk](https://github.com/rookii/paicehusk) - Golang implementation of the Paice/Husk Stemming Algorithm.\n* [petrovich](https://github.com/striker2000/petrovich) - Petrovich is the library which inflects Russian names to given grammatical case.\n* [porter](https://github.com/a2800276/porter) - This is a fairly straightforward port of Martin Porter's C implementation of the Porter stemming algorithm.\n* [porter2](https://github.com/zhenjl/porter2) - Really fast Porter 2 stemmer.\n* [prose](https://github.com/jdkato/prose) - Library for text processing that supports tokenization, part-of-speech tagging, named-entity extraction, and more. English only.\n* [RAKE.go](https://github.com/Obaied/RAKE.go) - Go port of the Rapid Automatic Keyword Extraction Algorithm (RAKE).\n* [segment](https://github.com/blevesearch/segment) - Go library for performing Unicode Text Segmentation as described in [Unicode Standard Annex #29](http://www.unicode.org/reports/tr29/)\n* [sentences](https://github.com/neurosnap/sentences) - Sentence tokenizer:  converts text into a list of sentences.\n* [shamoji](https://github.com/osamingo/shamoji) - The shamoji is word filtering package written in Go.\n* [snowball](https://github.com/goodsign/snowball) - Snowball stemmer port (cgo wrapper) for Go. Provides word stem extraction functionality [Snowball native](http://snowball.tartarus.org/).\n* [stemmer](https://github.com/dchest/stemmer) - Stemmer packages for Go programming language. Includes English and German stemmers.\n* [textcat](https://github.com/pebbe/textcat) - Go package for n-gram based text categorization, with support for utf-8 and raw text.\n* [whatlanggo](https://github.com/abadojack/whatlanggo) - Natural language detection package for Go. Supports 84 languages and 24 scripts (writing systems e.g. Latin, Cyrillic, etc).\n* [when](https://github.com/olebedev/when) - Natural EN and RU language date/time parser with pluggable rules.\n\n## Networking\n\n*Libraries for working with various layers of the network.*\n\n* [arp](https://github.com/mdlayher/arp) - Package arp implements the ARP protocol, as described in RFC 826.\n* [buffstreams](https://github.com/stabbycutyou/buffstreams) - Streaming protocolbuffer data over TCP made easy.\n* [canopus](https://github.com/zubairhamed/canopus) - CoAP Client/Server implementation (RFC 7252).\n* [cidranger](https://github.com/yl2chen/cidranger) - Fast IP to CIDR lookup for Go.\n* [dhcp6](https://github.com/mdlayher/dhcp6) - Package dhcp6 implements a DHCPv6 server, as described in RFC 3315.\n* [dns](https://github.com/miekg/dns) - Go library for working with DNS.\n* [ether](https://github.com/songgao/ether) - Cross-platform Go package for sending and receiving ethernet frames.\n* [ethernet](https://github.com/mdlayher/ethernet) - Package ethernet implements marshaling and unmarshaling of IEEE 802.3 Ethernet II frames and IEEE 802.1Q VLAN tags.\n* [fasthttp](https://github.com/valyala/fasthttp) - Package fasthttp is a fast HTTP implementation for Go, up to 10 times faster than net/http.\n* [fortio](https://github.com/fortio/fortio) - Load testing library and command line tool, advanced echo server and web UI. Allows to specify a set query-per-second load and record latency histograms and other useful stats and graph them. Tcp, Http, gRPC.\n* [ftp](https://github.com/jlaffaye/ftp) - Package ftp implements a FTP client as described in [RFC 959](http://tools.ietf.org/html/rfc959).\n* [gaio](https://github.com/xtaci/gaio) - High performance async-io networking for Golang in proactor mode.\n* [gev](https://github.com/Allenxuxu/gev) - gev is a lightweight, fast non-blocking TCP network library based on Reactor mode.\n* [gmqtt](https://github.com/DrmagicE/gmqtt) - Gmqtt is a flexible, high-performance MQTT broker library that fully implements the MQTT protocol V3.1.1.\n* [gnet](https://github.com/panjf2000/gnet) - `gnet` is a high-performance, lightweight, non-blocking, event-driven networking framework written in pure Go.\n* [gNxI](https://github.com/google/gnxi) - A collection of tools for Network Management that use the gNMI and gNOI protocols.\n* [go-getter](https://github.com/hashicorp/go-getter) - Go library for downloading files or directories from various sources using a URL.\n* [go-powerdns](https://github.com/joeig/go-powerdns) - PowerDNS API bindings for Golang.\n* [go-stun](https://github.com/ccding/go-stun) - Go implementation of the STUN client (RFC 3489 and RFC 5389).\n* [gobgp](https://github.com/osrg/gobgp) - BGP implemented in the Go Programming Language.\n* [golibwireshark](https://github.com/sunwxg/golibwireshark) - Package golibwireshark use libwireshark library to decode pcap file and analyse dissection data.\n* [gopacket](https://github.com/google/gopacket) - Go library for packet processing with libpcap bindings.\n* [gopcap](https://github.com/akrennmair/gopcap) - Go wrapper for libpcap.\n* [goshark](https://github.com/sunwxg/goshark) - Package goshark use tshark to decode IP packet and create data struct to analyse packet.\n* [gosnmp](https://github.com/soniah/gosnmp) - Native Go library for performing SNMP actions.\n* [gosocsvr](https://github.com/rakeki/gosocsvr) - Socket server made simple.\n* [gotcp](https://github.com/gansidui/gotcp) - Go package for quickly writing tcp applications.\n* [grab](https://github.com/cavaliercoder/grab) - Go package for managing file downloads.\n* [graval](https://github.com/koofr/graval) - Experimental FTP server framework.\n* [HTTPLab](https://github.com/gchaincl/httplab) - HTTPLabs let you inspect HTTP requests and forge responses.\n* [httpproxy](https://github.com/wzshiming/httpproxy) - HTTP proxy handler and dialer.\n* [iplib](https://github.com/c-robinson/iplib) - Library for working with IP addresses (net.IP, net.IPNet), inspired by python [ipaddress](https://docs.python.org/3/library/ipaddress.html) and ruby [ipaddr](https://ruby-doc.org/stdlib-2.5.1/libdoc/ipaddr/rdoc/IPAddr.html)\n* [jazigo](https://github.com/udhos/jazigo) - Jazigo is a tool written in Go for retrieving configuration for multiple network devices.\n* [kcp-go](https://github.com/xtaci/kcp-go) - KCP - Fast and Reliable ARQ Protocol.\n* [kcptun](https://github.com/xtaci/kcptun) - Extremely simple & fast udp tunnel based on KCP protocol.\n* [lhttp](https://github.com/fanux/lhttp) - Powerful websocket framework, build your IM server more easily.\n* [linkio](https://github.com/ian-kent/linkio) - Network link speed simulation for Reader/Writer interfaces.\n* [llb](https://github.com/kirillDanshin/llb) - It's a very simple but quick backend for proxy servers. Can be useful for fast redirection to predefined domain with zero memory allocation and fast response.\n* [mdns](https://github.com/hashicorp/mdns) - Simple mDNS (Multicast DNS) client/server library in Golang.\n* [mqttPaho](https://eclipse.org/paho/clients/golang/) - The Paho Go Client provides an MQTT client library for connection to MQTT brokers via TCP, TLS or WebSockets.\n* [NFF-Go](https://github.com/intel-go/nff-go) - Framework for rapid development of performant network functions for cloud and bare-metal (former YANFF).\n* [packet](https://github.com/aerogo/packet) - Send packets over TCP and UDP. It can buffer messages and hot-swap connections if needed.\n* [peerdiscovery](https://github.com/schollz/peerdiscovery) - Pure Go library for cross-platform local peer discovery using UDP multicast.\n* [portproxy](https://github.com/aybabtme/portproxy) - Simple TCP proxy which adds CORS support to API's which don't support it.\n* [publicip](https://github.com/polera/publicip) - Package publicip returns your public facing IPv4 address (internet egress).\n* [quic-go](https://github.com/lucas-clemente/quic-go) - An implementation of the QUIC protocol in pure Go.\n* [raw](https://github.com/mdlayher/raw) - Package raw enables reading and writing data at the device driver level for a network interface.\n* [sftp](https://github.com/pkg/sftp) - Package sftp implements the SSH File Transfer Protocol as described in https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt.\n* [ssh](https://github.com/gliderlabs/ssh) - Higher-level API for building SSH servers (wraps crypto/ssh).\n* [sslb](https://github.com/eduardonunesp/sslb) - It's a Super Simples Load Balancer, just a little project to achieve some kind of performance.\n* [stun](https://github.com/go-rtc/stun) - Go implementation of RFC 5389 STUN protocol.\n* [tcp_server](https://github.com/firstrow/tcp_server) - Go library for building tcp servers faster.\n* [tspool](https://github.com/two/tspool) - A TCP Library use worker pool to improve performance and protect your server.\n* [utp](https://github.com/anacrolix/utp) - Go uTP micro transport protocol implementation.\n* [water](https://github.com/songgao/water) - Simple TUN/TAP library.\n* [webrtc](https://github.com/pions/webrtc) - A pure Go implementation of the WebRTC API.\n* [winrm](https://github.com/masterzen/winrm) - Go WinRM client to remotely execute commands on Windows machines.\n* [xtcp](https://github.com/xfxdev/xtcp) - TCP Server Framework with simultaneous full duplex communication,graceful shutdown,custom protocol.\n\n### HTTP Clients\n\n*Libraries for making HTTP requests.*\n\n* [gentleman](https://github.com/h2non/gentleman) - Full-featured plugin-driven HTTP client library.\n* [go-http-client](https://github.com/bozd4g/go-http-client) - Make http calls simply and easily.\n* [grequests](https://github.com/levigross/grequests) - A Go \"clone\" of the great and famous Requests library.\n* [heimdall](https://github.com/gojektech/heimdall) - An enchanced http client with retry and hystrix capabilities.\n* [httpretry](https://github.com/ybbus/httpretry) - Enriches the default go HTTP client with retry functionality.\n* [pester](https://github.com/sethgrid/pester) - Go HTTP client calls with retries, backoff, and concurrency.\n* [resty](https://github.com/go-resty/resty) - Simple HTTP and REST client for Go inspired by Ruby rest-client.\n* [rq](https://github.com/ddo/rq) - A nicer interface for golang stdlib HTTP client.\n* [sling](https://github.com/dghubble/sling) - Sling is a Go HTTP client library for creating and sending API requests.\n\n## OpenGL\n\n*Libraries for using OpenGL in Go.*\n\n* [gl](https://github.com/go-gl/gl) - Go bindings for OpenGL (generated via glow).\n* [glfw](https://github.com/go-gl/glfw) - Go bindings for GLFW 3.\n* [goxjs/gl](https://github.com/goxjs/gl) - Go cross-platform OpenGL bindings (OS X, Linux, Windows, browsers, iOS, Android).\n* [goxjs/glfw](https://github.com/goxjs/glfw) - Go cross-platform glfw library for creating an OpenGL context and receiving events.\n* [mathgl](https://github.com/go-gl/mathgl) - Pure Go math package specialized for 3D math, with inspiration from GLM.\n\n## ORM\n\n*Libraries that implement Object-Relational Mapping or datamapping techniques.*\n\n* [beego orm](https://github.com/astaxie/beego/tree/master/orm) - Powerful orm framework for go. Support: pq/mysql/sqlite3.\n* [go-firestorm](https://github.com/jschoedt/go-firestorm) - A simple ORM for Google/Firebase Cloud Firestore.\n* [go-pg](https://github.com/go-pg/pg) - PostgreSQL ORM with focus on PostgreSQL specific features and performance.\n* [go-queryset](https://github.com/jirfag/go-queryset) - 100% type-safe ORM with code generation and MySQL, PostgreSQL, Sqlite3, SQL Server support based on GORM.\n* [go-sqlbuilder](https://github.com/huandu/go-sqlbuilder) - A flexible and powerful SQL string builder library plus a zero-config ORM.\n* [go-store](https://github.com/gosuri/go-store) - Simple and fast Redis backed key-value store library for Go.\n* [GORM](https://github.com/jinzhu/gorm) - The fantastic ORM library for Golang, aims to be developer friendly.\n* [gormt](https://github.com/xxjwxc/gormt) - Mysql database to golang gorm struct.\n* [gorp](https://github.com/go-gorp/gorp) - Go Relational Persistence, ORM-ish library for Go.\n* [grimoire](https://github.com/Fs02/grimoire) - Grimoire is a database access layer and validation for golang. (Support: MySQL, PostgreSQL and SQLite3).\n* [lore](https://github.com/abrahambotros/lore) - Simple and lightweight pseudo-ORM/pseudo-struct-mapping environment for Go.\n* [Marlow](https://github.com/dadleyy/marlow) - Generated ORM from project structs for compile time safety assurances.\n* [pop/soda](https://github.com/gobuffalo/pop) - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.\n* [QBS](https://github.com/coocood/qbs) - Stands for Query By Struct. A Go ORM.\n* [reform](https://github.com/go-reform/reform) - Better ORM for Go, based on non-empty interfaces and code generation.\n* [rel](https://github.com/Fs02/rel) - Golang SQL Repository Layer for Clean (Onion) Architecture.\n* [SQLBoiler](https://github.com/volatiletech/sqlboiler) - ORM generator. Generate a featureful and blazing-fast ORM tailored to your database schema.\n* [upper.io/db](https://github.com/upper/db) - Single interface for interacting with different data sources through the use of adapters that wrap mature database drivers.\n* [Xorm](https://github.com/go-xorm/xorm) - Simple and powerful ORM for Go.\n* [Zoom](https://github.com/albrow/zoom) - Blazing-fast datastore and querying engine built on Redis.\n\n## Package Management\n\n*Official tooling for dependency and package management*\n\n* [go modules](https://golang.org/cmd/go/#hdr-Modules__module_versions__and_more) - Modules are the unit of source code interchange and versioning. The go command has direct support for working with modules, including recording and resolving dependencies on other modules.\n\n*Official experimental tooling for package management*\n\n* [dep](https://github.com/golang/dep) - Go dependency tool.\n* [vgo](https://go.googlesource.com/vgo/) - Versioned Go.\n\n*Unofficial libraries for package and dependency management.*\n\n* [gigo](https://github.com/LyricalSecurity/gigo) - PIP-like dependency tool for golang, with support for private repositories and hashes.\n* [glide](https://github.com/Masterminds/glide) - Manage your golang vendor and vendored packages with ease. Inspired by tools like Maven, Bundler, and Pip.\n* [godep](https://github.com/tools/godep) - dependency tool for go, godep helps build packages reproducibly by fixing their dependencies.\n* [gom](https://github.com/mattn/gom) - Go Manager - bundle for go.\n* [goop](https://github.com/nitrous-io/goop) - Simple dependency manager for Go (golang), inspired by Bundler.\n* [gop](https://github.com/lunny/gop) - Build and manage your Go applications out of GOPATH.\n* [gopm](https://github.com/gpmgo/gopm) - Go Package Manager.\n* [govendor](https://github.com/kardianos/govendor) - Go Package Manager. Go vendor tool that works with the standard vendor file.\n* [gpm](https://github.com/pote/gpm) - Barebones dependency manager for Go.\n* [johnny-deps](https://github.com/VividCortex/johnny-deps) - Minimal dependency version using Git.\n* [mvn-golang](https://github.com/raydac/mvn-golang) - plugin that provides way for auto-loading of Golang SDK, dependency management and start build environment in Maven project infrastructure.\n* [nut](https://github.com/jingweno/nut) - Vendor Go dependencies.\n* [VenGO](https://github.com/DamnWidget/VenGO) - create and manage exportable isolated go virtual environments.\n\n## Performance\n\n* [jaeger](https://github.com/jaegertracing/jaeger) - A distributed tracing system.\n* [profile](https://github.com/pkg/profile) - Simple profiling support package for Go.\n* [tracer](https://github.com/kamilsk/tracer) - Simple, lightweight tracing.\n\n## Query Language\n\n* [gojsonq](https://github.com/thedevsaddam/gojsonq) - A simple Go package to Query over JSON Data.\n* [graphql](https://github.com/tmc/graphql) - graphql parser + utilities.\n* [graphql](https://github.com/neelance/graphql-go) - GraphQL server with a focus on ease of use.\n* [graphql-go](https://github.com/graphql-go/graphql) - Implementation of GraphQL for Go.\n* [jsonql](https://github.com/elgs/jsonql) - JSON query expression library in Golang.\n* [jsonslice](https://github.com/bhmj/jsonslice) - Jsonpath queries with advanced filters.\n* [rql](https://github.com/a8m/rql) - Resource Query Language for REST API.\n* [straf](https://github.com/SonicRoshan/straf) - Easily Convert Golang structs to GraphQL objects.\n\n## Resource Embedding\n\n* [esc](https://github.com/mjibson/esc) - Embeds files into Go programs and provides http.FileSystem interfaces to them.\n* [fileb0x](https://github.com/UnnoTed/fileb0x) - Simple tool to embed files in go with focus on \"customization\" and ease to use.\n* [go-embed](https://github.com/pyros2097/go-embed) - Generates go code to embed resource files into your library or executable.\n* [go-resources](https://github.com/omeid/go-resources) - Unfancy resources embedding with Go.\n* [go.rice](https://github.com/GeertJohan/go.rice) - go.rice is a Go package that makes working with resources such as html,js,css,images and templates very easy.\n* [mule](https://github.com/wlbr/mule) - Embed external resources like images, movies ... into Go source code to create single file binaries using `go generate`. Focussed on simplicity.\n* [packr](https://github.com/gobuffalo/packr) - The simple and easy way to embed static files into Go binaries.\n* [statics](https://github.com/go-playground/statics) - Embeds static resources into go files for single binary compilation + works with http.FileSystem + symlinks.\n* [statik](https://github.com/rakyll/statik) - Embeds static files into a Go executable.\n* [templify](https://github.com/wlbr/templify) - Embed external template files into Go code to create single file binaries.\n* [vfsgen](https://github.com/shurcooL/vfsgen) - Generates a vfsdata.go file that statically implements the given virtual filesystem.\n\n## Science and Data Analysis\n\n*Libraries for scientific computing and data analyzing.*\n\n* [assocentity](https://github.com/ndabAP/assocentity) - Package assocentity returns the average distance from words to a given entity.\n* [bradleyterry](https://github.com/seanhagen/bradleyterry) - Provides a Bradley-Terry Model for pairwise comparisons.\n* [chart](https://github.com/vdobler/chart) - Simple Chart Plotting library for Go. Supports many graphs types.\n* [dataframe-go](https://github.com/rocketlaunchr/dataframe-go) - Dataframes for machine-learning and statistics (similar to pandas).\n* [evaler](https://github.com/soniah/evaler) - Simple floating point arithmetic expression evaluator.\n* [ewma](https://github.com/VividCortex/ewma) - Exponentially-weighted moving averages.\n* [geom](https://github.com/skelterjohn/geom) - 2D geometry for golang.\n* [go-dsp](https://github.com/mjibson/go-dsp) - Digital Signal Processing for Go.\n* [go-gt](https://github.com/ThePaw/go-gt) - Graph theory algorithms written in \"Go\" language.\n* [goent](https://github.com/kzahedi/goent) - GO Implementation of Entropy Measures.\n* [gohistogram](https://github.com/VividCortex/gohistogram) - Approximate histograms for data streams.\n* [gonum](https://github.com/gonum/gonum) - Gonum is a set of numeric libraries for the Go programming language. It contains libraries for matrices, statistics, optimization, and more.\n* [gonum/plot](https://github.com/gonum/plot) - gonum/plot provides an API for building and drawing plots in Go.\n* [goraph](https://github.com/gyuho/goraph) - Pure Go graph theory library(data structure, algorith visualization).\n* [gosl](https://github.com/cpmech/gosl) - Go scientific library for linear algebra, FFT, geometry, NURBS, numerical methods, probabilities, optimisation, differential equations, and more.\n* [GoStats](https://github.com/OGFris/GoStats) - GoStats is an Open Source GoLang library for math statistics mostly used in Machine Learning domains, it covers most of the Statistical measures functions.\n* [graph](https://github.com/yourbasic/graph) - Library of basic graph algorithms.\n* [ode](https://github.com/ChristopherRabotin/ode) - Ordinary differential equation (ODE) solver which supports extended states and channel-based iteration stop conditions.\n* [orb](https://github.com/paulmach/orb) - 2D geometry types with clipping, GeoJSON and Mapbox Vector Tile support.\n* [pagerank](https://github.com/alixaxel/pagerank) - Weighted PageRank algorithm implemented in Go.\n* [piecewiselinear](https://github.com/sgreben/piecewiselinear) - Tiny linear interpolation library.\n* [PiHex](https://github.com/claygod/PiHex) - Implementation of the \"Bailey-Borwein-Plouffe\" algorithm for the hexadecimal number Pi.\n* [rootfinding](https://github.com/khezen/rootfinding) - root-finding algorithms library for finding roots of quadratic functions.\n* [sparse](https://github.com/james-bowman/sparse) - Go Sparse matrix formats for linear algebra supporting scientific and machine learning applications, compatible with gonum matrix libraries.\n* [stats](https://github.com/montanaflynn/stats) - Statistics package with common functions missing from the Golang standard library.\n* [streamtools](https://github.com/nytlabs/streamtools) - general purpose, graphical tool for dealing with streams of data.\n* [TextRank](https://github.com/DavidBelicza/TextRank) - TextRank implementation in Golang with extendable features (summarization, weighting, phrase extraction) and multithreading (goroutine) support.\n* [triangolatte](https://github.com/tchayen/triangolatte) - 2D triangulation library. Allows translating lines and polygons (both based on points) to the language of GPUs.\n\n## Security\n\n*Libraries that are used to help make your application more secure.*\n\n* [acmetool](https://github.com/hlandau/acme) - ACME (Let's Encrypt) client tool with automatic renewal.\n* [acra](https://github.com/cossacklabs/acra) - Network encryption proxy to protect database-based applications from data leaks: strong selective encryption, SQL injections prevention, intrusion detection system.\n* [argon2pw](https://github.com/raja/argon2pw) - Argon2 password hash generation with constant-time password comparison.\n* [autocert](https://godoc.org/golang.org/x/crypto/acme/autocert) - Auto provision Let's Encrypt certificates and start a TLS server.\n* [BadActor](https://github.com/jaredfolkins/badactor) - In-memory, application-driven jailer built in the spirit of fail2ban.\n* [Cameradar](https://github.com/Ullaakut/cameradar) - Tool and library to remotely hack RTSP streams from surveillance cameras.\n* [certificates](https://github.com/mvmaasakkers/certificates) - An opinionated tool for generating tls certificates.\n* [go-generate-password](https://github.com/m1/go-generate-password) - Password generator that can be used on the cli or as a library.\n* [go-yara](https://github.com/hillu/go-yara) - Go Bindings for [YARA](https://github.com/plusvic/yara), the \"pattern matching swiss knife for malware researchers (and everyone else)\".\n* [goArgonPass](https://github.com/dwin/goArgonPass) - Argon2 password hash and verification designed to be compatible with existing Python and PHP implementations.\n* [goSecretBoxPassword](https://github.com/dwin/goSecretBoxPassword) - A probably paranoid package for securely hashing and encrypting passwords.\n* [Interpol](https://bitbucket.org/vahidi/interpol) - Rule-based data generator for fuzzing and penetration testing.\n* [lego](https://github.com/xenolf/lego) - Pure Go ACME client library and CLI tool (for use with Let's Encrypt).\n* [memguard](https://github.com/awnumar/memguard) - A pure Go library for handling sensitive values in memory.\n* [nacl](https://github.com/kevinburke/nacl) - Go implementation of the NaCL set of API's.\n* [optimus-go](https://github.com/pjebs/optimus-go) - ID hashing and Obfuscation using Knuth's Algorithm.\n* [passlib](https://github.com/hlandau/passlib) - Futureproof password hashing library.\n* [secure](https://github.com/unrolled/secure) - HTTP middleware for Go that facilitates some quick security wins.\n* [secureio](https://github.com/xaionaro-go/secureio) - An keyexchanging+authenticating+encrypting wrapper and multiplexer for `io.ReadWriteCloser` based on XChaCha20-poly1305, ECDH and ED25519.\n* [simple-scrypt](https://github.com/elithrar/simple-scrypt) - Scrypt package with a simple, obvious API and automatic cost calibration built-in.\n* [ssh-vault](https://github.com/ssh-vault/ssh-vault) - encrypt/decrypt using ssh keys.\n* [sslmgr](https://github.com/adrianosela/sslmgr) - SSL certificates made easy with a high level wrapper around acme/autocert.\n\n## Serialization\n\n*Libraries and tools for binary serialization.*\n\n* [asn1](https://github.com/PromonLogicalis/asn1) - Asn.1 BER and DER encoding library for golang.\n* [bambam](https://github.com/glycerine/bambam) - generator for Cap'n Proto schemas from go.\n* [bel](https://github.com/32leaves/bel) - Generate TypeScript interfaces from Go structs/interfaces. Useful for JSON RPC.\n* [binstruct](https://github.com/ghostiam/binstruct) - Golang binary decoder for mapping data into the structure.\n* [cbor](https://github.com/fxamacker/cbor) - Small, safe, and easy CBOR encoding and decoding library.\n* [colfer](https://github.com/pascaldekloe/colfer) - Code generation for the Colfer binary format.\n* [csvutil](https://github.com/jszwec/csvutil) - High Performance, idiomatic CSV record encoding and decoding to native Go structures.\n* [elastic](https://github.com/epiclabs-io/elastic) - Convert slices, maps or any other unknown value across different types at run-time, no matter what.\n* [fixedwidth](https://github.com/huydang284/fixedwidth) - Fixed-width text formatting (UTF-8 supported).\n* [fwencoder](https://github.com/o1egl/fwencoder) - Fixed width file parser (encoding and decoding library) for Go.\n* [go-capnproto](https://github.com/glycerine/go-capnproto) - Cap'n Proto library and parser for go.\n* [go-codec](https://github.com/ugorji/go) - High Performance, feature-Rich, idiomatic encode, decode and rpc library for msgpack, cbor and json, with runtime-based OR code-generation support.\n* [gogoprotobuf](https://github.com/gogo/protobuf) - Protocol Buffers for Go with Gadgets.\n* [goprotobuf](https://github.com/golang/protobuf) - Go support, in the form of a library and protocol compiler plugin, for Google's protocol buffers.\n* [jsoniter](https://github.com/json-iterator/go) - High-performance 100% compatible drop-in replacement of \"encoding/json\".\n* [mapstructure](https://github.com/mitchellh/mapstructure) - Go library for decoding generic map values into native Go structures.\n* [php_session_decoder](https://github.com/yvasiyarov/php_session_decoder) - GoLang library for working with PHP session format and PHP Serialize/Unserialize functions.\n* [pletter](https://github.com/vimeda/pletter) - A standard way to wrap a proto message for message brokers.\n* [structomap](https://github.com/tuvistavie/structomap) - Library to easily and dynamically generate maps from static structures.\n\n## Server Applications\n\n* [algernon](https://github.com/xyproto/algernon) - HTTP/2 web server with built-in support for Lua, Markdown, GCSS and Amber.\n* [Caddy](https://github.com/mholt/caddy) - Caddy is an alternative, HTTP/2 web server that's easy to configure and use.\n* [consul](https://www.consul.io/) - Consul is a tool for service discovery, monitoring and configuration.\n* [devd](https://github.com/cortesi/devd) - Local webserver for developers.\n* [discovery](https://github.com/Bilibili/discovery) - A registry for resilient mid-tier load balancing and failover.\n* [dudeldu](https://github.com/krotik/dudeldu) - A simple SHOUTcast server.\n* [etcd](https://github.com/coreos/etcd) - Highly-available key value store for shared configuration and service discovery.\n* [Fider](https://github.com/getfider/fider) - Fider is an open platform to collect and organize customer feedback.\n* [Flagr](https://github.com/checkr/flagr) - Flagr is an open-source feature flagging and A/B testing service.\n* [flipt](https://github.com/markphelps/flipt) - A self contained feature flag solution written in Go and Vue.js\n* [jackal](https://github.com/ortuman/jackal) - An XMPP server written in Go.\n* [lets-proxy2](https://github.com/rekby/lets-proxy2) - Reverse proxy for handle https with issue certificates in fly from lets-encrypt.\n* [minio](https://github.com/minio/minio) - Minio is a distributed object storage server.\n* [nginx-prometheus](https://github.com/blind-oracle/nginx-prometheus) - Nginx log parser and exporter to Prometheus.\n* [nsq](http://nsq.io/) - A realtime distributed messaging platform.\n* [psql-streamer](https://github.com/blind-oracle/psql-streamer) - Stream database events from PostgreSQL to Kafka.\n* [riemann-relay](https://github.com/blind-oracle/riemann-relay) - Relay to load-balance Riemann events and/or convert them to Carbon.\n* [RoadRunner](https://github.com/spiral/roadrunner) - High-performance PHP application server, load-balancer and process manager.\n* [SFTPGo](https://github.com/drakkan/sftpgo) - Full featured and highly configurable SFTP server software.\n* [Trickster](https://github.com/Comcast/trickster) - HTTP reverse proxy cache and time series accelerator.\n* [yakvs](https://git.sci4me.com/sci4me/yakvs) - Small, networked, in-memory key-value store.\n\n\n## Stream Processing\n\n*Libraries and tools for stream processing and reactive programming.*\n\n* [go-streams](https://github.com/reugn/go-streams) - Go stream processing library.\n\n## Template Engines\n\n*Libraries and tools for templating and lexing.*\n\n* [ace](https://github.com/yosssi/ace) - Ace is an HTML template engine for Go, inspired by Slim and Jade. Ace is a refinement of Gold.\n* [amber](https://github.com/eknkc/amber) - Amber is an elegant templating engine for Go Programming Language It is inspired from HAML and Jade.\n* [damsel](https://github.com/dskinner/damsel) - Markup language featuring html outlining via css-selectors, extensible via pkg html/template and others.\n* [ego](https://github.com/benbjohnson/ego) - Lightweight templating language that lets you write templates in Go. Templates are translated into Go and compiled.\n* [extemplate](https://github.com/dannyvankooten/extemplate) - Tiny wrapper around html/template to allow for easy file-based template inheritance.\n* [fasttemplate](https://github.com/valyala/fasttemplate) - Simple and fast template engine. Substitutes template placeholders up to 10x faster than [text/template](http://golang.org/pkg/text/template/).\n* [gofpdf](https://github.com/jung-kurt/gofpdf) - PDF document generator with high level support for text, drawing and images.\n* [gospin](https://github.com/m1/gospin) - Article spinning and spintax/spinning syntax engine, useful for A/B, testing pieces of text/articles and creating more natural conversations.\n* [goview](https://github.com/foolin/goview) - Goview is a lightweight, minimalist and idiomatic template library based on golang html/template for building Go web application.\n* [hero](https://github.com/shiyanhui/hero) - Hero is a handy, fast and powerful go template engine.\n* [jet](https://github.com/CloudyKit/jet) - Jet template engine.\n* [kasia.go](https://github.com/ziutek/kasia.go) - Templating system for HTML and other text documents - go implementation.\n* [liquid](https://github.com/osteele/liquid) - Go implementation of Shopify Liquid templates.\n* [maroto](https://github.com/johnfercher/maroto) - A maroto way to create PDFs. Maroto is inspired in Bootstrap and uses gofpdf. Fast and simple.\n* [mustache](https://github.com/hoisie/mustache) - Go implementation of the Mustache template language.\n* [pongo2](https://github.com/flosch/pongo2) - Django-like template-engine for Go.\n* [quicktemplate](https://github.com/valyala/quicktemplate) - Fast, powerful, yet easy to use template engine. Converts templates into Go code and then compiles it.\n* [raymond](https://github.com/aymerick/raymond) - Complete handlebars implementation in Go.\n* [Razor](https://github.com/sipin/gorazor) - Razor view engine for Golang.\n* [Soy](https://github.com/robfig/soy) - Closure templates (aka Soy templates) for Go, following the [official spec](https://developers.google.com/closure/templates/).\n* [velvet](https://github.com/gobuffalo/velvet) - Complete handlebars implementation in Go.\n\n## Testing\n\n*Libraries for testing codebases and generating test data.*\n\n* Testing Frameworks\n    * [apitest](https://apitest.dev) - Simple and extensible behavioural testing library for REST based services or HTTP handlers that supports mocking external http calls and rendering of sequence diagrams.\n    * [assert](https://github.com/go-playground/assert) - Basic Assertion Library used along side native go testing, with building blocks for custom assertions.\n    * [badio](https://github.com/cavaliercoder/badio) - Extensions to Go's `testing/iotest` package.\n    * [baloo](https://github.com/h2non/baloo) - Expressive and versatile end-to-end HTTP API testing made easy.\n    * [biff](https://github.com/fulldump/biff) - Bifurcation testing framework, BDD compatible.\n    * [charlatan](https://github.com/percolate/charlatan) - Tool to generate fake interface implementations for tests.\n    * [commander](https://github.com/SimonBaeumer/commander) - Tool for testing cli applications on windows, linux and osx.\n    * [cupaloy](https://github.com/bradleyjkemp/cupaloy) - Simple snapshot testing addon for your test framework.\n    * [dbcleaner](https://github.com/khaiql/dbcleaner) - Clean database for testing purpose, inspired by `database_cleaner` in Ruby.\n    * [dsunit](https://github.com/viant/dsunit) - Datastore testing for SQL, NoSQL, structured files.\n    * [embedded-postgres](https://github.com/fergusstrange/embedded-postgres) - Run a real Postgres database locally on Linux, OSX or Windows as part of another Go application or test.\n    * [endly](https://github.com/viant/endly) - Declarative end to end functional testing.\n    * [flute](https://github.com/suzuki-shunsuke/flute) - HTTP client testing framework.\n    * [frisby](https://github.com/verdverm/frisby) - REST API testing framework.\n    * [ginkgo](http://onsi.github.io/ginkgo/) - BDD Testing Framework for Go.\n    * [go-carpet](https://github.com/msoap/go-carpet) - Tool for viewing test coverage in terminal.\n    * [go-cmp](https://github.com/google/go-cmp) - Package for comparing Go values in tests.\n    * [go-mutesting](https://github.com/zimmski/go-mutesting) - Mutation testing for Go source code.\n    * [go-testdeep](https://github.com/maxatome/go-testdeep) - Extremely flexible golang deep comparison, extends the go testing package.\n    * [go-vcr](https://github.com/dnaeon/go-vcr) - Record and replay your HTTP interactions for fast, deterministic and accurate tests.\n    * [goblin](https://github.com/franela/goblin) - Mocha like testing framework fo Go.\n    * [gocheck](http://labix.org/gocheck) - More advanced testing framework alternative to gotest.\n    * [GoConvey](https://github.com/smartystreets/goconvey/) - BDD-style framework with web UI and live reload.\n    * [gocrest](https://github.com/corbym/gocrest) - Composable hamcrest-like matchers for Go assertions.\n    * [godog](https://github.com/DATA-DOG/godog) - Cucumber or Behat like BDD framework for Go.\n    * [gofight](https://github.com/appleboy/gofight) - API Handler Testing for Golang Router framework.\n    * [gogiven](https://github.com/corbym/gogiven) - YATSPEC-like BDD testing framework for Go.\n    * [gomatch](https://github.com/jfilipczyk/gomatch) - library created for testing JSON against patterns.\n    * [gomega](http://onsi.github.io/gomega/) - Rspec like matcher/assertion library.\n    * [GoSpec](https://github.com/orfjackal/gospec) - BDD-style testing framework for the Go programming language.\n    * [gospecify](https://github.com/stesla/gospecify) - This provides a BDD syntax for testing your Go code. It should be familiar to anybody who has used libraries such as rspec.\n    * [gosuite](https://github.com/pavlo/gosuite) - Brings lightweight test suites with setup/teardown facilities to `testing` by leveraging Go1.7's Subtests.\n    * [gotest.tools](https://github.com/gotestyourself/gotest.tools) - A collection of packages to augment the go testing package and support common patterns.\n    * [Hamcrest](https://github.com/rdrdr/hamcrest) - fluent framework for declarative Matcher objects that, when applied to input values, produce self-describing results.\n    * [httpexpect](https://github.com/gavv/httpexpect) - Concise, declarative, and easy to use end-to-end HTTP and REST API testing.\n    * [jsonassert](https://github.com/kinbiko/jsonassert) - Package for verifying that your JSON payloads are serialized correctly.\n    * [restit](https://github.com/yookoala/restit) - Go micro framework to help writing RESTful API integration test.\n    * [schema](https://github.com/jgroeneveld/schema) - Quick and easy expression matching for JSON schemas used in requests and responses.\n    * [testcase](https://github.com/adamluzsi/testcase) - Idiomatic testing framework for Behavior Driven Development.\n    * [testfixtures](https://github.com/go-testfixtures/testfixtures) - A helper for Rails' like test fixtures to test database applications.\n    * [Testify](https://github.com/stretchr/testify) - Sacred extension to the standard go testing package.\n    * [testmd](https://godoc.org/github.com/tvastar/test/cmd/testmd) - Convert markdown snippets into testable go code.\n    * [testsql](https://github.com/zhulongcheng/testsql) - Generate test data from SQL files before testing and clear it after finished.\n    * [trial](https://github.com/jgroeneveld/trial) - Quick and easy extendable assertions without introducing much boilerplate.\n    * [Tt](https://github.com/vcaesar/tt) - Simple and colorful test tools.\n    * [wstest](https://github.com/posener/wstest) - Websocket client for unit-testing a websocket http.Handler.\n\n* Mock\n    * [counterfeiter](https://github.com/maxbrunsfeld/counterfeiter) - Tool for generating self-contained mock objects.\n    * [go-localstack](https://github.com/elgohr/go-localstack) - Tool for using localstack in AWS testing.\n    * [go-sqlmock](https://github.com/DATA-DOG/go-sqlmock) - Mock SQL driver for testing database interactions.\n    * [go-txdb](https://github.com/DATA-DOG/go-txdb) - Single transaction based database driver mainly for testing purposes.\n    * [gock](https://github.com/h2non/gock) - Versatile HTTP mocking made easy.\n    * [gomock](https://github.com/golang/mock) - Mocking framework for the Go programming language.\n    * [govcr](https://github.com/seborama/govcr) - HTTP mock for Golang: record and replay HTTP interactions for offline testing.\n    * [hoverfly](https://github.com/SpectoLabs/hoverfly) - HTTP(S) proxy for recording and simulating REST/SOAP APIs with extensible middleware and easy-to-use CLI.\n    * [httpmock](https://github.com/jarcoal/httpmock) - Easy mocking of HTTP responses from external resources.\n    * [minimock](https://github.com/gojuno/minimock) - Mock generator for Go interfaces.\n    * [mockhttp](https://github.com/tv42/mockhttp) - Mock object for Go http.ResponseWriter.\n    * [timex](https://github.com/cabify/timex) - A test-friendly replacement for the native `time` package.\n\n* Fuzzing and delta-debugging/reducing/shrinking.\n    * [go-fuzz](https://github.com/dvyukov/go-fuzz) - Randomized testing system.\n    * [gofuzz](https://github.com/google/gofuzz) - Library for populating go objects with random values.\n    * [Tavor](https://github.com/zimmski/tavor) - Generic fuzzing and delta-debugging framework.\n\n* Selenium and browser control tools.\n    * [cdp](https://github.com/mafredri/cdp) - Type-safe bindings for the Chrome Debugging Protocol that can be used with browsers or other debug targets that implement it.\n    * [chromedp](https://github.com/knq/chromedp) - a way to drive/test Chrome, Safari, Edge, Android Webviews, and other browsers supporting the Chrome Debugging Protocol.\n    * [ggr](https://github.com/aerokube/ggr) - a lightweight server that routes and proxies Selenium WebDriver requests to multiple Selenium hubs.\n    * [rod](https://github.com/ysmood/rod) - A chrome devtools controller that is easy and safe to use.\n    * [selenoid](https://github.com/aerokube/selenoid) - alternative Selenium hub server that launches browsers within containers.\n\n* Fail injection\n    * [failpoint](https://github.com/pingcap/failpoint) - An implementation of [failpoints](http://www.freebsd.org/cgi/man.cgi?query=fail) for Golang.\n\n## Text Processing\n\n*Libraries for parsing and manipulating texts.*\n\n* Specific Formats\n    * [align](https://github.com/Guitarbum722/align) - A general purpose application that aligns text.\n    * [allot](https://github.com/sbstjn/allot) - Placeholder and wildcard text parsing for CLI tools and bots.\n    * [bbConvert](https://github.com/CalebQ42/bbConvert) - Converts bbCode to HTML that allows you to add support for custom bbCode tags.\n    * [blackfriday](https://github.com/russross/blackfriday) - Markdown processor in Go.\n    * [bluemonday](https://github.com/microcosm-cc/bluemonday) - HTML Sanitizer.\n    * [codetree](https://github.com/aerogo/codetree) - Parses indented code (python, pixy, scarlet, etc.) and returns a tree structure.\n    * [colly](https://github.com/asciimoo/colly) - Fast and Elegant Scraping Framework for Gophers.\n    * [commonregex](https://github.com/mingrammer/commonregex) - A collection of common regular expressions for Go.\n    * [dataflowkit](https://github.com/slotix/dataflowkit) - Web scraping Framework to turn websites into structured data.\n    * [did](https://github.com/ockam-network/did) - DID (Decentralized Identifiers) Parser and Stringer in Go.\n    * [doi](https://github.com/hscells/doi) - Document object identifier (doi) parser in Go.\n    * [editorconfig-core-go](https://github.com/editorconfig/editorconfig-core-go) - Editorconfig file parser and manipulator for Go.\n    * [enca](https://github.com/endeveit/enca) - Minimal cgo bindings for [libenca](http://cihar.com/software/enca/).\n    * [encdec](https://github.com/mickep76/encdec) - Package provides a generic interface to encoders and decodersa.\n    * [genex](https://github.com/alixaxel/genex) - Count and expand Regular Expressions into all matching Strings.\n    * [github_flavored_markdown](https://godoc.org/github.com/shurcooL/github_flavored_markdown) - GitHub Flavored Markdown renderer (using blackfriday) with fenced code block highlighting, clickable header anchor links.\n    * [go-fixedwidth](https://github.com/ianlopshire/go-fixedwidth) - Fixed-width text formatting (encoder/decoder with reflection).\n    * [go-humanize](https://github.com/dustin/go-humanize) - Formatters for time, numbers, and memory size to human readable format.\n    * [go-nmea](https://github.com/adrianmo/go-nmea) - NMEA parser library for the Go language.\n    * [go-runewidth](https://github.com/mattn/go-runewidth) - Functions to get fixed width of the character or string.\n    * [go-slugify](https://github.com/mozillazg/go-slugify) - Make pretty slug with multiple languages support.\n    * [go-toml](https://github.com/pelletier/go-toml) - Go library for the TOML format with query support and handy cli tools.\n    * [go-vcard](https://github.com/emersion/go-vcard) - Parse and format vCard.\n    * [go-zero-width](https://github.com/trubitsyn/go-zero-width) - Zero-width character detection and removal for Go.\n    * [gofeed](https://github.com/mmcdole/gofeed) - Parse RSS and Atom feeds in Go.\n    * [gographviz](https://github.com/awalterschulze/gographviz) - Parses the Graphviz DOT language.\n    * [gommon/bytes](https://github.com/labstack/gommon/tree/master/bytes) - Format bytes to string.\n    * [gonameparts](https://github.com/polera/gonameparts) - Parses human names into individual name parts.\n    * [goq](https://github.com/andrewstuart/goq) - Declarative unmarshaling of HTML using struct tags with jQuery syntax (uses GoQuery).\n    * [GoQuery](https://github.com/PuerkitoBio/goquery) - GoQuery brings a syntax and a set of features similar to jQuery to the Go language.\n    * [goregen](https://github.com/zach-klippenstein/goregen) - Library for generating random strings from regular expressions.\n    * [goribot](https://github.com/zhshch2002/goribot) - A simple golang spider/scraping framework,build a spider in 3 lines.\n    * [gotext](https://github.com/leonelquinteros/gotext) - GNU gettext utilities for Go.\n    * [guesslanguage](https://github.com/endeveit/guesslanguage) - Functions to determine the natural language of a unicode text.\n    * [htmlquery](https://github.com/antchfx/htmlquery) - An XPath query package for HTML, lets you extract data or evaluate from HTML documents by an XPath expression.\n    * [inject](https://github.com/facebookgo/inject) - Package inject provides a reflect based injector.\n    * [ltsv](https://github.com/Wing924/ltsv) - High performance [LTSV (Labeled Tab Separeted Value)](http://ltsv.org/) reader for Go.\n    * [mxj](https://github.com/clbanning/mxj) - Encode / decode XML as JSON or map[string]interface{}; extract values with dot-notation paths and wildcards. Replaces x2j and j2x packages.\n    * [podcast](https://github.com/eduncan911/podcast) - iTunes Compliant and RSS 2.0 Podcast Generator in Golang\n    * [sdp](https://github.com/gortc/sdp) - SDP: Session Description Protocol [[RFC 4566](https://tools.ietf.org/html/rfc4566)].\n    * [sh](https://github.com/mvdan/sh) - Shell parser and formatter.\n    * [slug](https://github.com/gosimple/slug) - URL-friendly slugify with multiple languages support.\n    * [Slugify](https://github.com/avelino/slugify) - Go slugify application that handles string.\n    * [syndfeed](https://github.com/zhengchun/syndfeed) - A syndication feed for Atom 1.0 and RSS 2.0.\n    * [toml](https://github.com/BurntSushi/toml) - TOML configuration format (encoder/decoder with reflection).\n* Utility\n    * [gofuckyourself](https://github.com/JoshuaDoes/gofuckyourself) - A sanitization-based swear filter for Go.\n    * [gotabulate](https://github.com/bndr/gotabulate) - Easily pretty-print your tabular data with Go.\n    * [kace](https://github.com/codemodus/kace) - Common case conversions covering common initialisms.\n    * [parseargs-go](https://github.com/nproc/parseargs-go) - string argument parser that understands quotes and backslashes.\n    * [parth](https://github.com/codemodus/parth) - URL path segmentation parsing.\n    * [radix](https://github.com/yourbasic/radix) - fast string sorting algorithm.\n    * [Tagify](https://github.com/zoomio/tagify) - Produces a set of tags from given source.\n    * [textwrap](https://github.com/isbm/textwrap) - Implementation of `textwrap` module from Python.\n    * [TySug](https://github.com/Dynom/TySug) - Alternative suggestions with respect to keyboard layouts.\n    * [xj2go](https://github.com/stackerzzq/xj2go) - Convert xml or json to go struct.\n    * [xurls](https://github.com/mvdan/xurls) - Extract urls from text.\n\n## Third-party APIs\n\n*Libraries for accessing third party APIs.*\n\n* [amazon-product-advertising-api](https://github.com/ngs/go-amazon-product-advertising-api) - Go Client Library for [Amazon Product Advertising API](https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html).\n* [anaconda](https://github.com/ChimeraCoder/anaconda) - Go client library for the Twitter 1.1 API.\n* [aws-sdk-go](https://github.com/aws/aws-sdk-go) - The official AWS SDK for the Go programming language.\n* [brewerydb](https://github.com/naegelejd/brewerydb) - Go library for accessing the BreweryDB API.\n* [cachet](https://github.com/andygrunwald/cachet) - Go client library for [Cachet (open source status page system)](https://cachethq.io/).\n* [circleci](https://github.com/jszwedko/go-circleci) - Go client library for interacting with CircleCI's API.\n* [clarifai](https://github.com/samuelcouch/clarifai) - Go client library for interfacing with the Clarifai API.\n* [codeship-go](https://github.com/codeship/codeship-go) - Go client library for interacting with Codeship's API v2.\n* [coinpaprika-go](https://github.com/coinpaprika/coinpaprika-api-go-client) - Go client library for interacting with Coinpaprika's API.\n* [discordgo](https://github.com/bwmarrin/discordgo) - Go bindings for the Discord Chat API.\n* [ethrpc](https://github.com/onrik/ethrpc) - Go bindings for Ethereum JSON RPC API.\n* [facebook](https://github.com/huandu/facebook) - Go Library that supports the Facebook Graph API.\n* [fcm](https://github.com/maddevsio/fcm) - Go library for Firebase Cloud Messaging.\n* [gads](https://github.com/emiddleton/gads) - Google Adwords Unofficial API.\n* [gami](https://github.com/bit4bit/gami) - Go library for Asterisk Manager Interface.\n* [gcm](https://github.com/Aorioli/gcm) - Go library for Google Cloud Messaging.\n* [geo-golang](https://github.com/codingsince1985/geo-golang) - Go Library to access [Google Maps](https://developers.google.com/maps/documentation/geocoding/intro), [MapQuest](http://open.mapquestapi.com/geocoding/), [Nominatim](https://developer.mapquest.com/documentation/open/nominatim-search), [OpenCage](http://geocoder.opencagedata.com/api.html), [Bing](https://msdn.microsoft.com/en-us/library/ff701715.aspx), [Mapbox](https://www.mapbox.com/developers/api/geocoding/), and [OpenStreetMap](https://wiki.openstreetmap.org/wiki/Nominatim) geocoding / reverse geocoding APIs.\n* [github](https://github.com/google/go-github) - Go library for accessing the GitHub REST API v3.\n* [githubql](https://github.com/shurcooL/githubql) - Go library for accessing the GitHub GraphQL API v4.\n* [go-chronos](https://github.com/axelspringer/go-chronos) - Go library for interacting with the [Chronos](https://mesos.github.io/chronos/) Job Scheduler\n* [go-hacknews](https://github.com/PaulRosset/go-hacknews) - Tiny Go client for HackerNews API.\n* [go-here](https://github.com/abdullahselek/go-here) - Go client library around the HERE location based APIs.\n* [go-imgur](https://github.com/koffeinsource/go-imgur) - Go client library for [imgur](https://imgur.com)\n* [go-jira](https://github.com/andygrunwald/go-jira) - Go client library for [Atlassian JIRA](https://www.atlassian.com/software/jira)\n* [go-marathon](https://github.com/gambol99/go-marathon) - Go library for interacting with Mesosphere's Marathon PAAS.\n* [go-myanimelist](https://github.com/nstratos/go-myanimelist) - Go client library for accessing the [MyAnimeList API](http://myanimelist.net/modules.php?go=api).\n* [go-postman-collection](https://github.com/rbretecher/go-postman-collection) - Go module to work with [Postman Collections](https://learning.getpostman.com/docs/postman/collections/creating-collections/) (compatible with Insomnia).\n* [go-sophos](https://github.com/esurdam/go-sophos) - Go client library for the [Sophos UTM REST API](https://www.sophos.com/en-us/medialibrary/PDFs/documentation/UTMonAWS/Sophos-UTM-RESTful-API.pdf?la=en) with zero dependencies.\n* [go-sptrans](https://github.com/sergioaugrod/go-sptrans) - Go client library for the SPTrans Olho Vivo API.\n* [go-telegraph](https://gitlab.com/toby3d/telegraph) - Telegraph publishing platform API client.\n* [go-trending](https://github.com/andygrunwald/go-trending) - Go library for accessing [trending repositories](https://github.com/trending) and [developers](https://github.com/trending/developers) at Github.\n* [go-twitch](https://github.com/knspriggs/go-twitch) - Go client for interacting with the Twitch v3 API.\n* [go-twitter](https://github.com/dghubble/go-twitter) - Go client library for the Twitter v1.1 APIs.\n* [go-unsplash](https://github.com/hbagdi/go-unsplash) - Go client library for the [Unsplash.com](https://unsplash.com) API.\n* [go-xkcd](https://github.com/nishanths/go-xkcd) - Go client for the xkcd API.\n* [golang-tmdb](https://github.com/cyruzin/golang-tmdb) - Golang wrapper for The Movie Database API v3.\n* [golyrics](https://github.com/mamal72/golyrics) - Golyrics is a Go library to fetch music lyrics data from the Wikia website.\n* [gomalshare](https://github.com/MonaxGT/gomalshare) - Go library MalShare API [malshare.com](http://www.malshare.com/)\n* [GoMusicBrainz](https://github.com/michiwend/gomusicbrainz) - Go MusicBrainz WS2 client library.\n* [google](https://github.com/google/google-api-go-client) - Auto-generated Google APIs for Go.\n* [google-analytics](https://github.com/chonthu/go-google-analytics) - Simple wrapper for easy google analytics reporting.\n* [google-cloud](https://github.com/GoogleCloudPlatform/gcloud-golang) - Google Cloud APIs Go Client Library.\n* [google-email-audit-api](https://github.com/ngs/go-google-email-audit-api) - Go client library for [Google G Suite Email Audit API](https://developers.google.com/admin-sdk/email-audit/).\n* [google-play-scraper](https://github.com/n0madic/google-play-scraper) - Get data from Google Play Store.\n* [gopaapi5](https://github.com/utekaravinash/gopaapi5) - Go Client Library for [Amazon Product Advertising API 5.0](https://webservices.amazon.com/paapi5/documentation/).\n* [gosip](https://github.com/koltyakov/gosip) - Go client library SharePoint API.\n* [gostorm](https://github.com/jsgilmore/gostorm) - GoStorm is a Go library that implements the communications protocol required to write Storm spouts and Bolts in Go that communicate with the Storm shells.\n* [hipchat](https://github.com/andybons/hipchat) - This project implements a golang client library for the Hipchat API.\n* [hipchat (xmpp)](https://github.com/daneharrigan/hipchat) - A golang package to communicate with HipChat over XMPP.\n* [igdb](https://github.com/Henry-Sarabia/igdb) - Go client for the [Internet Game Database API](https://api.igdb.com/).\n* [lastpass-go](https://github.com/ansd/lastpass-go) - Go client library for the [LastPass](https://www.lastpass.com/) API.\n* [libgoffi](https://github.com/clevabit/libgoffi) - Library adapter toolbox for native [libffi](http://sourceware.org/libffi/) integration\n* [Medium](https://github.com/Medium/medium-sdk-go) - Golang SDK for Medium's OAuth2 API.\n* [megos](https://github.com/andygrunwald/megos) - Client library for accessing an [Apache Mesos](http://mesos.apache.org/) cluster.\n* [minio-go](https://github.com/minio/minio-go) - Minio Go Library for Amazon S3 compatible cloud storage.\n* [mixpanel](https://github.com/dukex/mixpanel) - Mixpanel is a library for tracking events and sending Mixpanel profile updates to Mixpanel from your go applications.\n* [patreon-go](https://github.com/mxpv/patreon-go) - Go library for Patreon API.\n* [paypal](https://github.com/logpacker/PayPal-Go-SDK) - Wrapper for PayPal payment API.\n* [playlyfe](https://github.com/playlyfe/playlyfe-go-sdk) - The Playlyfe Rest API Go SDK.\n* [pushover](https://github.com/gregdel/pushover) - Go wrapper for the Pushover API.\n* [rrdaclient](https://github.com/Omie/rrdaclient) - Go Library to access statdns.com API, which is in turn RRDA API. DNS Queries over HTTP.\n* [shopify](https://github.com/rapito/go-shopify) - Go Library to make CRUD request to the Shopify API.\n* [simples3](https://github.com/rhnvrm/simples3) - Simple no frills AWS S3 Library using REST with V4 Signing written in Go.\n* [slack](https://github.com/nlopes/slack) - Slack API in Go.\n* [smite](https://github.com/sergiotapia/smitego) - Go package to wraps access to the Smite game API.\n* [spotify](https://github.com/rapito/go-spotify) - Go Library to access Spotify WEB API.\n* [steam](https://github.com/sostronk/go-steam) - Go Library to interact with Steam game servers.\n* [stripe](https://github.com/stripe/stripe-go) - Go client for the Stripe API.\n* [textbelt](https://github.com/dietsche/textbelt) - Go client for the textbelt.com txt messaging API.\n* [translate](https://github.com/poorny/translate) - Go online translation package.\n* [Trello](https://github.com/adlio/trello) - Go wrapper for the Trello API.\n* [TripAdvisor](https://github.com/mrbenosborne/tripadvisor-golang) - Go wrapper for the TripAdvisor API.\n* [tumblr](https://github.com/mattcunningham/gumblr) - Go wrapper for the Tumblr v2 API.\n* [twitter-scraper](https://github.com/n0madic/twitter-scraper) - Scrape the Twitter Frontend API without authentication and limits.\n* [uptimerobot](https://github.com/bitfield/uptimerobot) - Go wrapper and command-line client for the Uptime Robot v2 API.\n* [vl-go](https://github.com/verifid/vl-go) - Go client library around the VerifID identity verification layer API.\n* [webhooks](https://github.com/go-playground/webhooks) - Webhook receiver for GitHub and Bitbucket.\n* [wit-go](https://github.com/wit-ai/wit-go) - Go client for wit.ai HTTP API.\n* [ynab](https://github.com/brunomvsouza/ynab.go) - Go wrapper for the YNAB API.\n* [zooz](https://github.com/gojuno/go-zooz) - Go client for the Zooz API.\n\n## Utilities\n\n*General utilities and tools to make your life easier.*\n\n* [apm](https://github.com/topfreegames/apm) - Process manager for Golang applications with an HTTP API.\n* [backscanner](https://github.com/icza/backscanner) - A scanner similar to bufio.Scanner, but it reads and returns lines in reverse order, starting at a given position and going backward.\n* [beyond](https://github.com/wesovilabs/beyond) - The Go tool that will drive you to the AOP world!\n* [blank](https://github.com/Henry-Sarabia/blank) - Verify or remove blanks and whitespace from strings.\n* [boilr](https://github.com/tmrts/boilr) - Blazingly fast CLI tool for creating projects from boilerplate templates.\n* [chyle](https://github.com/antham/chyle) - Changelog generator using a git repository with multiple configuration possibilities.\n* [circuit](https://github.com/cep21/circuit) - An efficient and feature complete Hystrix like Go implementation of the circuit breaker pattern.\n* [circuitbreaker](https://github.com/rubyist/circuitbreaker) - Circuit Breakers in Go.\n* [clockwork](https://github.com/jonboulle/clockwork) - A simple fake clock for golang.\n* [cmd](https://github.com/SimonBaeumer/cmd) - Library for executing shell commands on osx, windows and linux.\n* [command](https://github.com/txgruppi/command) - Command pattern for Go with thread safe serial and parallel dispatcher.\n* [compare](https://github.com/posener/compare) - Enables more readable and easier comparison tasks.\n* [copy-pasta](https://github.com/jutkko/copy-pasta) - Universal multi-workstation clipboard that uses S3 like backend for the storage.\n* [countries](https://github.com/biter777/countries) - Full implementation of ISO-3166-1, ISO-4217, ITU-T E.164, Unicode CLDR and IANA ccTLD standarts.\n* [ctop](https://github.com/bcicen/ctop) - [Top-like](http://ctop.sh) interface (e.g. htop) for container metrics.\n* [ctxutil](https://github.com/posener/ctxutil) - A collection of utility functions for contexts.\n* [dbt](https://github.com/nikogura/dbt) - A framework for running self-updating signed binaries from a central, trusted repository.\n* [Death](https://github.com/vrecan/death) - Managing go application shutdown with signals.\n* [Deepcopier](https://github.com/ulule/deepcopier) - Simple struct copying for Go.\n* [delve](https://github.com/derekparker/delve) - Go debugger.\n* [dlog](https://github.com/kirillDanshin/dlog) - Compile-time controlled logger to make your release smaller without removing debug calls.\n* [ergo](https://github.com/cristianoliveira/ergo) - The management of multiple local services running over different ports made easy.\n* [evaluator](https://github.com/nullne/evaluator) - Evaluate an expression dynamicly based on s-expression. It's simple and easy to extend.\n* [filetype](https://github.com/h2non/filetype) - Small package to infer the file type checking the magic numbers signature.\n* [filler](https://github.com/yaronsumel/filler) - small utility to fill structs using \"fill\" tag.\n* [filter](https://github.com/gookit/filter) - provide filtering, sanitizing, and conversion of Go data.\n* [fzf](https://github.com/junegunn/fzf) - Command-line fuzzy finder written in Go.\n* [gaper](https://github.com/maxcnunes/gaper) - Builds and restarts a Go project when it crashes or some watched file changes.\n* [generate](https://github.com/go-playground/generate) - runs go generate recursively on a specified path or environment variable and can filter by regex.\n* [ghokin](https://github.com/antham/ghokin) - Parallelized formatter with no external dependencies for gherkin (cucumber, behat...).\n* [git-time-metric](https://github.com/git-time-metric/gtm) - Simple, seamless, lightweight time tracking for Git.\n* [go-astitodo](https://github.com/asticode/go-astitodo) - Parse TODOs in your GO code.\n* [go-bind-plugin](https://github.com/wendigo/go-bind-plugin) - go:generate tool for wrapping symbols exported by golang plugins (1.8 only).\n* [go-bsdiff](https://github.com/gabstv/go-bsdiff) - Pure Go bsdiff and bspatch libraries and CLI tools.\n* [go-convert](https://github.com/Eun/go-convert) - Package go-convert enbles you to convert a value into another type.\n* [go-dry](https://github.com/ungerik/go-dry) - DRY (don't repeat yourself) package for Go.\n* [go-funk](https://github.com/thoas/go-funk) - Modern Go utility library which provides helpers (map, find, contains, filter, chunk, reverse, ...).\n* [go-health](https://github.com/Talento90/go-health) - Health package simplifies the way you add health check to your services.\n* [go-httpheader](https://github.com/mozillazg/go-httpheader) - Go library for encoding structs into Header fields.\n* [go-problemdetails](https://github.com/mvmaasakkers/go-problemdetails) - Go package for working with Problem Details.\n* [go-rate](https://github.com/beefsack/go-rate) - Timed rate limiter for Go.\n* [go-sitemap-generator](https://github.com/ikeikeikeike/go-sitemap-generator) - XML Sitemap generator written in Go.\n* [go-trigger](https://github.com/sadlil/go-trigger) - Go-lang global event triggerer, Register Events with an id and trigger the event from anywhere from your project.\n* [goback](https://github.com/carlescere/goback) - Go simple exponential backoff package.\n* [godaemon](https://github.com/VividCortex/godaemon) - Utility to write daemons.\n* [godropbox](https://github.com/dropbox/godropbox) - Common libraries for writing Go services/applications from Dropbox.\n* [gohper](https://github.com/cosiner/gohper) - Various tools/modules help for development.\n* [golarm](https://github.com/msempere/golarm) - Fire alarms with system events.\n* [golog](https://github.com/mlimaloureiro/golog) - Easy and lightweight CLI tool to time track your tasks.\n* [gopencils](https://github.com/bndr/gopencils) - Small and simple package to easily consume REST APIs.\n* [goplaceholder](https://github.com/michiwend/goplaceholder) - a small golang lib to generate placeholder images.\n* [goreadability](https://github.com/philipjkim/goreadability) - Webpage summary extractor using Facebook Open Graph and arc90's readability.\n* [goreleaser](https://github.com/goreleaser/goreleaser) - Deliver Go binaries as fast and easily as possible.\n* [goreporter](https://github.com/wgliang/goreporter) - Golang tool that does static analysis, unit testing, code review and generate code quality report.\n* [goseaweedfs](https://github.com/linxGnu/goseaweedfs) - SeaweedFS client library with almost full features.\n* [gostrutils](https://github.com/ik5/gostrutils) - Collections of string manipulation and conversion functions.\n* [gotenv](https://github.com/subosito/gotenv) - Load environment variables from `.env` or any `io.Reader` in Go.\n* [gpath](https://github.com/tenntenn/gpath) - Library to simplify access struct fields with Go's expression in reflection.\n* [gubrak](https://github.com/novalagung/gubrak) - Golang utility library with syntactic sugar. It's like lodash, but for golang.\n* [handy](https://github.com/miguelpragier/handy) - Many utilities and helpers like string handlers/formatters and validators.\n* [htcat](https://github.com/htcat/htcat) - Parallel and Pipelined HTTP GET Utility.\n* [hub](https://github.com/github/hub) - wrap git commands with additional functionality to interact with github from the terminal.\n* [hystrix-go](https://github.com/afex/hystrix-go) - Implements Hystrix patterns of programmer-defined fallbacks aka circuit breaker.\n* [immortal](https://github.com/immortal/immortal) - \\*nix cross-platform (OS agnostic) supervisor.\n* [intrinsic](https://github.com/mengzhuo/intrinsic) - Use x86 SIMD without writing any assembly code.\n* [jsend](https://github.com/clevergo/jsend) - JSend's implementation writen in Go.\n* [jump](https://github.com/gsamokovarov/jump) - Jump helps you navigate faster by learning your habits.\n* [koazee](https://github.com/wesovilabs/koazee) - Library inspired in Lazy evaluation and functional programming that takes the hassle out of working with arrays.\n* [limiters](https://github.com/mennanov/limiters) - Rate limiters for distributed applications in Golang with configurable back-ends and distributed locks.\n* [lrserver](https://github.com/jaschaephraim/lrserver) - LiveReload server for Go.\n* [mc](https://github.com/minio/mc) - Minio Client provides minimal tools to work with Amazon S3 compatible cloud storage and filesystems.\n* [mergo](https://github.com/imdario/mergo) - Helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.\n* [mimemagic](https://github.com/zRedShift/mimemagic) - Pure Go ultra performant MIME sniffing library/utility.\n* [mimesniffer](https://github.com/aofei/mimesniffer) - A MIME type sniffer for Go.\n* [mimetype](https://github.com/gabriel-vasile/mimetype) - Package for MIME type detection based on magic numbers.\n* [minify](https://github.com/tdewolff/minify) - Fast minifiers for HTML, CSS, JS, XML, JSON and SVG file formats.\n* [minquery](https://github.com/icza/minquery) - MongoDB / mgo.v2 query that supports efficient pagination (cursors to continue listing documents where we left off).\n* [mmake](https://github.com/tj/mmake) - Modern Make.\n* [moldova](https://github.com/StabbyCutyou/moldova) - Utility for generating random data based on an input template.\n* [mole](https://github.com/davrodpin/mole) - cli app to easily create ssh tunnels.\n* [mssqlx](https://github.com/linxGnu/mssqlx) - Database client library, proxy for any master slave, master master structures. Lightweight and auto balancing in mind.\n* [multitick](https://github.com/VividCortex/multitick) - Multiplexor for aligned tickers.\n* [myhttp](https://github.com/inancgumus/myhttp) - Simple API to make HTTP GET requests with timeout support.\n* [okrun](https://github.com/xta/okrun) - go run error steamroller.\n* [olaf](https://github.com/btnguyen2k/olaf) - Twitter Snowflake implemented in Go.\n* [onecache](https://github.com/adelowo/onecache) - Caching library with support for multiple backend stores (Redis, Memcached, filesystem etc).\n* [panicparse](https://github.com/maruel/panicparse) - Groups similar goroutines and colorizes stack dump.\n* [pattern-match](https://github.com/alexpantyukhin/go-pattern-match) - Pattern matching libray.\n* [peco](https://github.com/peco/peco) - Simplistic interactive filtering tool.\n* [pgo](https://github.com/arthurkushman/pgo) - Convenient functions for PHP community.\n* [pm](https://github.com/VividCortex/pm) - Process (i.e. goroutine) manager with an HTTP API.\n* [ptr](https://github.com/gotidy/ptr) - Package that provide functions for simplified creation of pointers from constants of basic types.\n* [r](https://github.com/is5/r) - Python-like `range()` experience for Go.\n* [rclient](https://github.com/zpatrick/rclient) - Readable, flexible, simple-to-use client for REST APIs.\n* [realize](https://github.com/tockins/realize) - Go build system with file watchers and live reload. Run, build and watch file changes with custom paths.\n* [repeat](https://github.com/ssgreg/repeat) - Go implementation of different backoff strategies useful for retrying operations and heartbeating.\n* [request](https://github.com/mozillazg/request) - Go HTTP Requests for Humans™.\n* [rerate](https://github.com/abo/rerate) - Redis-based rate counter and rate limiter for Go.\n* [rerun](https://github.com/ivpusic/rerun) - Recompiling and rerunning go apps when source changes.\n* [rest-go](https://github.com/edermanoel94/rest-go) - A package that provide many helpful methods for working with rest api.\n* [retry](https://github.com/kamilsk/retry) - The most advanced functional mechanism to perform actions repetitively until successful.\n* [retry](https://github.com/percolate/retry) - A simple but highly configurable retry package for Go.\n* [retry](https://github.com/thedevsaddam/retry) - Simple and easy retry mechanism package for Go.\n* [retry](https://github.com/shafreeck/retry) - A pretty simple library to ensure your work to be done.\n* [retry-go](https://github.com/rafaeljesus/retry-go) - Retrying made simple and easy for golang.\n* [robustly](https://github.com/VividCortex/robustly) - Runs functions resiliently, catching and restarting panics.\n* [scan](https://github.com/blockloop/scan) - Scan golang `sql.Rows` directly to structs, slices, or primitive types.\n* [serve](https://github.com/syntaqx/serve) - A static http server anywhere you need.\n* [shutdown](https://github.com/ztrue/shutdown) - App shutdown hooks for `os.Signal` handling.\n* [silk](https://github.com/chrispassas/silk) - Read silk netflow files.\n* [slice](https://github.com/psampaz/slice) - Type-safe functions for common Go slice operations.\n* [sliceconv](https://github.com/Henry-Sarabia/sliceconv) - Slice conversion between primitive types.\n* [slicer](https://github.com/leaanthony/slicer) - Makes working with slices easier.\n* [sorty](https://github.com/jfcg/sorty) - Fast Concurrent / Parallel Sorting.\n* [spinner](https://github.com/briandowns/spinner) - Go package to easily provide a terminal spinner with options.\n* [sqlx](https://github.com/jmoiron/sqlx) - provides a set of extensions on top of the excellent built-in database/sql package.\n* [Storm](https://github.com/asdine/storm) - Simple and powerful toolkit for BoltDB.\n* [structs](https://github.com/PumpkinSeed/structs) - Implement simple functions to manipulate structs.\n* [Task](https://github.com/go-task/task) - simple \"Make\" alternative.\n* [tome](https://github.com/cyruzin/tome) - Tome was designed to paginate simple RESTful APIs.\n* [toolbox](https://github.com/viant/toolbox) - Slice, map, multimap, struct, function, data conversion utilities. Service router, macro evaluator, tokenizer.\n* [ugo](https://github.com/alxrm/ugo) - ugo is slice toolbox with concise syntax for Go.\n* [UNIS](https://github.com/esemplastic/unis) - Common Architecture™ for String Utilities in Go.\n* [usql](https://github.com/knq/usql) - usql is a universal command-line interface for SQL databases.\n* [util](https://github.com/shomali11/util) - Collection of useful utility functions. (strings, concurrency, manipulations, ...).\n* [wuzz](https://github.com/asciimoo/wuzz) - Interactive cli tool for HTTP inspection.\n* [xferspdy](https://github.com/monmohan/xferspdy) - Xferspdy provides binary diff and patch library in golang.\n\n## UUID\n\n*Libraries for working with UUIDs.*\n\n* [goid](https://github.com/jakehl/goid) - Generate and Parse RFC4122 compliant V4 UUIDs.\n* [nanoid](https://github.com/aidarkhanov/nanoid) - A tiny and efficient Go unique string ID generator.\n* [sno](https://github.com/muyo/sno) - Compact, sortable and fast unique IDs with embedded metadata.\n* [ulid](https://github.com/oklog/ulid) - Go implementation of ULID (Universally Unique Lexicographically Sortable Identifier).\n* [uniq](https://gitlab.com/skilstak/code/go/uniq) - No hassle safe, fast unique identifiers with commands.\n* [uuid](https://github.com/agext/uuid) - Generate, encode, and decode UUIDs v1 with fast or cryptographic-quality random node identifier.\n* [uuid](https://github.com/gofrs/uuid) - Implementation of Universally Unique Identifier (UUID). Supports both creation and parsing of UUIDs. Actively maintained fork of satori uuid.\n* [wuid](https://github.com/edwingeng/wuid) - An extremely fast unique number generator, 10-135 times faster than UUID.\n\n## Validation\n\n*Libraries for validation.*\n\n* [checkdigit](https://github.com/osamingo/checkdigit) - Provide check digit algorithms (Luhn, Verhoeff, Damm) and calculators (ISBN, EAN, JAN, UPC, etc.).\n* [gody](https://github.com/guiferpa/gody) - :balloon: A lightweight struct validator for Go.\n* [govalid](https://github.com/twharmon/govalid) - Fast, tag-based validation for structs.\n* [govalidator](https://github.com/asaskevich/govalidator) - Validators and sanitizers for strings, numerics, slices and structs.\n* [govalidator](https://github.com/thedevsaddam/govalidator) - Validate Golang request data with simple rules. Highly inspired by Laravel's request validation.\n* [jio](https://github.com/faceair/jio) - jio is a json schema validator similar to [joi](https://github.com/hapijs/joi).\n* [ozzo-validation](https://github.com/go-ozzo/ozzo-validation) - Supports validation of various data types (structs, strings, maps, slices, etc.) with configurable and extensible validation rules specified in usual code constructs instead of struct tags.\n* [terraform-validator](https://github.com/thazelart/terraform-validator) - A norms and conventions validator for Terraform.\n* [validate](https://github.com/gookit/validate) - Go package for data validation and filtering. support validate Map, Struct, Request(Form, JSON, url.Values, Uploaded Files) data and more features.\n* [validate](https://github.com/gobuffalo/validate) - This package provides a framework for writing validations for Go applications.\n* [validator](https://github.com/go-playground/validator) - Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving.\n\n## Version Control\n\n*Libraries for version control.*\n\n* [gh](https://github.com/rjeczalik/gh) - Scriptable server and net/http middleware for GitHub Webhooks.\n* [git2go](https://github.com/libgit2/git2go) - Go bindings for libgit2.\n* [go-git](https://github.com/src-d/go-git) - highly extensible Git implementation in pure Go.\n* [go-vcs](https://github.com/sourcegraph/go-vcs) - manipulate and inspect VCS repositories in Go.\n* [hercules](https://github.com/src-d/hercules) - gaining advanced insights from Git repository history.\n* [hgo](https://github.com/beyang/hgo) - Hgo is a collection of Go packages providing read-access to local Mercurial repositories.\n\n## Video\n\n*Libraries for manipulating video.*\n\n* [gmf](https://github.com/3d0c/gmf) - Go bindings for FFmpeg av\\* libraries.\n* [go-astisub](https://github.com/asticode/go-astisub) - Manipulate subtitles in GO (.srt, .stl, .ttml, .webvtt, .ssa/.ass, teletext, .smi, etc.).\n* [go-astits](https://github.com/asticode/go-astits) - Parse and demux MPEG Transport Streams (.ts) natively in GO.\n* [go-m3u8](https://github.com/quangngotan95/go-m3u8) - Parser and generator library for Apple m3u8 playlists.\n* [go-mpd](https://github.com/unki2aut/go-mpd) - Parser and generator library for MPEG-DASH manifest files.\n* [goav](https://github.com/giorgisio/goav) - Comphrensive Go bindings for FFmpeg.\n* [gst](https://github.com/ziutek/gst) - Go bindings for GStreamer.\n* [libgosubs](https://github.com/wargarblgarbl/libgosubs) - Subtitle format support for go. Supports .srt, .ttml, and .ass.\n* [libvlc-go](https://github.com/adrg/libvlc-go) - Go bindings for libvlc 2.X/3.X/4.X (used by the VLC media player).\n* [m3u8](https://github.com/grafov/m3u8) - Parser and generator library of M3U8 playlists for Apple HLS.\n* [v4l](https://github.com/korandiz/v4l) - Video capture library for Linux, written in Go.\n\n## Web Frameworks\n\n*Full stack web frameworks.*\n\n* [aah](https://aahframework.org) - Scalable, performant, rapid development Web framework for Go.\n* [Aero](https://github.com/aerogo/aero) - High-performance web framework for Go, reaches top scores in Lighthouse.\n* [Air](https://github.com/aofei/air) - An ideally refined web framework for Go.\n* [appy](https://github.com/appist/appy) - An opinionated productive web framework that helps scaling business easier.\n* [Banjo](https://github.com/nsheremet/banjo) - Very simple and fast web framework for Go.\n* [Beego](https://github.com/astaxie/beego) - beego is an open-source, high-performance web framework for the Go programming language.\n* [Buffalo](http://gobuffalo.io) - Bringing the productivity of Rails to Go!\n* [Echo](https://github.com/labstack/echo) - High performance, minimalist Go web framework.\n* [Fiber](https://github.com/gofiber/fiber) - An Express.js inspired web framework build on Fasthttp.\n* [Fireball](https://github.com/zpatrick/fireball) - More \"natural\" feeling web framework.\n* [Flamingo](https://github.com/i-love-flamingo/flamingo) - Framework for pluggable web projects. Including a concept for modules and offering features for DI, Configareas, i18n, template engines, graphql, observability, security, events, routing & reverse routing etc.\n* [Flamingo Commerce](https://github.com/i-love-flamingo/flamingo-commerce) - Providing e-commerce features using clean architecture like DDD and ports and adapters, that you can use to build flexible e-commerce applications.\n* [Gin](https://github.com/gin-gonic/gin) - Gin is a web framework written in Go! It features a martini-like API with much better performance, up to 40 times faster. If you need performance and good productivity.\n* [Ginrpc](https://github.com/xxjwxc/ginrpc) - Gin parameter automatic binding tool,gin rpc tools.\n* [Gizmo](https://github.com/NYTimes/gizmo) - Microservice toolkit used by the New York Times.\n* [go-json-rest](https://github.com/ant0ine/go-json-rest) - Quick and easy way to setup a RESTful JSON API.\n* [go-rest](https://github.com/ungerik/go-rest) - Small and evil REST framework for Go.\n* [Goa](https://github.com/goadesign/goa) - Goa provides a holistic approach for developing remote APIs and microservices in Go.\n* [goa](https://github.com/goa-go/goa) - goa is just like koajs for golang, it is a flexible, light, high-performance and extensible web framework based on middleware.\n* [Golax](https://github.com/fulldump/golax) - A non Sinatra fast HTTP framework with support for Google custom methods, deep interceptors, recursion and more.\n* [Golf](https://github.com/dinever/golf) - Golf is a fast, simple and lightweight micro-web framework for Go. It comes with powerful features and has no dependencies other than the Go Standard Library.\n* [Gondola](https://github.com/rainycape/gondola) - The web framework for writing faster sites, faster.\n* [gongular](https://github.com/mustafaakin/gongular) - Fast Go web framework with input mapping/validation and (DI) Dependency Injection.\n* [goweb](https://github.com/twharmon/goweb) - Web framework with routing, websockets, logging, middleware, static file server (optional gzip), and automatic TLS.\n* [Goyave](https://github.com/System-Glitch/goyave) - Feature-complete web framework aimed at clean code and fast development, with powerful built-in functionalities.\n* [hiboot](https://github.com/hidevopsio/hiboot) - hiboot is a high performance web application framework with auto configuration and dependency injection support.\n* [Macaron](https://github.com/go-macaron/macaron) - Macaron is a high productive and modular design web framework in Go.\n* [mango](https://github.com/paulbellamy/mango) - Mango is a modular web-application framework for Go, inspired by Rack, and PEP333.\n* [Microservice](https://github.com/claygod/microservice) - The framework for the creation of microservices, written in Golang.\n* [neo](https://github.com/ivpusic/neo) - Neo is minimal and fast Go Web Framework with extremely simple API.\n* [patron](https://github.com/beatlabs/patron) - Patron is a microservice framework following best cloud practices with a focus on productivity.\n* [Resoursea](https://github.com/resoursea/api) - REST framework for quickly writing resource based services.\n* [REST Layer](http://rest-layer.io) - Framework to build REST/GraphQL API on top of databases with mostly configuration over code.\n* [Revel](https://github.com/revel/revel) - High-productivity web framework for the Go language.\n* [rex](https://github.com/goanywhere/rex) - Rex is a library for modular development built upon gorilla/mux, fully compatible with `net/http`.\n* [rux](https://github.com/gookit/rux) - Simple and fast web framework for build golang HTTP applications.\n* [tango](https://github.com/lunny/tango) - Micro & pluggable web framework for Go.\n* [tigertonic](https://github.com/rcrowley/go-tigertonic) - Go framework for building JSON web services inspired by Dropwizard.\n* [uAdmin](https://github.com/uadmin/uadmin) - Fully featured web framework for Golang, inspired by Django.\n* [utron](https://github.com/gernest/utron) - Lightweight MVC framework for Go(Golang).\n* [vox](https://github.com/aisk/vox) - A golang web framework for humans, inspired by Koa heavily.\n* [WebGo](https://github.com/bnkamalesh/webgo) - A micro-framework to build web apps; with handler chaining, middleware and context injection. With standard library compliant HTTP handlers(i.e. http.HandlerFunc).\n* [YARF](https://github.com/yarf-framework/yarf) - Fast micro-framework designed to build REST APIs and web services in a fast and simple way.\n\n### Middlewares\n\n#### Actual middlewares\n\n* [client-timing](https://github.com/posener/client-timing) - An HTTP client for Server-Timing header.\n* [CORS](https://github.com/rs/cors) - Easily add CORS capabilities to your API.\n* [formjson](https://github.com/rs/formjson) - Transparently handle JSON input as a standard form POST.\n* [go-server-timing](https://github.com/mitchellh/go-server-timing) - Add/parse Server-Timing header.\n* [Limiter](https://github.com/ulule/limiter) - Dead simple rate limit middleware for Go.\n* [ln-paywall](https://github.com/philippgille/ln-paywall) - Go middleware for monetizing APIs on a per-request basis with the Lightning Network (Bitcoin).\n* [Tollbooth](https://github.com/didip/tollbooth) - Rate limit HTTP request handler.\n* [XFF](https://github.com/sebest/xff) - Handle `X-Forwarded-For` header and friends.\n\n#### Libraries for creating HTTP middlewares\n\n* [alice](https://github.com/justinas/alice) - Painless middleware chaining for Go.\n* [catena](https://github.com/codemodus/catena) - http.Handler wrapper catenation (same API as \"chain\").\n* [chain](https://github.com/codemodus/chain) - Handler wrapper chaining with scoped data (net/context-based \"middleware\").\n* [go-wrap](https://github.com/go-on/wrap) - Small middlewares package for net/http.\n* [gores](https://github.com/alioygur/gores) - Go package that handles HTML, JSON, XML and etc. responses. Useful for RESTful APIs.\n* [interpose](https://github.com/carbocation/interpose) - Minimalist net/http middleware for golang.\n* [muxchain](https://github.com/stephens2424/muxchain) - Lightweight middleware for net/http.\n* [negroni](https://github.com/urfave/negroni) - Idiomatic HTTP middleware for Golang.\n* [render](https://github.com/unrolled/render) - Go package for easily rendering JSON, XML, and HTML template responses.\n* [renderer](https://github.com/thedevsaddam/renderer) - Simple, lightweight and faster response (JSON, JSONP, XML, YAML, HTML, File) rendering package for Go.\n* [rye](https://github.com/InVisionApp/rye) - Tiny Go middleware library (with canned Middlewares) that supports JWT, CORS, Statsd, and Go 1.7 context.\n* [stats](https://github.com/thoas/stats) - Go middleware that stores various information about your web application.\n\n### Routers\n\n* [alien](https://github.com/gernest/alien) - Lightweight and fast http router from outer space.\n* [bellt](https://github.com/GuilhermeCaruso/bellt) - A simple Go HTTP router.\n* [Bone](https://github.com/go-zoo/bone) - Lightning Fast HTTP Multiplexer.\n* [Bxog](https://github.com/claygod/Bxog) - Simple and fast HTTP router for Go. It works with routes of varying difficulty, length and nesting. And he knows how to create a URL from the received parameters.\n* [chi](https://github.com/go-chi/chi) - Small, fast and expressive HTTP router built on net/context.\n* [fasthttprouter](https://github.com/buaazp/fasthttprouter) - High performance router forked from `httprouter`. The first router fit for `fasthttp`.\n* [FastRouter](https://github.com/razonyang/fastrouter) - a fast, flexible HTTP router written in Go.\n* [gocraft/web](https://github.com/gocraft/web) - Mux and middleware package in Go.\n* [Goji](https://github.com/goji/goji) - Goji is a minimalistic and flexible HTTP request multiplexer with support for `net/context`.\n* [goroute](https://github.com/goroute/route) - Simple yet powerful HTTP request multiplexer.\n* [GoRouter](https://github.com/vardius/gorouter) - GoRouter is a Server/API micro framwework, HTTP request router, multiplexer, mux that provides request router with middleware supporting `net/context`.\n* [gowww/router](https://github.com/gowww/router) - Lightning fast HTTP router fully compatible with the net/http.Handler interface.\n* [httprouter](https://github.com/julienschmidt/httprouter) - High performance router. Use this and the standard http handlers to form a very high performance web framework.\n* [httptreemux](https://github.com/dimfeld/httptreemux) - High-speed, flexible tree-based HTTP router for Go. Inspiration from httprouter.\n* [lars](https://github.com/go-playground/lars) - Is a lightweight, fast and extensible zero allocation HTTP router for Go used to create customizable frameworks.\n* [mux](https://github.com/gorilla/mux) - Powerful URL router and dispatcher for golang.\n* [ozzo-routing](https://github.com/go-ozzo/ozzo-routing) - An extremely fast Go (golang) HTTP router that supports regular expression route matching. Comes with full support for building RESTful APIs.\n* [pure](https://github.com/go-playground/pure) - Is a lightweight HTTP router that sticks to the std \"net/http\" implementation.\n* [Siesta](https://github.com/VividCortex/siesta) - Composable framework to write middleware and handlers.\n* [vestigo](https://github.com/husobee/vestigo) - Performant, stand-alone, HTTP compliant URL Router for go web applications.\n* [violetear](https://github.com/nbari/violetear) - Go HTTP router.\n* [xmux](https://github.com/rs/xmux) - High performance muxer based on `httprouter` with `net/context` support.\n* [xujiajun/gorouter](https://github.com/xujiajun/gorouter) - A simple and fast HTTP router for Go.\n\n## Windows\n\n* [d3d9](https://github.com/gonutz/d3d9) - Go bindings for Direct3D9.\n* [go-ole](https://github.com/go-ole/go-ole) - Win32 OLE implementation for golang.\n* [gosddl](https://github.com/MonaxGT/gosddl) - Converter from SDDL-string to user-friendly JSON. SDDL consist of four part: Owner, Primary Group, DACL, SACL.\n\n## XML\n\n*Libraries and tools for manipulating XML.*\n\n* [XML-Comp](https://github.com/xml-comp/xml-comp) - Simple command line XML comparer that generates diffs of folders, files and tags.\n* [xml2map](https://github.com/sbabiv/xml2map) - XML to MAP converter written Golang.\n* [xmlwriter](https://github.com/shabbyrobe/xmlwriter) - Procedural XML generation API based on libxml2's xmlwriter module.\n* [xpath](https://github.com/antchfx/xpath) - XPath package for Go.\n* [xquery](https://github.com/antchfx/xquery) - XQuery lets you extract data from HTML/XML documents using XPath expression.\n* [zek](https://github.com/miku/zek) - Generate a Go struct from XML.\n\n# Tools\n\n*Go software and plugins.*\n\n## Code Analysis\n\n* [apicompat](https://github.com/bradleyfalzon/apicompat) - Checks recent changes to a Go project for backwards incompatible changes.\n* [dupl](https://github.com/mibk/dupl) - Tool for code clone detection.\n* [errcheck](https://github.com/kisielk/errcheck) - Errcheck is a program for checking for unchecked errors in Go programs.\n* [gcvis](https://github.com/davecheney/gcvis) - Visualise Go program GC trace data in real time.\n* [go-checkstyle](https://github.com/qiniu/checkstyle) - checkstyle is a style check tool like java checkstyle. This tool inspired by java checkstyle, golint. The style referred to some points in Go Code Review Comments.\n* [go-cleanarch](https://github.com/roblaszczak/go-cleanarch) - go-cleanarch was created to validate Clean Architecture rules, like a The Dependency Rule and interaction between packages in your Go projects.\n* [go-critic](https://github.com/go-critic/go-critic) - source code linter that brings checks that are currently not implemented in other linters.\n* [go-mod-outdated](https://github.com/psampaz/go-mod-outdated) - An easy way to find outdated dependencies of your Go projects.\n* [go-outdated](https://github.com/firstrow/go-outdated) - Console application that displays outdated packages.\n* [goast-viewer](https://github.com/yuroyoro/goast-viewer) - Web based Golang AST visualizer.\n* [GoCover.io](http://gocover.io/) - GoCover.io offers the code coverage of any golang package as a service.\n* [goimports](https://godoc.org/golang.org/x/tools/cmd/goimports) - Tool to fix (add, remove) your Go imports automatically.\n* [GolangCI](https://golangci.com/) - GolangCI is an automated Golang code review service for GitHub pull requests. Service is open source and it's free for open source projects.\n* [golines](https://github.com/segmentio/golines) - Formatter that automatically shortens long lines in Go code.\n* [GoLint](https://github.com/golang/lint) - Golint is a linter for Go source code.\n* [Golint online](http://go-lint.appspot.com/) - Lints online Go source files on GitHub, Bitbucket and Google Project Hosting using the golint package.\n* [GoPlantUML](https://github.com/jfeliu007/goplantuml) - Library and CLI that generates text plantump class diagram containing information about structures and interfaces with the relationship among them.\n* [goreturns](https://sourcegraph.com/github.com/sqs/goreturns) - Adds zero-value return statements to match the func return types.\n* [gosimple](https://github.com/dominikh/go-tools/tree/master/cmd/gosimple) - gosimple is a linter for Go source code that specialises on simplifying code.\n* [gostatus](https://github.com/shurcooL/gostatus) - Command line tool, shows the status of repositories that contain Go packages.\n* [lint](https://github.com/surullabs/lint) - Run linters as part of go test.\n* [php-parser](https://github.com/z7zmey/php-parser) - A Parser for PHP written in Go.\n* [staticcheck](https://github.com/dominikh/go-tools/tree/master/cmd/staticcheck) - staticcheck is `go vet` on steroids, applying a ton of static analysis checks you might be used to from tools like ReSharper for C#.\n* [tarp](https://github.com/verygoodsoftwarenotvirus/tarp) - tarp finds functions and methods without direct unit tests in Go source code.\n* [tickgit](https://github.com/augmentable-dev/tickgit) - CLI and go package for surfacing code comment TODOs (in any language) and applying a `git blame`to identify the author.\n* [unconvert](https://github.com/mdempsky/unconvert) - Remove unnecessary type conversions from Go source.\n* [unused](https://github.com/dominikh/go-tools/tree/master/cmd/unused) - unused checks Go code for unused constants, variables, functions and types.\n* [validate](https://github.com/mccoyst/validate) - Automatically validates struct fields with tags.\n\n## Editor Plugins\n\n* [Go plugin for JetBrains IDEs](https://plugins.jetbrains.com/plugin/9568-go) - Go plugin for JetBrains IDEs.\n* [go-language-server](https://github.com/theia-ide/go-language-server) - A wrapper to turn the VSCode go extension into a language server supporting the language-server-protocol.\n* [go-mode](https://github.com/dominikh/go-mode.el) - Go mode for GNU/Emacs.\n* [go-plus](https://github.com/joefitzgerald/go-plus) - Go (Golang) Package For Atom That Adds Autocomplete, Formatting, Syntax Checking, Linting and Vetting.\n* [gocode](https://github.com/nsf/gocode) - Autocompletion daemon for the Go programming language.\n* [goprofiling](https://marketplace.visualstudio.com/items?itemName=MaxMedia.go-prof) - This extension adds benchmark profiling support for the Go language to VS Code.\n* [GoSublime](https://github.com/DisposaBoy/GoSublime) - Golang plugin collection for the text editor SublimeText 3 providing code completion and other IDE-like features.\n* [gounit-vim](https://github.com/hexdigest/gounit-vim) - Vim plugin for generating Go tests based on the function's or method's signature.\n* [theia-go-extension](https://github.com/theia-ide/theia-go-extension) - Go language support for the Theia IDE.\n* [vim-compiler-go](https://github.com/rjohnsondev/vim-compiler-go) - Vim plugin to highlight syntax errors on save.\n* [vim-go](https://github.com/fatih/vim-go) - Go development plugin for Vim.\n* [vscode-go](https://github.com/Microsoft/vscode-go) - Extension for Visual Studio Code (VS Code) which provides support for the Go language.\n* [Watch](https://github.com/eaburns/Watch) - Runs a command in an acme win on file changes.\n\n## Go Generate Tools\n\n* [generic](https://github.com/usk81/generic) - flexible data type for Go.\n* [genny](https://github.com/cheekybits/genny) - Elegant generics for Go.\n* [gocontracts](https://github.com/Parquery/gocontracts) - brings design-by-contract to Go by synchronizing the code with the documentation.\n* [gonerics](http://github.com/bouk/gonerics) - Idiomatic Generics in Go.\n* [gotests](https://github.com/cweill/gotests) - Generate Go tests from your source code.\n* [gounit](https://github.com/hexdigest/gounit) - Generate Go tests using your own templates.\n* [hasgo](https://github.com/DylanMeeus/hasgo) - Generate Haskell inspired functions for your slices.\n* [re2dfa](https://github.com/opennota/re2dfa) - Transform regular expressions into finite state machines and output Go source code.\n* [TOML-to-Go](https://xuri.me/toml-to-go) - Translates TOML into a Go type in the browser instantly.\n* [xgen](https://github.com/xuri/xgen) - XSD (XML Schema Definition) parser and Go/C/Java/Rust/TypeScript code generator.\n\n## Go Tools\n\n* [colorgo](https://github.com/songgao/colorgo) - Wrapper around `go` command for colorized `go build` output.\n* [depth](https://github.com/KyleBanks/depth) - Visualize dependency trees of any package by analyzing imports.\n* [gb](https://getgb.io/) - An easy to use project based build tool for the Go programming language.\n* [generator-go-lang](https://github.com/axelspringer/generator-go-lang) - A [Yeoman](http://yeoman.io) generator to get new Go projects started.\n* [gilbert](https://go-gilbert.github.io) - Build system and task runner for Go projects.\n* [go-callvis](https://github.com/TrueFurby/go-callvis) - Visualize call graph of your Go program using dot format.\n* [go-james](https://github.com/pieterclaerhout/go-james) - Go project skeleton creator, builds and tests your projects without the manual setup.\n* [go-pkg-complete](https://github.com/skelterjohn/go-pkg-complete) - Bash completion for go and wgo.\n* [go-swagger](https://github.com/go-swagger/go-swagger) - Swagger 2.0 implementation for go. Swagger is a simple yet powerful representation of your RESTful API.\n* [godbg](https://github.com/tylerwince/godbg) - Implementation of Rusts `dbg!` macro for quick and easy debugging during development.\n* [gomodrun](https://github.com/dustinblackman/gomodrun/) - Go tool that executes and caches binaries included in go.mod files.\n* [gothanks](https://github.com/psampaz/gothanks) - GoThanks automatically stars your go.mod github dependencies, sending this way some love to their maintainers.\n* [OctoLinker](https://github.com/OctoLinker/browser-extension) - Navigate through go files efficiently with the OctoLinker browser extension for GitHub.\n* [richgo](https://github.com/kyoh86/richgo) - Enrich `go test` outputs with text decorations.\n* [rts](https://github.com/galeone/rts) - RTS: response to struct. Generates Go structs from server responses.\n\n## Software Packages\n\n*Software written in Go.*\n\n### DevOps Tools\n\n* [aptly](https://github.com/smira/aptly) - aptly is a Debian repository management tool.\n* [aurora](https://github.com/xuri/aurora) - Cross-platform web-based Beanstalkd queue server console.\n* [awsenv](https://github.com/soniah/awsenv) - Small binary that loads Amazon (AWS) environment variables for a profile.\n* [Blast](https://github.com/dave/blast) - A simple tool for API load testing and batch jobs.\n* [bombardier](https://github.com/codesenberg/bombardier) - Fast cross-platform HTTP benchmarking tool.\n* [bosun](https://github.com/bosun-monitor/bosun) - Time Series Alerting Framework.\n* [DepCharge](https://github.com/centerorbit/depcharge) - Helps orchestrating the execution of commands across the many dependencies in larger projects.\n* [Dockerfile-Generator](https://github.com/ozankasikci/dockerfile-generator) - A go library and an executable that produces valid Dockerfiles using various input channels.\n* [dogo](https://github.com/liudng/dogo) - Monitoring changes in the source file and automatically compile and run (restart).\n* [drone-jenkins](https://github.com/appleboy/drone-jenkins) - Trigger downstream Jenkins jobs using a binary, docker or Drone CI.\n* [drone-scp](https://github.com/appleboy/drone-scp) - Copy files and artifacts via SSH using a binary, docker or Drone CI.\n* [Dropship](https://github.com/chrismckenzie/dropship) - Tool for deploying code via cdn.\n* [easyssh-proxy](https://github.com/appleboy/easyssh-proxy) - Golang package for easy remote execution through SSH and SCP downloading via `ProxyCommand`.\n* [fac](https://github.com/mkchoi212/fac) - Command-line user interface to fix git merge conflicts.\n* [gaia](https://github.com/gaia-pipeline/gaia) - Build powerful pipelines in any programming language.\n* [Gitea](https://github.com/go-gitea/gitea) - Fork of Gogs, entirely community driven.\n* [gitea-github-migrator](https://git.jonasfranz.software/JonasFranzDEV/gitea-github-migrator) - Migrate all your GitHub repositories, issues, milestones and labels to your Gitea instance.\n* [go-furnace](https://github.com/go-furnace/go-furnace) - Hosting solution written in Go. Deploy your Application with ease on AWS, GCP or DigitalOcean.\n* [go-selfupdate](https://github.com/sanbornm/go-selfupdate) - Enable your Go applications to self update.\n* [gobrew](https://github.com/cryptojuice/gobrew) - gobrew lets you easily switch between multiple versions of go.\n* [godbg](https://github.com/sirnewton01/godbg) - Web-based gdb front-end application.\n* [Gogs](https://gogs.io/) - A Self Hosted Git Service in the Go Programming Language.\n* [gonative](https://github.com/inconshreveable/gonative) - Tool which creates a build of Go that can cross compile to all platforms while still using the Cgo-enabled versions of the stdlib packages.\n* [govvv](https://github.com/ahmetalpbalkan/govvv) - “go build” wrapper to easily add version information into Go binaries.\n* [gox](https://github.com/mitchellh/gox) - Dead simple, no frills Go cross compile tool.\n* [goxc](https://github.com/laher/goxc) - build tool for Go, with a focus on cross-compiling and packaging.\n* [grapes](https://github.com/yaronsumel/grapes) - Lightweight tool designed to distribute commands over ssh with ease.\n* [GVM](https://github.com/moovweb/gvm) - GVM provides an interface to manage Go versions.\n* [Hey](https://github.com/rakyll/hey) - Hey is a tiny program that sends some load to a web application.\n* [jcli](https://github.com/jenkins-zh/jenkins-cli) - Jenkins CLI allows you manage your Jenkins as an easy way.\n* [kala](https://github.com/ajvb/kala) - Simplistic, modern, and performant job scheduler.\n* [kcli](https://github.com/cswank/kcli) - Command line tool for inspecting kafka topics/partitions/messages.\n* [kubernetes](https://github.com/kubernetes/kubernetes) - Container Cluster Manager from Google.\n* [lstags](https://github.com/ivanilves/lstags) - Tool and API to sync Docker images across different registries.\n* [lwc](https://github.com/timdp/lwc) - A live-updating version of the UNIX wc command.\n* [manssh](https://github.com/xwjdsh/manssh) - manssh is a command line tool for managing your ssh alias config easily.\n* [Moby](https://github.com/moby/moby) - Collaborative project for the container ecosystem to assemble container-based systems.\n* [Mora](https://github.com/emicklei/mora) - REST server for accessing MongoDB documents and meta data.\n* [ostent](https://github.com/ostrost/ostent) - collects and displays system metrics and optionally relays to Graphite and/or InfluxDB.\n* [Packer](https://github.com/mitchellh/packer) - Packer is a tool for creating identical machine images for multiple platforms from a single source configuration.\n* [Pewpew](https://github.com/bengadbois/pewpew) - Flexible HTTP command line stress tester.\n* [Pomerium](https://github.com/pomerium/pomerium) - Pomerium is an identity-aware access proxy.\n* [Rodent](https://github.com/alouche/rodent) - Rodent helps you manage Go versions, projects and track dependencies.\n* [s3-proxy](https://github.com/oxyno-zeta/s3-proxy) - S3 Proxy with GET, PUT and DELETE methods and authentication (OpenID Connect and Basic Auth).\n* [s3gof3r](https://github.com/rlmcpherson/s3gof3r) - Small utility/library optimized for high speed transfer of large objects into and out of Amazon S3.\n* [Scaleway-cli](https://github.com/scaleway/scaleway-cli) - Manage BareMetal Servers from Command Line (as easily as with Docker).\n* [script](https://github.com/bitfield/script) - Making it easy to write shell-like scripts in Go for DevOps and system administration tasks.\n* [sg](https://github.com/ChristopherRabotin/sg) - Benchmarks a set of HTTP endpoints (like ab), with possibility to use the response code and data between each call for specific server stress based on its previous response.\n* [skm](https://github.com/TimothyYe/skm) - SKM is a simple and powerful SSH Keys Manager, it helps you to manage your multiple SSH keys easily!\n* [StatusOK](https://github.com/sanathp/statusok) - Monitor your Website and REST APIs.Get Notified through Slack, E-mail when your server is down or response time is more than expected.\n* [terraform-provider-openapi](https://github.com/dikhan/terraform-provider-openapi) - Terraform provider plugin that dynamically configures itself at runtime based on an OpenAPI document (formerly known as swagger file) containing the definitions of the APIs exposed.\n* [traefik](https://github.com/containous/traefik) - Reverse proxy and load balancer with support for multiple backends.\n* [uTask](https://github.com/ovh/utask) - Automation engine that models and executes business processes declared in yaml.\n* [Vegeta](https://github.com/tsenart/vegeta) - HTTP load testing tool and library. It's over 9000!\n* [webhook](https://github.com/adnanh/webhook) - Tool which allows user to create HTTP endpoints (hooks) that execute commands on the server.\n* [Wide](https://wide.b3log.org/login) - Web-based IDE for Teams using Golang.\n* [winrm-cli](https://github.com/masterzen/winrm-cli) - Cli tool to remotely execute commands on Windows machines.\n\n### Other Software\n\n* [borg](https://github.com/crufter/borg) - Terminal based search engine for bash snippets.\n* [boxed](https://github.com/tejo/boxed) - Dropbox based blog engine.\n* [Cherry](https://github.com/rafael-santiago/cherry) - Tiny webchat server in Go.\n* [Circuit](https://github.com/gocircuit/circuit) - Circuit is a programmable platform-as-a-service (PaaS) and/or Infrastructure-as-a-Service (IaaS), for management, discovery, synchronization and orchestration of services and hosts comprising cloud applications.\n* [Comcast](https://github.com/tylertreat/Comcast) - Simulate bad network connections.\n* [confd](https://github.com/kelseyhightower/confd) - Manage local application configuration files using templates and data from etcd or consul.\n* [croc](https://github.com/schollz/croc) - Easily and securely send files or folders from one computer to another.\n* [Docker](http://www.docker.com/) - Open platform for distributed applications for developers and sysadmins.\n* [Documize](https://github.com/documize/community) - Modern wiki software that integrates data from SaaS tools.\n* [dp](https://github.com/scryinfo/dp) - Through SDK for data exchange with blockchain, developers can get easy access to DAPP development.\n* [drive](https://github.com/odeke-em/drive) - Google Drive client for the commandline.\n* [Duplicacy](https://github.com/gilbertchen/duplicacy) - A cross-platform network and cloud backup tool based on the idea of lock-free deduplication.\n* [gfile](https://github.com/Antonito/gfile) - Securely transfer files between two computers, without any third party, over WebRTC.\n* [Go Package Store](https://github.com/shurcooL/Go-Package-Store) - App that displays updates for the Go packages in your GOPATH.\n* [go-peerflix](https://github.com/Sioro-Neoku/go-peerflix) - Video streaming torrent client.\n* [GoBoy](https://github.com/Humpheh/goboy) - Nintendo Game Boy Color emulator written in Go.\n* [gocc](https://github.com/goccmack/gocc) - Gocc is a compiler kit for Go written in Go.\n* [GoDocTooltip](https://github.com/diankong/GoDocTooltip) - Chrome extension for Go Doc sites, which shows function description as tooltip at function list.\n* [GoLand](https://jetbrains.com/go) - Full featured cross-platform Go IDE.\n* [Gor](https://github.com/buger/gor) - Http traffic replication tool, for replaying traffic from production to stage/dev environments in real-time.\n* [hugo](http://gohugo.io/) - Fast and Modern Static Website Engine.\n* [ide](https://github.com/thestrukture/ide) - Browser accessible IDE. Designed for Go with Go.\n* [ipe](https://github.com/dimiro1/ipe) - Open source Pusher server implementation compatible with Pusher client libraries written in GO.\n* [joincap](https://github.com/assafmo/joincap) - Command-line utility for merging multiple pcap files together.\n* [Juju](https://jujucharms.com/) - Cloud-agnostic service deployment and orchestration - supports EC2, Azure, Openstack, MAAS and more.\n* [Leaps](https://github.com/jeffail/leaps) - Pair programming service using Operational Transforms.\n* [lgo](https://github.com/yunabe/lgo) - Interactive Go programming with Jupyter. It supports code completion, code inspection and 100% Go compatibility.\n* [limetext](http://limetext.org/) - Lime Text is a powerful and elegant text editor primarily developed in Go that aims to be a Free and open-source software successor to Sublime Text.\n* [LiteIDE](https://github.com/visualfc/liteide) - LiteIDE is a simple, open source, cross-platform Go IDE.\n* [mockingjay](https://github.com/quii/mockingjay-server) - Fake HTTP servers and consumer driven contracts from one configuration file. You can also make the server randomly misbehave to help do more realistic performance tests.\n* [myLG](https://github.com/mehrdadrad/mylg) - Command Line Network Diagnostic tool written in Go.\n* [naclpipe](https://github.com/unix4fun/naclpipe) - Simple NaCL EC25519 based crypto pipe tool written in Go.\n* [nes](https://github.com/fogleman/nes) - Nintendo Entertainment System (NES) emulator written in Go.\n* [orange-cat](https://github.com/noraesae/orange-cat) - Markdown previewer written in Go.\n* [Orbit](https://github.com/gulien/orbit) - A simple tool for running commands and generating files from templates.\n* [peg](https://github.com/pointlander/peg) - Peg, Parsing Expression Grammar, is an implementation of a Packrat parser generator.\n* [restic](https://github.com/restic/restic) - De-duplicating backup program.\n* [scc](https://github.com/boyter/scc) - Sloc Cloc and Code, a very fast accurate code counter with complexity calculations and COCOMO estimates.\n* [Seaweed File System](https://github.com/chrislusf/seaweedfs) - Fast, Simple and Scalable Distributed File System with O(1) disk seek.\n* [shell2http](https://github.com/msoap/shell2http) - Executing shell commands via http server (for prototyping or remote control).\n* [snap](https://github.com/intelsdi-x/snap) - Powerful telemetry framework.\n* [Snitch](https://github.com/lucasgomide/snitch) - Simple way to notify your team and many tools when someone has deployed any application via Tsuru.\n* [Stack Up](https://github.com/pressly/sup) - Stack Up, a super simple deployment tool - just Unix - think of it like 'make' for a network of servers.\n* [syncthing](https://syncthing.net/) - Open, decentralized file synchronization tool and protocol.\n* [term-quiz](https://github.com/crazcalm/term-quiz) - Quizzes for your terminal.\n* [toxiproxy](https://github.com/shopify/toxiproxy) - Proxy to simulate network and system conditions for automated tests.\n* [tsuru](https://tsuru.io/) - Extensible and open source Platform as a Service software.\n* [vFlow](https://github.com/VerizonDigital/vflow) - High-performance, scalable and reliable IPFIX, sFlow and Netflow collector.\n* [wellington](https://github.com/wellington/wellington) - Sass project management tool, extends the language with sprite functions (like Compass).\n\n# Resources\n\n*Where to discover new Go libraries.*\n\n## Benchmarks\n\n* [autobench](https://github.com/davecheney/autobench) - Framework to compare the performance between different Go versions.\n* [go-benchmark-app](https://github.com/mrLSD/go-benchmark-app) - Powerful HTTP-benchmark tool mixed with Аb, Wrk, Siege tools. Gathering statistics and various parameters for benchmarks and comparison results.\n* [go-benchmarks](https://github.com/tylertreat/go-benchmarks) - Few miscellaneous Go microbenchmarks. Compare some language features to alternative approaches.\n* [go-http-routing-benchmark](https://github.com/julienschmidt/go-http-routing-benchmark) - Go HTTP request router benchmark and comparison.\n* [go-web-framework-benchmark](https://github.com/smallnest/go-web-framework-benchmark) - Go web framework benchmark.\n* [go_serialization_benchmarks](https://github.com/alecthomas/go_serialization_benchmarks) - Benchmarks of Go serialization methods.\n* [gocostmodel](https://github.com/PuerkitoBio/gocostmodel) - Benchmarks of common basic operations for the Go language.\n* [golang-sql-benchmark](https://github.com/tyler-smith/golang-sql-benchmark) - Collection of benchmarks for popular Go database/SQL utilities.\n* [gospeed](https://github.com/feyeleanor/GoSpeed) - Go micro-benchmarks for calculating the speed of language constructs.\n* [kvbench](https://github.com/jimrobinson/kvbench) - Key/Value database benchmark.\n* [skynet](https://github.com/atemerev/skynet) - Skynet 1M threads microbenchmark.\n* [speedtest-resize](https://github.com/fawick/speedtest-resize) - Compare various Image resize algorithms for the Go language.\n\n## Conferences\n\n* [Capital Go](http://www.capitalgolang.com) - Washington, D.C., USA.\n* [dotGo](http://www.dotgo.eu) - Paris, France.\n* [GoCon](http://gocon.connpass.com/) - Tokyo, Japan.\n* [GoDays](https://www.godays.io/) - Berlin, Germany.\n* [GoLab](http://golab.io/) - Florence, Italy.\n* [GolangUK](http://golanguk.com/) - London, UK.\n* [GopherChina](http://gopherchina.org) - Shanghai, China.\n* [GopherCon](http://www.gophercon.com/) - Denver, USA.\n* [GopherCon Australia](https://gophercon.com.au/) - Sydney, Australia.\n* [GopherCon Brazil](https://gopherconbr.org) - Florianópolis, BR.\n* [GopherCon Europe](https://gophercon.is/) - Berlin, Germany.\n* [GopherCon India](https://www.gophercon.in/) - Pune, India.\n* [GopherCon Israel](https://www.gophercon.org.il/) - Tel Aviv, Israel.\n* [GopherCon Russia](https://www.gophercon-russia.ru) - Moscow, Russia.\n* [GopherCon Singapore](https://gophercon.sg) - Mapletree Business City, Singapore.\n* [GopherCon Vietnam](https://gophercon.vn/) - Ho Chi Minh City, Vietnam.\n* [GothamGo](http://gothamgo.com/) - New York City, USA.\n* [GoWayFest](https://goway.io/) - Minsk, Belarus.\n\n## E-Books\n\n* [A Go Developer's Notebook](https://leanpub.com/GoNotebook/read)\n* [An Introduction to Programming in Go](http://www.golang-book.com/)\n* [Build Web Application with Golang](https://www.gitbook.com/book/astaxie/build-web-application-with-golang/details)\n* [Building Web Apps With Go](https://www.gitbook.com/book/codegangsta/building-web-apps-with-go/details)\n* [Go 101](https://go101.org) - A book focusing on Go syntax/semantics and all kinds of details.\n* [Go Bootcamp](http://golangbootcamp.com)\n* [Go Succinctly](https://github.com/thedevsir/gosuccinctly) - in Persian.\n* [GoBooks](https://github.com/dariubs/GoBooks) - A curated list of Go books.\n* [Learning Go](https://www.miek.nl/downloads/Go/Learning-Go-latest.pdf)\n* [Network Programming With Go](https://jan.newmarch.name/go/)\n* [The Go Programming Language](http://www.gopl.io/)\n* [The Golang Standard Library by Example (Chinese)](https://github.com/polaris1119/The-Golang-Standard-Library-by-Example)\n* [Web Application with Go the Anti-Textbook](https://github.com/thewhitetulip/web-dev-golang-anti-textbook/)\n* [Writing A Compiler In Go](https://compilerbook.com)\n* [Writing An Interpreter In Go](https://interpreterbook.com)\n\n## Gophers\n\n* [Free Gophers Pack](https://github.com/MariaLetta/free-gophers-pack) - Gopher graphics pack by Maria Letta with illustrations and emotional characters in vector and raster.\n* [Go-gopher-Vector](https://github.com/keygx/Go-gopher-Vector) - Go gopher Vector Data [.ai, .svg].\n* [gopher-logos](https://github.com/GolangUA/gopher-logos) - adorable gopher logos.\n* [gopher-stickers](https://github.com/tenntenn/gopher-stickers)\n* [gopher-vector](https://github.com/golang-samples/gopher-vector)\n* [gophericons](https://github.com/shalakhin/gophericons)\n* [gopherize.me](https://github.com/matryer/gopherize.me) - Gopherize yourself.\n* [gophers](https://github.com/ashleymcnamara/gophers) - Gopher artworks by Ashley McNamara.\n* [gophers](https://github.com/egonelbre/gophers) - Free gophers.\n* [gophers](https://github.com/rogeralsing/gophers) - random gopher graphics.\n* [gophers](https://github.com/sillecelik/go-gopher) - Gopher amigurumi toy pattern.\n\n## Meetups\n\n* [Basel Go Meetup](https://www.meetup.com/Basel-Go-Meetup/)\n* [Berlin Golang](https://www.meetup.com/golang-users-berlin/)\n* [Brisbane Gophers](https://www.meetup.com/Brisbane-Golang-Meetup/)\n* [Canberra Gophers](https://www.meetup.com/Canberra-Gophers/)\n* [Go Language NYC](https://www.meetup.com/golanguagenewyork/)\n* [Go London User Group](https://www.meetup.com/Go-London-User-Group/)\n* [Go Toronto](https://www.meetup.com/go-toronto/)\n* [Go User Group Atlanta](https://www.meetup.com/Go-Users-Group-Atlanta/)\n* [GoBandung](https://www.meetup.com/GoBandung/)\n* [GoBridge, San Francisco, CA](https://www.meetup.com/gobridge/)\n* [GoCracow - Krakow, Poland](https://www.meetup.com/GoCracow/)\n* [GoJakarta](https://www.meetup.com/GoJakarta/)\n* [Golang Amsterdam](https://www.meetup.com/golang-amsterdam/)\n* [Golang Argentina](https://www.meetup.com/Golang-Argentina/)\n* [Golang Baltimore, MD](https://www.meetup.com/BaltimoreGolang/)\n* [Golang Bangalore](https://www.meetup.com/Golang-Bangalore/)\n* [Golang Belo Horizonte - Brazil](https://www.meetup.com/go-belo-horizonte/)\n* [Golang Boston](https://www.meetup.com/bostongo/)\n* [Golang Bulgaria](https://www.meetup.com/Golang-Bulgaria/)\n* [Golang Cardiff, UK](https://www.meetup.com/Cardiff-Go-Meetup/)\n* [Golang Copenhagen](https://www.meetup.com/Go-Cph/)\n* [Golang Curitiba - Brazil](https://www.meetup.com/GolangCWB/)\n* [Golang DC, Arlington, VA](https://www.meetup.com/Golang-DC/)\n* [Golang Dorset, UK](https://www.meetup.com/golang-dorset/)\n* [Golang Estonia](https://www.meetup.com/Golang-Estonia/)\n* [Golang Gurgaon, India](https://www.meetup.com/Gurgaon-Go-Meetup/)\n* [Golang Hamburg - Germany](https://www.meetup.com/Go-User-Group-Hamburg/)\n* [Golang Israel](https://www.meetup.com/Go-Israel/)\n* [Golang Joinville - Brazil](https://www.meetup.com/Joinville-Go-Meetup/)\n* [Golang Korea](https://www.meetup.com/GDG-Golang-Korea/)\n* [Golang Lima - Peru](https://www.meetup.com/Golang-Peru/)\n* [Golang Lyon](https://www.meetup.com/Golang-Lyon/)\n* [Golang Marseille](https://www.meetup.com/fr-FR/Golang-Marseille/)\n* [Golang Melbourne](https://www.meetup.com/golang-mel/)\n* [Golang Mountain View](https://www.meetup.com/Golang-Mountain-View/)\n* [Golang New York](https://www.meetup.com/nycgolang/)\n* [Golang North East](https://www.meetup.com/en-AU/Golang-North-East/)\n* [Golang Paris](https://www.meetup.com/Golang-Paris/)\n* [Golang Pune](https://www.meetup.com/Golang-Pune/)\n* [Golang Singapore](https://www.meetup.com/golangsg/)\n* [Golang Stockholm](https://www.meetup.com/Go-Stockholm/)\n* [Golang Sydney, AU](https://www.meetup.com/golang-syd/)\n* [Golang São Paulo - Brazil](https://www.meetup.com/golangbr/)\n* [Golang Taipei](https://www.meetup.com/golang-taipei-meetup/)\n* [Golang Vancouver, BC](https://www.meetup.com/golangvan/)\n* [Golang Казань](https://www.meetup.com/GolangKazan/)\n* [Golang Москва](https://www.meetup.com/Golang-Moscow/)\n* [Golang Питер](https://www.meetup.com/Golang-Peter/)\n* [GoSF - San Francisco, CA](https://www.meetup.com/golangsf)\n* [Istanbul Golang](https://www.meetup.com/Istanbul-Golang/)\n* [Seattle Go Programmers](https://www.meetup.com/golang/)\n* [Ukrainian Golang User Groups](https://www.meetup.com/uagolang/)\n* [Utah Go User Group](https://www.meetup.com/utahgophers/)\n* [Women Who Go - San Francisco, CA](https://www.meetup.com/Women-Who-Go/)\n\n*Add the group of your city/country here (send **PR**)*\n\n## Social Media\n### Twitter\n\n* [@golang](https://twitter.com/golang)\n* [@golang_news](https://twitter.com/golang_news)\n* [@golangch](https://twitter.com/golangch)\n* [@golangflow](https://twitter.com/golangflow)\n* [@golangweekly](https://twitter.com/golangweekly)\n\n### Reddit\n* [r/golang](https://www.reddit.com/r/golang/)\n\n## Websites\n\n* [Awesome Go @LibHunt](https://go.libhunt.com) - Your go-to Go Toolbox.\n* [Awesome Remote Job](https://github.com/lukasz-madon/awesome-remote-job) - Curated list of awesome remote jobs. A lot of them are looking for Go hackers.\n* [awesome-awesomeness](https://github.com/bayandin/awesome-awesomeness) - List of other amazingly awesome lists.\n* [CodinGame](https://www.codingame.com/) - Learn Go by solving interactive tasks using small games as practical examples.\n* [Go Blog](http://blog.golang.org) - The official Go blog.\n* [Go Challenge](http://golang-challenge.org/) - Learn Go by solving problems and getting feedback from Go experts.\n* [Go Community on Hashnode](https://hashnode.com/n/go) - Community of Gophers on Hashnode.\n* [Go Forum](https://forum.golangbridge.org) - Forum to discuss Go.\n* [Go In 5 Minutes](https://www.goin5minutes.com/) - 5 minute screencasts focused on getting one thing done.\n* [Go Projects](https://github.com/golang/go/wiki/Projects) - List of projects on the Go community wiki.\n* [Go Report Card](https://goreportcard.com) - A report card for your Go package.\n* [go.dev](https://go.dev/) - A hub for Go developers.\n* [gocryforhelp](https://github.com/ninedraft/gocryforhelp) - Collection of Go projects that needs help. Good place to start your open-source way in Go.\n* [godoc.org](https://godoc.org/) - Documentation for open source Go packages.\n* [Golang Developer Jobs](https://golangjob.xyz) - Developer Jobs exclusivly for Golang related Roles.\n* [Golang Flow](https://golangflow.io) - Post Updates, News, Packages and more.\n* [Golang News](https://golangnews.com) - Links and news about Go programming.\n* [golang-graphics](https://github.com/mholt/golang-graphics) - Collection of Go images, graphics, and art.\n* [golang-nuts](https://groups.google.com/forum/#!forum/golang-nuts) - Go mailing list.\n* [Google Plus Community](https://plus.google.com/communities/114112804251407510571) - The Google+ community for #golang enthusiasts.\n* [Gopher Community Chat](https://invite.slack.golangbridge.org) - Join Our New Slack Community For Gophers ([Understand how it came](https://blog.gopheracademy.com/gophers-slack-community/)).\n* [Gophercises](https://gophercises.com/) - Free coding exercises for budding gophers.\n* [gowalker.org](https://gowalker.org) - Go Project API documentation.\n* [json2go](https://m-zajac.github.io/json2go) - Advanced JSON to Go struct conversion - online tool.\n* [justforfunc](https://www.youtube.com/c/justforfunc) - Youtube channel dedicated to Go programming language tips and tricks, hosted by  Francesc Campoy [@francesc](https://twitter.com/francesc).\n* [Made with Golang](https://madewithgolang.com/?ref=awesome-go)\n* [r/Golang](https://www.reddit.com/r/golang) - News about Go.\n* [studygolang](https://studygolang.com) - The community of studygolang in China.\n* [Trending Go repositories on GitHub today](https://github.com/trending?l=go) - Good place to find new Go libraries.\n* [TutorialEdge - Golang](https://tutorialedge.net/course/golang/)\n\n### Tutorials\n\n* [50 Shades of Go](http://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/) - Traps, Gotchas, and Common Mistakes for New Golang Devs.\n* [A Guide to Golang E-Commerce](https://snipcart.com/blog/golang-ecommerce-ponzu-cms-demo?utm_term=golang-ecommerce-ponzu-cms-demo) - Building a Golang site for e-commerce (demo included).\n* [A Tour of Go](http://tour.golang.org/) - Interactive tour of Go.\n* [Build web application with Golang](https://github.com/astaxie/build-web-application-with-golang) - Golang ebook intro how to build a web app with golang.\n* [Building and Testing a REST API in Go with Gorilla Mux and PostgreSQL](https://semaphoreci.com/community/tutorials/building-and-testing-a-rest-api-in-go-with-gorilla-mux-and-postgresql) - We’ll write an API with the help of the powerful Gorilla Mux.\n* [Building Go Web Applications and Microservices Using Gin](https://semaphoreci.com/community/tutorials/building-go-web-applications-and-microservices-using-gin) - Get familiar with Gin and find out how it can help you reduce boilerplate code and build a request handling pipeline.\n* [Caching Slow Database Queries](https://medium.com/@rocketlaunchr.cloud/caching-slow-database-queries-1085d308a0c9) - How to cache slow database queries.\n* [Canceling MySQL](https://medium.com/@rocketlaunchr.cloud/canceling-mysql-in-go-827ed8f83b30) - How to cancel MySQL queries.\n* [Ethereum Development with Go](https://github.com/miguelmota/ethereum-development-with-go-book) - A little e-book on Ethereum Development with Go.\n* [Games With Go](http://gameswithgo.org/) - A video series teaching programming and game development.\n* [Go By Example](https://gobyexample.com/) - Hands-on introduction to Go using annotated example programs.\n* [Go Cheat Sheet](https://github.com/a8m/go-lang-cheat-sheet) - Go's reference card.\n* [Go database/sql tutorial](http://go-database-sql.org/) - Introduction to database/sql.\n* [Go Playground for iOS](https://itunes.apple.com/us/app/go-playground/id1437518275?ls=1&mt=8) - Interactively edit & play Go snippets on your mobile device.\n* [Go WebAssembly Tutorial - Building a Simple Calculator](https://tutorialedge.net/golang/go-webassembly-tutorial/)\n* [go-patterns](https://github.com/tmrts/go-patterns) - Curated list of Go design patterns, recipes and idioms.\n* [Golang for Node.js Developers](https://github.com/miguelmota/golang-for-nodejs-developers) - Examples of Golang compared to Node.js for learning.\n* [Golangbot](https://golangbot.com/learn-golang-series/) - Tutorials to get started with programming in Go.\n* [GolangCode](https://golangcode.com/) - Collection of code snippets and tutorials to help tackle every day issues.\n* [Hackr.io](https://hackr.io/tutorials/learn-golang) - Learn Go from the best online golang tutorials submitted & voted by the golang programming community.\n* [How to Use Godog for Behavior-driven Development in Go](https://semaphoreci.com/community/tutorials/how-to-use-godog-for-behavior-driven-development-in-go) - Get started with Godog — a Behavior-driven development framework for building and testing Go applications.\n* [Learn Go with TDD](https://github.com/quii/learn-go-with-tests) - Learn Go with test-driven development.\n* [Learning Golang - From zero to hero](https://milapneupane.com.np/2019/07/06/learning-golang-from-zero-to-hero/) - Getting started with golang for beginner.\n* [package main](https://www.youtube.com/packagemain) - YouTube channel about Programming in Go.\n* [Programming with Google Go](https://www.coursera.org/specializations/google-golang) - Coursera Specialization to learn about Go from scratch.\n* [The world’s easiest introduction to WebAssembly with Golang](https://medium.com/@martinolsansky/webassembly-with-golang-is-fun-b243c0e34f02)\n* [Working with Go](https://github.com/mkaz/working-with-go) - Intro to go for experienced programmers.\n* [Your basic Go](http://yourbasic.org/golang) - Huge collection of tutorials and how to's.\n",
  "sections": [
    {
      "group": "Awesome Go",
      "title": "Audio and Music",
      "subtitle": "Libraries for manipulating audio.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/algoGuy/EasyMIDI",
          "title": "EasyMIDI",
          "description": "EasyMidi is a simple and reliable library for working with standard midi file (SMF)."
        },
        {
          "href": "https://github.com/mewkiz/flac",
          "title": "flac",
          "description": "Native Go FLAC encoder/decoder with support for FLAC streams."
        },
        {
          "href": "https://github.com/Comcast/gaad",
          "title": "gaad",
          "description": "Native Go AAC bitstream parser."
        },
        {
          "href": "https://github.com/krig/go-sox",
          "title": "go-sox",
          "description": "libsox bindings for go."
        },
        {
          "href": "https://github.com/zhulik/go_mediainfo",
          "title": "go_mediainfo",
          "description": "libmediainfo bindings for go."
        },
        {
          "href": "https://github.com/dh1tw/gosamplerate",
          "title": "gosamplerate",
          "description": "libsamplerate bindings for go."
        },
        {
          "href": "https://github.com/bogem/id3v2",
          "title": "id3v2",
          "description": "Fast and stable ID3 parsing and writing library for Go."
        },
        {
          "href": "https://github.com/gen2brain/malgo",
          "title": "malgo",
          "description": "Mini audio library."
        },
        {
          "href": "https://github.com/tosone/minimp3",
          "title": "minimp3",
          "description": "Lightweight MP3 decoder library."
        },
        {
          "href": "https://github.com/go-mix/mix",
          "title": "mix",
          "description": "Sequence-based Go-native audio mixer for music apps."
        },
        {
          "href": "https://github.com/tcolgate/mp3",
          "title": "mp3",
          "description": "Native Go MP3 decoder."
        },
        {
          "href": "https://github.com/go-music-theory/music-theory",
          "title": "music-theory",
          "description": "Music theory models in Go."
        },
        {
          "href": "https://github.com/hajimehoshi/oto",
          "title": "Oto",
          "description": "A low-level library to play sound on multiple platforms."
        },
        {
          "href": "https://github.com/gordonklaus/portaudio",
          "title": "PortAudio",
          "description": "Go bindings for the PortAudio audio I/O library."
        },
        {
          "href": "https://github.com/rakyll/portmidi",
          "title": "portmidi",
          "description": "Go bindings for PortMidi."
        },
        {
          "href": "https://github.com/wtolson/go-taglib",
          "title": "taglib",
          "description": "Go bindings for taglib."
        },
        {
          "href": "https://github.com/mccoyst/vorbis",
          "title": "vorbis",
          "description": "\"Native\" Go Vorbis decoder (uses CGO, but has no dependencies)."
        },
        {
          "href": "https://github.com/mdlayher/waveform",
          "title": "waveform",
          "description": "Go package capable of generating waveform images from audio streams."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Authentication and OAuth",
      "subtitle": "Libraries for implementing authentications schemes.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/volatiletech/authboss",
          "title": "authboss",
          "description": "Modular authentication system for the web. It tries to remove as much boilerplate and \"hard things\" as possible so that each time you start a new web project in Go, you can plug it in, configure, and start building your app without having to build an authentication system each time."
        },
        {
          "href": "https://github.com/hako/branca",
          "title": "branca",
          "description": "Golang implementation of Branca Tokens."
        },
        {
          "href": "https://github.com/hsluoyz/casbin",
          "title": "casbin",
          "description": "Authorization library that supports access control models like ACL, RBAC, ABAC."
        },
        {
          "href": "https://github.com/mengzhuo/cookiestxt",
          "title": "cookiestxt",
          "description": "provides parser of cookies.txt file format."
        },
        {
          "href": "https://github.com/square/go-jose",
          "title": "go-jose",
          "description": "Fairly complete implementation of the JOSE working group's JSON Web Token, JSON Web Signatures, and JSON Web Encryption specs."
        },
        {
          "href": "https://github.com/RichardKnop/go-oauth2-server",
          "title": "go-oauth2-server",
          "description": "Standalone, specification-compliant,  OAuth2 server written in Golang."
        },
        {
          "href": "https://github.com/dghubble/gologin",
          "title": "gologin",
          "description": "chainable handlers for login with OAuth1 and OAuth2 authentication providers."
        },
        {
          "href": "https://github.com/mikespook/gorbac",
          "title": "gorbac",
          "description": "provides a lightweight role-based access control (RBAC) implementation in Golang."
        },
        {
          "href": "https://github.com/markbates/goth",
          "title": "goth",
          "description": "provides a simple, clean, and idiomatic way to use OAuth and OAuth2. Handles multiple providers out of the box."
        },
        {
          "href": "https://github.com/goji/httpauth",
          "title": "httpauth",
          "description": "HTTP Authentication middleware."
        },
        {
          "href": "https://github.com/abraithwaite/jeff",
          "title": "jeff",
          "description": "Simple, flexible, secure and idiomatic web session management with pluggable backends."
        },
        {
          "href": "https://github.com/robbert229/jwt",
          "title": "jwt",
          "description": "Clean and easy to use implementation of JSON Web Tokens (JWT)."
        },
        {
          "href": "https://github.com/pascaldekloe/jwt",
          "title": "jwt",
          "description": "Lightweight JSON Web Token (JWT) library."
        },
        {
          "href": "https://github.com/adam-hanna/jwt-auth",
          "title": "jwt-auth",
          "description": "JWT middleware for Golang http servers with many configuration options."
        },
        {
          "href": "https://github.com/dgrijalva/jwt-go",
          "title": "jwt-go",
          "description": "Golang implementation of JSON Web Tokens (JWT)."
        },
        {
          "href": "https://github.com/tarent/loginsrv",
          "title": "loginsrv",
          "description": "JWT login microservice with plugable backends such as OAuth2 (Github), htpasswd, osiam."
        },
        {
          "href": "https://github.com/golang/oauth2",
          "title": "oauth2",
          "description": "Successor of goauth2. Generic OAuth 2.0 package that comes with JWT, Google APIs, Compute Engine and App Engine support."
        },
        {
          "href": "https://github.com/openshift/osin",
          "title": "osin",
          "description": "Golang OAuth2 server library."
        },
        {
          "href": "https://github.com/o1egl/paseto",
          "title": "paseto",
          "description": "Golang implementation of Platform-Agnostic Security Tokens (PASETO)."
        },
        {
          "href": "https://github.com/xyproto/permissions2",
          "title": "permissions2",
          "description": "Library for keeping track of users, login states and permissions. Uses secure cookies and bcrypt."
        },
        {
          "href": "https://github.com/zpatrick/rbac",
          "title": "rbac",
          "description": "Minimalistic RBAC package for Go applications."
        },
        {
          "href": "https://github.com/SonicRoshan/scope",
          "title": "scope",
          "description": "Easily Manage OAuth2 Scopes In Go."
        },
        {
          "href": "https://github.com/alexedwards/scs",
          "title": "scs",
          "description": "Session Manager for HTTP servers."
        },
        {
          "href": "https://github.com/chmike/securecookie",
          "title": "securecookie",
          "description": "Efficient secure cookie encoding/decoding."
        },
        {
          "href": "https://github.com/icza/session",
          "title": "session",
          "description": "Go session management for web servers (including support for Google App Engine - GAE)."
        },
        {
          "href": "https://github.com/f0rmiga/sessiongate-go",
          "title": "sessiongate-go",
          "description": "Go session management using the SessionGate Redis module."
        },
        {
          "href": "https://github.com/adam-hanna/sessions",
          "title": "sessions",
          "description": "Dead simple, highly performant, highly customizable sessions service for go http servers."
        },
        {
          "href": "https://github.com/swithek/sessionup",
          "title": "sessionup",
          "description": "Simple, yet effective HTTP session management and identification package."
        },
        {
          "href": "https://github.com/sashka/signedvalue",
          "title": "signedvalue",
          "description": "Signed and timestamped strings compatible with Tornado's create_signed_value , decode_signed_value , and therefore set_secure_cookie and get_secure_cookie ."
        },
        {
          "href": "https://github.com/brianvoe/sjwt",
          "title": "sjwt",
          "description": "Simple jwt generator and parser."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Bot Building",
      "subtitle": "Libraries for building and working with bots.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/ewohltman/ephemeral-roles",
          "title": "ephemeral-roles",
          "description": "A Discord bot for managing ephemeral roles based upon voice channel member presence."
        },
        {
          "href": "https://github.com/go-chat-bot/bot",
          "title": "go-chat-bot",
          "description": "IRC, Slack & Telegram bot written in Go."
        },
        {
          "href": "https://joe-bot.net",
          "title": "go-joe",
          "description": "A general-purpose bot library inspired by Hubot but written in Go."
        },
        {
          "href": "https://github.com/oklahomer/go-sarah",
          "title": "go-sarah",
          "description": "Framework to build bot for desired chat services including LINE, Slack, Gitter and more."
        },
        {
          "href": "https://github.com/olebedev/go-tgbot",
          "title": "go-tgbot",
          "description": "Pure Golang Telegram Bot API wrapper, generated from swagger file, session-based router and middleware."
        },
        {
          "href": "https://github.com/gempir/go-twitch-irc",
          "title": "go-twitch-irc",
          "description": "Libary to write bots for twitch.tv chat"
        },
        {
          "href": "https://github.com/saniales/golang-crypto-trading-bot",
          "title": "Golang CryptoTrading Bot",
          "description": "A golang implementation of a console-based trading bot for cryptocurrency exchanges."
        },
        {
          "href": "https://github.com/nikepan/govkbot",
          "title": "govkbot",
          "description": "Simple Go VK bot library."
        },
        {
          "href": "https://github.com/sbstjn/hanu",
          "title": "hanu",
          "description": "Framework for writing Slack bots."
        },
        {
          "href": "https://github.com/stellar/kelp",
          "title": "Kelp",
          "description": "official trading and market-making bot for the Stellar DEX. Works out-of-the-box, written in Golang, compatible with centralized exchanges and custom trading strategies."
        },
        {
          "href": "https://github.com/zhulik/margelet",
          "title": "margelet",
          "description": "Framework for building Telegram bots."
        },
        {
          "href": "https://github.com/onrik/micha",
          "title": "micha",
          "description": "Go Library for Telegram bot api."
        },
        {
          "href": "https://github.com/shomali11/slacker",
          "title": "slacker",
          "description": "Easy to use framework to create Slack bots."
        },
        {
          "href": "https://github.com/alexandre-normand/slackscot",
          "title": "slackscot",
          "description": "Another framework for building Slack bots."
        },
        {
          "href": "https://github.com/yanzay/tbot",
          "title": "tbot",
          "description": "Telegram bot server with API similar to net/http."
        },
        {
          "href": "https://github.com/tucnak/telebot",
          "title": "telebot",
          "description": "Telegram bot framework written in Go."
        },
        {
          "href": "https://github.com/Syfaro/telegram-bot-api",
          "title": "telegram-bot-api",
          "description": "Simple and clean Telegram bot client."
        },
        {
          "href": "https://github.com/kyleterry/tenyks",
          "title": "Tenyks",
          "description": "Service oriented IRC bot using Redis and JSON for messaging."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Command Line",
      "subsections": [
        {
          "title": "Standard CLI",
          "subtitle": "Libraries for building standard or basic Command Line applications.",
          "subsections": [],
          "links": [
            {
              "href": "https://github.com/gopinath-langote/1build",
              "title": "1build",
              "description": "Command line tool to frictionlessly manage project-specific commands."
            },
            {
              "href": "https://github.com/akamensky/argparse",
              "title": "argparse",
              "description": "Command line argument parser inspired by Python's argparse module."
            },
            {
              "href": "https://github.com/cosiner/argv",
              "title": "argv",
              "description": "Go library to split command line string as arguments array using the bash syntax."
            },
            {
              "href": "https://github.com/mkideal/cli",
              "title": "cli",
              "description": "Feature-rich and easy to use command-line package based on golang struct tags."
            },
            {
              "href": "https://github.com/teris-io/cli",
              "title": "cli",
              "description": "Simple and complete API for building command line interfaces in Go."
            },
            {
              "href": "https://github.com/tcnksm/gcli",
              "title": "cli-init",
              "description": "The easy way to start building Golang command line applications."
            },
            {
              "href": "http://github.com/tucnak/climax",
              "title": "climax",
              "description": "Alternative CLI with \"human face\", in spirit of Go command."
            },
            {
              "href": "https://github.com/leaanthony/clir",
              "title": "clîr",
              "description": "A Simple and Clear CLI library. Dependency free."
            },
            {
              "href": "https://github.com/posener/cmd",
              "title": "cmd",
              "description": "Extends the standard flag package to support sub commands and more in idomatic way."
            },
            {
              "href": "https://github.com/hedzr/cmdr",
              "title": "cmdr",
              "description": "A POSIX/GNU style, getopt-like command-line UI Go library."
            },
            {
              "href": "https://github.com/spf13/cobra",
              "title": "cobra",
              "description": "Commander for modern Go CLI interactions."
            },
            {
              "href": "https://github.com/jaffee/commandeer",
              "title": "commandeer",
              "description": "Dev-friendly CLI apps: sets up flags, defaults, and usage based on struct fields and tags."
            },
            {
              "href": "https://github.com/posener/complete",
              "title": "complete",
              "description": "Write bash completions in Go + Go command bash completion."
            },
            {
              "href": "https://github.com/dnote/dnote",
              "title": "Dnote",
              "description": "A simple command line notebook with multi-device sync."
            },
            {
              "href": "https://github.com/docopt/docopt.go",
              "title": "docopt.go",
              "description": "Command-line arguments parser that will make you smile."
            },
            {
              "href": "https://github.com/codingconcepts/env",
              "title": "env",
              "description": "Tag-based environment configuration for structs."
            },
            {
              "href": "https://github.com/cosiner/flag",
              "title": "flag",
              "description": "Simple but powerful command line option parsing library for Go supporting subcommand."
            },
            {
              "href": "https://github.com/integrii/flaggy",
              "title": "flaggy",
              "description": "A robust and idiomatic flags package with excellent subcommand support."
            },
            {
              "href": "https://github.com/sgreben/flagvar",
              "title": "flagvar",
              "description": "A collection of flag argument types for Go's standard flag package."
            },
            {
              "href": "https://github.com/alexflint/go-arg",
              "title": "go-arg",
              "description": "Struct-based argument parsing in Go."
            },
            {
              "href": "https://github.com/yitsushi/go-commander",
              "title": "go-commander",
              "description": "Go library to simplify CLI workflow."
            },
            {
              "href": "https://github.com/jessevdk/go-flags",
              "title": "go-flags",
              "description": "go command line option parser."
            },
            {
              "href": "https://github.com/DavidGamba/go-getoptions",
              "title": "go-getoptions",
              "description": "Go option parser inspired on the flexibility of Perl’s GetOpt::Long."
            },
            {
              "href": "https://github.com/devfacet/gocmd",
              "title": "gocmd",
              "description": "Go library for building command line applications."
            },
            {
              "href": "https://github.com/hidevopsio/hiboot/tree/master/pkg/app/cli",
              "title": "hiboot cli",
              "description": "cli application framework with auto configuration and dependency injection."
            },
            {
              "href": "https://github.com/liujianping/job",
              "title": "job",
              "description": "JOB, make your short-term command as a long-term job."
            },
            {
              "href": "https://github.com/alecthomas/kingpin",
              "title": "kingpin",
              "description": "Command line and flag parser supporting sub commands."
            },
            {
              "href": "https://github.com/peterh/liner",
              "title": "liner",
              "description": "Go readline-like library for command-line interfaces."
            },
            {
              "href": "https://github.com/mitchellh/cli",
              "title": "mitchellh/cli",
              "description": "Go library for implementing command-line interfaces."
            },
            {
              "href": "https://github.com/jawher/mow.cli",
              "title": "mow.cli",
              "description": "Go library for building CLI applications with sophisticated flag and argument parsing and validation."
            },
            {
              "href": "https://github.com/nanovms/ops",
              "title": "ops",
              "description": "Unikernel Builder/Orchestrator."
            },
            {
              "href": "https://github.com/spf13/pflag",
              "title": "pflag",
              "description": "Drop-in replacement for Go's flag package, implementing POSIX/GNU-style --flags."
            },
            {
              "href": "https://github.com/chzyer/readline",
              "title": "readline",
              "description": "Pure golang implementation that provides most features in GNU-Readline under MIT license."
            },
            {
              "href": "https://github.com/Zaba505/sand",
              "title": "sand",
              "description": "Simple API for creating interpreters and so much more."
            },
            {
              "href": "https://github.com/octago/sflags",
              "title": "sflags",
              "description": "Struct based flags generator for flag, urfave/cli, pflag, cobra, kingpin and other libraries."
            },
            {
              "href": "https://github.com/antham/strumt",
              "title": "strumt",
              "description": "Library to create prompt chain."
            },
            {
              "href": "https://github.com/liujianping/ts",
              "title": "ts",
              "description": "Timestamp convert & compare tool."
            },
            {
              "href": "https://github.com/ukautz/clif",
              "title": "ukautz/clif",
              "description": "Small command line interface framework."
            },
            {
              "href": "https://github.com/urfave/cli",
              "title": "urfave/cli",
              "description": "Simple, fast, and fun package for building command line apps in Go (formerly codegangsta/cli)."
            },
            {
              "href": "https://github.com/dixonwille/wlog",
              "title": "wlog",
              "description": "Simple logging interface that supports cross-platform color and concurrency."
            },
            {
              "href": "https://github.com/dixonwille/wmenu",
              "title": "wmenu",
              "description": "Easy to use menu structure for cli applications that prompts users to make choices."
            }
          ]
        },
        {
          "title": "Advanced Console UIs",
          "subtitle": "Libraries for building Console Applications and Console User Interfaces.",
          "subsections": [],
          "links": [
            {
              "href": "https://github.com/guptarohit/asciigraph",
              "title": "asciigraph",
              "description": "Go package to make lightweight ASCII line graph ╭┈╯ in command line apps with no other dependencies."
            },
            {
              "href": "https://github.com/logrusorgru/aurora",
              "title": "aurora",
              "description": "ANSI terminal colors that supports fmt.Printf/Sprintf."
            },
            {
              "href": "https://github.com/mingrammer/cfmt",
              "title": "cfmt",
              "description": "Contextual fmt inspired by bootstrap color classes."
            },
            {
              "href": "https://github.com/ttacon/chalk",
              "title": "chalk",
              "description": "Intuitive package for prettifying terminal/console output."
            },
            {
              "href": "https://github.com/TreyBastian/colourize",
              "title": "colourize",
              "description": "Go library for ANSI colour text in terminals."
            },
            {
              "href": "https://github.com/wzshiming/ctc",
              "title": "ctc",
              "description": "The non-invasive cross-platform terminal color library does not need to modify the Print method."
            },
            {
              "href": "https://github.com/workanator/go-ataman",
              "title": "go-ataman",
              "description": "Go library for rendering ANSI colored text templates in terminals."
            },
            {
              "href": "https://github.com/mattn/go-colorable",
              "title": "go-colorable",
              "description": "Colorable writer for windows."
            },
            {
              "href": "https://github.com/daviddengcn/go-colortext",
              "title": "go-colortext",
              "description": "Go library for color output in terminals."
            },
            {
              "href": "https://github.com/mattn/go-isatty",
              "title": "go-isatty",
              "description": "isatty for golang."
            },
            {
              "href": "https://github.com/c-bata/go-prompt",
              "title": "go-prompt",
              "description": "Library for building a powerful interactive prompt, inspired by python-prompt-toolkit ."
            },
            {
              "href": "https://github.com/jroimartin/gocui",
              "title": "gocui",
              "description": "Minimalist Go library aimed at creating Console User Interfaces."
            },
            {
              "href": "https://github.com/labstack/gommon/tree/master/color",
              "title": "gommon/color",
              "description": "Style terminal text."
            },
            {
              "href": "https://github.com/gookit/color",
              "title": "gookit/color",
              "description": "Terminal color rendering tool library, support 16 colors, 256 colors, RGB color rendering output, compatible with Windows."
            },
            {
              "href": "https://github.com/vbauerster/mpb",
              "title": "mpb",
              "description": "Multi progress bar for terminal applications."
            },
            {
              "href": "https://github.com/schollz/progressbar",
              "title": "progressbar",
              "description": "Basic thread-safe progress bar that works in every OS."
            },
            {
              "href": "https://github.com/alexeyco/simpletable",
              "title": "simpletable",
              "description": "Simple tables in terminal with Go."
            },
            {
              "href": "https://github.com/cheynewallace/tabby",
              "title": "tabby",
              "description": "A tiny library for super simple Golang tables."
            },
            {
              "href": "https://github.com/InVisionApp/tabular",
              "title": "tabular",
              "description": "Print ASCII tables from command line utilities without the need to pass large sets of data to the API."
            },
            {
              "href": "https://github.com/nsf/termbox-go",
              "title": "termbox-go",
              "description": "Termbox is a library for creating cross-platform text-based interfaces."
            },
            {
              "href": "https://github.com/mum4k/termdash",
              "title": "termdash",
              "description": "Go terminal dashboard based on and inspired by termui ."
            },
            {
              "href": "https://github.com/gizak/termui",
              "title": "termui",
              "description": "Go terminal dashboard based on and inspired by blessed-contrib ."
            },
            {
              "href": "https://github.com/gosuri/uilive",
              "title": "uilive",
              "description": "Library for updating terminal output in realtime."
            },
            {
              "href": "https://github.com/gosuri/uiprogress",
              "title": "uiprogress",
              "description": "Flexible library to render progress bars in terminal applications."
            },
            {
              "href": "https://github.com/gosuri/uitable",
              "title": "uitable",
              "description": "Library to improve readability in terminal apps using tabular data."
            },
            {
              "href": "https://github.com/theckman/yacspin",
              "title": "yacspin",
              "description": "Yet Another CLi Spinner package, for working with terminal spinners."
            }
          ]
        }
      ],
      "links": []
    },
    {
      "group": "Awesome Go",
      "title": "Configuration",
      "subtitle": "Libraries for configuration parsing.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/ilyakaznacheev/cleanenv",
          "title": "cleanenv",
          "description": "Minimalistic configuration reader (from files, ENV, and wherever you want)."
        },
        {
          "href": "https://github.com/golobby/config",
          "title": "config",
          "description": "A lightweight yet powerful config package for Go projects."
        },
        {
          "href": "https://github.com/JeremyLoy/config",
          "title": "config",
          "description": "Cloud native application configuration. Bind ENV to structs in only two lines."
        },
        {
          "href": "https://github.com/olebedev/config",
          "title": "config",
          "description": "JSON or YAML configuration wrapper with environment variables and flags parsing."
        },
        {
          "href": "https://github.com/BoRuDar/configuration",
          "title": "configuration",
          "description": "Library for initializing configuration structs from env variables, files, flags and 'default' tag."
        },
        {
          "href": "https://github.com/paked/configure",
          "title": "configure",
          "description": "Provides configuration through multiple sources, including JSON, flags and environment variables."
        },
        {
          "href": "https://github.com/heetch/confita",
          "title": "confita",
          "description": "Load configuration in cascade from multiple backends into a struct."
        },
        {
          "href": "https://github.com/the4thamigo-uk/conflate",
          "title": "conflate",
          "description": "Library/tool to merge multiple JSON/YAML/TOML files from arbitrary URLs, validation against a JSON schema, and application of default values defined in the schema."
        },
        {
          "href": "https://github.com/caarlos0/env",
          "title": "env",
          "description": "Parse environment variables to Go structs (with defaults)."
        },
        {
          "href": "https://github.com/tomazk/envcfg",
          "title": "envcfg",
          "description": "Un-marshaling environment variables to Go structs."
        },
        {
          "href": "https://github.com/ian-kent/envconf",
          "title": "envconf",
          "description": "Configuration from environment."
        },
        {
          "href": "https://github.com/vrischmann/envconfig",
          "title": "envconfig",
          "description": "Read your configuration from environment variables."
        },
        {
          "href": "https://github.com/antham/envh",
          "title": "envh",
          "description": "Helpers to manage environment variables."
        },
        {
          "href": "https://github.com/go-gcfg/gcfg",
          "title": "gcfg",
          "description": "read INI-style configuration files into Go structs; supports user-defined types and subsections."
        },
        {
          "href": "https://github.com/sakirsensoy/genv",
          "title": "genv",
          "description": "Read environment variables easily with dotenv support."
        },
        {
          "href": "https://github.com/ianlopshire/go-ssm-config",
          "title": "go-ssm-config",
          "description": "Go utility for loading configuration parameters from AWS SSM (Parameter Store)."
        },
        {
          "href": "https://github.com/ufoscout/go-up",
          "title": "go-up",
          "description": "A simple configuration library with recursive placeholders resolution and no magic."
        },
        {
          "href": "https://github.com/crgimenes/goConfig",
          "title": "goConfig",
          "description": "Parses a struct as input and populates the fields of this struct with parameters from command line, environment variables and configuration file."
        },
        {
          "href": "https://github.com/joho/godotenv",
          "title": "godotenv",
          "description": "Go port of Ruby's dotenv library (Loads environment variables from .env )."
        },
        {
          "href": "https://github.com/ian-kent/gofigure",
          "title": "gofigure",
          "description": "Go application configuration made easy."
        },
        {
          "href": "https://github.com/One-com/gone/tree/master/jconf",
          "title": "gone/jconf",
          "description": "Modular JSON configuration. Keep you config structs along with the code they configure and delegate parsing to submodules without sacrificing full config serialization."
        },
        {
          "href": "https://github.com/gookit/config",
          "title": "gookit/config",
          "description": "application config manage(load,get,set). support JSON, YAML, TOML, INI, HCL. multi file load, data override merge."
        },
        {
          "href": "https://github.com/beatlabs/harvester",
          "title": "harvester",
          "description": "Harvester, a easy to use static and dynamic configuration package supportig seeding, env vars and Consul integration."
        },
        {
          "href": "https://github.com/hjson/hjson-go",
          "title": "hjson",
          "description": "Human JSON, a configuration file format for humans. Relaxed syntax, fewer mistakes, more comments."
        },
        {
          "href": "https://github.com/schachmat/ingo",
          "title": "ingo",
          "description": "Flags persisted in an ini-like config file."
        },
        {
          "href": "https://github.com/go-ini/ini",
          "title": "ini",
          "description": "Go package to read and write INI files."
        },
        {
          "href": "https://github.com/joshbetz/config",
          "title": "joshbetz/config",
          "description": "Small configuration library for Go that parses environment variables, JSON files, and reloads automatically on SIGHUP."
        },
        {
          "href": "https://github.com/kelseyhightower/envconfig",
          "title": "kelseyhightower/envconfig",
          "description": "Go library for managing configuration data from environment variables."
        },
        {
          "href": "https://github.com/knadh/koanf",
          "title": "koanf",
          "description": "Light weight, extensible library for reading config in Go applications. Built in support for JSON, TOML, YAML, env, command line."
        },
        {
          "href": "https://github.com/lalamove/konfig",
          "title": "konfig",
          "description": "Composable, observable and performant config handling for Go for the distributed processing era."
        },
        {
          "href": "https://github.com/sasbury/mini",
          "title": "mini",
          "description": "Golang package for parsing ini-style configuration files."
        },
        {
          "href": "https://github.com/nasermirzaei89/env",
          "title": "nasermirzaei89/env",
          "description": "Simple useful package for read environment variables."
        },
        {
          "href": "http://github.com/goraz/onion",
          "title": "onion",
          "description": "Layer based configuration for Go, Supports JSON, TOML, YAML, properties, etcd, env, and encryption using PGP."
        },
        {
          "href": "https://github.com/oblq/sprbox",
          "title": "sprbox",
          "description": "Build-environment aware toolbox factory and agnostic config parser (YAML, TOML, JSON and Environment vars)."
        },
        {
          "href": "https://github.com/tucnak/store",
          "title": "store",
          "description": "Lightweight configuration manager for Go."
        },
        {
          "href": "https://github.com/spf13/viper",
          "title": "viper",
          "description": "Go configuration with fangs."
        },
        {
          "href": "https://github.com/OpenPeeDeeP/xdg",
          "title": "xdg",
          "description": "Cross platform package that follows the XDG Standard ."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Continuous Integration",
      "subtitle": "Tools for help with continuous integration.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/ovh/cds",
          "title": "CDS",
          "description": "Enterprise-Grade CI/CD and DevOps Automation Open Source Platform."
        },
        {
          "href": "https://github.com/drone/drone",
          "title": "drone",
          "description": "Drone is a Continuous Integration platform built on Docker, written in Go."
        },
        {
          "href": "https://github.com/duck8823/duci",
          "title": "duci",
          "description": "A simple ci server no needs domain specific languages."
        },
        {
          "href": "https://github.com/nikogura/gomason",
          "title": "gomason",
          "description": "Test, Build, Sign, and Publish your go binaries from a clean workspace."
        },
        {
          "href": "https://github.com/mattn/goveralls",
          "title": "goveralls",
          "description": "Go integration for Coveralls.io continuous code coverage tracking system."
        },
        {
          "href": "https://github.com/go-playground/overalls",
          "title": "overalls",
          "description": "Multi-Package go project coverprofile for tools like goveralls."
        },
        {
          "href": "https://github.com/LawrenceWoodman/roveralls",
          "title": "roveralls",
          "description": "Recursive coverage testing tool."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "CSS Preprocessors",
      "subtitle": "Libraries for preprocessing CSS files.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/yosssi/gcss",
          "title": "gcss",
          "description": "Pure Go CSS Preprocessor."
        },
        {
          "href": "https://github.com/wellington/go-libsass",
          "title": "go-libsass",
          "description": "Go wrapper to the 100% Sass compatible libsass project."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Data Structures",
      "subtitle": "Generic datastructures and algorithms in Go.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/shady831213/algorithms",
          "title": "algorithms",
          "description": "Algorithms and data structures.CLRS study."
        },
        {
          "href": "https://github.com/zhuangsirui/binpacker",
          "title": "binpacker",
          "description": "Binary packer and unpacker helps user build custom binary stream."
        },
        {
          "href": "https://github.com/yourbasic/bit",
          "title": "bit",
          "description": "Golang set data structure with bonus bit-twiddling functions."
        },
        {
          "href": "https://github.com/willf/bitset",
          "title": "bitset",
          "description": "Go package implementing bitsets."
        },
        {
          "href": "https://github.com/zhenjl/bloom",
          "title": "bloom",
          "description": "Bloom filters implemented in Go."
        },
        {
          "href": "https://github.com/yourbasic/bloom",
          "title": "bloom",
          "description": "Golang Bloom filter implementation."
        },
        {
          "href": "https://github.com/tylertreat/BoomFilters",
          "title": "boomfilters",
          "description": "Probabilistic data structures for processing continuous, unbounded streams."
        },
        {
          "href": "https://github.com/free/concurrent-writer",
          "title": "concurrent-writer",
          "description": "Highly concurrent drop-in replacement for bufio.Writer ."
        },
        {
          "href": "https://github.com/InVisionApp/conjungo",
          "title": "conjungo",
          "description": "A small, powerful and flexible merge library."
        },
        {
          "href": "https://github.com/seiflotfy/count-min-log",
          "title": "count-min-log",
          "description": "Go implementation Count-Min-Log sketch: Approximately counting with approximate counters (Like Count-Min sketch but using less memory)."
        },
        {
          "href": "https://github.com/superwhiskers/crunch",
          "title": "crunch",
          "description": "Go package implementing buffers for handling various datatypes easily."
        },
        {
          "href": "https://github.com/seiflotfy/cuckoofilter",
          "title": "cuckoofilter",
          "description": "Cuckoo filter: a good alternative to a counting bloom filter implemented in Go."
        },
        {
          "href": "https://github.com/edwingeng/deque",
          "title": "deque",
          "description": "A highly optimized double-ended queue."
        },
        {
          "href": "https://github.com/gammazero/deque",
          "title": "deque",
          "description": "Fast ring-buffer deque (double-ended queue)."
        },
        {
          "href": "https://github.com/srfrog/dict",
          "title": "dict",
          "description": "Python-like dictionaries (dict) for Go."
        },
        {
          "href": "https://github.com/zhenjl/encoding",
          "title": "encoding",
          "description": "Integer Compression Libraries for Go."
        },
        {
          "href": "https://github.com/plar/go-adaptive-radix-tree",
          "title": "go-adaptive-radix-tree",
          "description": "Go implementation of Adaptive Radix Tree."
        },
        {
          "href": "https://github.com/Workiva/go-datastructures",
          "title": "go-datastructures",
          "description": "Collection of useful, performant, and thread-safe data structures."
        },
        {
          "href": "https://github.com/amallia/go-ef",
          "title": "go-ef",
          "description": "A Go implementation of the Elias-Fano encoding."
        },
        {
          "href": "https://github.com/hailocab/go-geoindex",
          "title": "go-geoindex",
          "description": "In-memory geo index."
        },
        {
          "href": "https://github.com/OrlovEvgeny/go-mcache",
          "title": "go-mcache",
          "description": "Fast in-memory key:value store/cache library. Pointer caches."
        },
        {
          "href": "https://github.com/aurelien-rainone/go-rquad",
          "title": "go-rquad",
          "description": "Region quadtrees with efficient point location and neighbour finding."
        },
        {
          "href": "https://github.com/eko/gocache",
          "title": "gocache",
          "description": "A complete Go cache library with mutiple stores (memory, memcache, redis, ...), chainable, loadable, metrics cache and more."
        },
        {
          "href": "https://github.com/enriquebris/goconcurrentqueue",
          "title": "goconcurrentqueue",
          "description": "Concurrent FIFO queue."
        },
        {
          "href": "https://github.com/emirpasic/gods",
          "title": "gods",
          "description": "Go Data Structures. Containers, Sets, Lists, Stacks, Maps, BidiMaps, Trees, HashSet etc."
        },
        {
          "href": "https://github.com/xxjwxc/gofal",
          "title": "gofal",
          "description": "fractional api for Go."
        },
        {
          "href": "https://github.com/deckarep/golang-set",
          "title": "golang-set",
          "description": "Thread-Safe and Non-Thread-Safe high-performance sets for Go."
        },
        {
          "href": "https://github.com/zoumo/goset",
          "title": "goset",
          "description": "A useful Set collection implementation for Go."
        },
        {
          "href": "https://github.com/ryszard/goskiplist",
          "title": "goskiplist",
          "description": "Skip list implementation in Go."
        },
        {
          "href": "https://github.com/liyue201/gostl",
          "title": "gostl",
          "description": "Data structure and algorithm library for go, designed to provide functions similar to C++ STL."
        },
        {
          "href": "https://github.com/kniren/gota",
          "title": "gota",
          "description": "Implementation of dataframes, series, and data wrangling methods for Go."
        },
        {
          "href": "https://github.com/emvi/hide",
          "title": "hide",
          "description": "ID type with marshalling to/from hash to prevent sending IDs to clients."
        },
        {
          "href": "https://github.com/google/hilbert",
          "title": "hilbert",
          "description": "Go package for mapping values to and from space-filling curves, such as Hilbert and Peano curves."
        },
        {
          "href": "https://github.com/axiomhq/hyperloglog",
          "title": "hyperloglog",
          "description": "HyperLogLog implementation with Sparse, LogLog-Beta bias correction and TailCut space reduction."
        },
        {
          "href": "https://github.com/disksing/iter",
          "title": "iter",
          "description": "Go implementation of C++ STL iterators and algorithms."
        },
        {
          "href": "https://github.com/agext/levenshtein",
          "title": "levenshtein",
          "description": "Levenshtein distance and similarity metrics with customizable edit costs and Winkler-like bonus for common prefix."
        },
        {
          "href": "https://github.com/agnivade/levenshtein",
          "title": "levenshtein",
          "description": "Implementation to calculate levenshtein distance in Go."
        },
        {
          "href": "https://github.com/smartystreets/mafsa",
          "title": "mafsa",
          "description": "MA-FSA implementation with Minimal Perfect Hashing."
        },
        {
          "href": "https://github.com/cbergoon/merkletree",
          "title": "merkletree",
          "description": "Implementation of a merkle tree providing an efficient and secure verification of the contents of data structures."
        },
        {
          "href": "https://github.com/BlackRabbitt/mspm",
          "title": "mspm",
          "description": "Multi-String Pattern Matching Algorithm for information retrieval."
        },
        {
          "href": "https://github.com/emvi/null",
          "title": "null",
          "description": "Nullable Go types that can be marshalled/unmarshalled to/from JSON."
        },
        {
          "href": "https://github.com/MonaxGT/parsefields",
          "title": "parsefields",
          "description": "Tools for parse JSON-like logs for collecting unique fields and events."
        },
        {
          "href": "https://github.com/hyfather/pipeline",
          "title": "pipeline",
          "description": "An implementation of pipelines with fan-in and fan-out."
        },
        {
          "href": "https://github.com/viant/ptrie",
          "title": "ptrie",
          "description": "An implementation of prefix tree."
        },
        {
          "href": "https://github.com/rocketlaunchr/remember-go",
          "title": "remember-go",
          "description": "A universal interface for caching slow database queries (backed by redis, memcached, ristretto, or in-memory)."
        },
        {
          "href": "https://github.com/TheTannerRyan/ring",
          "title": "ring",
          "description": "Go implementation of a high performance, thread safe bloom filter."
        },
        {
          "href": "https://github.com/RoaringBitmap/roaring",
          "title": "roaring",
          "description": "Go package implementing compressed bitsets."
        },
        {
          "href": "https://github.com/StudioSol/set",
          "title": "set",
          "description": "Simple set data structure implementation in Go using LinkedHashMap."
        },
        {
          "href": "https://github.com/MauriceGit/skiplist",
          "title": "skiplist",
          "description": "Very fast Go Skiplist implementation."
        },
        {
          "href": "https://github.com/gansidui/skiplist",
          "title": "skiplist",
          "description": "Skiplist implementation in Go."
        },
        {
          "href": "https://github.com/zekroTJA/timedmap",
          "title": "timedmap",
          "description": "Map with expiring key-value pairs."
        },
        {
          "href": "https://github.com/perdata/treap",
          "title": "treap",
          "description": "Persistent, fast ordered map using tree heaps."
        },
        {
          "href": "https://github.com/derekparker/trie",
          "title": "trie",
          "description": "Trie implementation in Go."
        },
        {
          "href": "https://github.com/diegobernardes/ttlcache",
          "title": "ttlcache",
          "description": "In-memory LRU string-interface{} map with expiration for golang."
        },
        {
          "href": "https://github.com/gurukami/typ",
          "title": "typ",
          "description": "Null Types, Safe primitive type conversion and fetching value from complex structures."
        },
        {
          "href": "https://github.com/willf/bloom",
          "title": "willf/bloom",
          "description": "Go package implementing Bloom filters."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Database",
      "subtitle": "Databases implemented in Go.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/dgraph-io/badger",
          "title": "badger",
          "description": "Fast key-value store in Go."
        },
        {
          "href": "https://github.com/etcd-io/bbolt",
          "title": "bbolt",
          "description": "An embedded key/value database for Go."
        },
        {
          "href": "https://github.com/iwanbk/bcache",
          "title": "bcache",
          "description": "Eventually consistent distributed in-memory  cache Go library."
        },
        {
          "href": "https://github.com/allegro/bigcache",
          "title": "BigCache",
          "description": "Efficient key/value cache for gigabytes of data."
        },
        {
          "href": "https://github.com/prologic/bitcask",
          "title": "Bitcask",
          "description": "Bitcask is an embeddable, persistent and fast key-value (KV) database written in pure Go with predictable read/write performance, low latency and high throughput thanks to the bitcask on-disk layout (LSM+WAL)."
        },
        {
          "href": "https://github.com/tidwall/buntdb",
          "title": "buntdb",
          "description": "Fast, embeddable, in-memory key/value database for Go with custom indexing and spatial support."
        },
        {
          "href": "https://github.com/akyoto/cache",
          "title": "cache",
          "description": "In-memory key:value store with expiration time, 0 dependencies, <100 LoC, 100% coverage."
        },
        {
          "href": "https://github.com/muesli/cache2go",
          "title": "cache2go",
          "description": "In-memory key:value cache which supports automatic invalidation based on timeouts."
        },
        {
          "href": "https://github.com/oaStuff/clusteredBigCache",
          "title": "clusteredBigCache",
          "description": "BigCache with clustering support and individual item expiration."
        },
        {
          "href": "https://github.com/cockroachdb/cockroach",
          "title": "cockroach",
          "description": "Scalable, Geo-Replicated, Transactional Datastore."
        },
        {
          "href": "https://github.com/claygod/coffer",
          "title": "Coffer",
          "description": "Simple ACID key-value database that supports transactions."
        },
        {
          "href": "https://github.com/codingsince1985/couchcache",
          "title": "couchcache",
          "description": "RESTful caching micro-service backed by Couchbase server."
        },
        {
          "href": "https://github.com/CovenantSQL/CovenantSQL",
          "title": "CovenantSQL",
          "description": "CovenantSQL is a SQL database on blockchain."
        },
        {
          "href": "https://github.com/paranoidguy/databunker",
          "title": "Databunker",
          "description": "Personally identifiable information (PII) storage service built to comply with GDPR and CCPA."
        },
        {
          "href": "https://github.com/dgraph-io/dgraph",
          "title": "dgraph",
          "description": "Scalable, Distributed, Low Latency, High Throughput Graph Database."
        },
        {
          "href": "https://github.com/peterbourgon/diskv",
          "title": "diskv",
          "description": "Home-grown disk-backed key-value store."
        },
        {
          "href": "https://github.com/krotik/eliasdb",
          "title": "eliasdb",
          "description": "Dependency-free, transactional graph database with REST API, phrase search and SQL-like query language."
        },
        {
          "href": "https://github.com/VictoriaMetrics/fastcache",
          "title": "fastcache",
          "description": "fast thread-safe inmemory cache for big number of entries. Minimizes GC overhead."
        },
        {
          "href": "https://github.com/bluele/gcache",
          "title": "GCache",
          "description": "Cache library with support for expirable Cache, LFU, LRU and ARC."
        },
        {
          "href": "https://github.com/pmylund/go-cache",
          "title": "go-cache",
          "description": "In-memory key:value store/cache (similar to Memcached) library for Go, suitable for single-machine applications."
        },
        {
          "href": "https://github.com/syndtr/goleveldb",
          "title": "goleveldb",
          "description": "Implementation of the LevelDB key/value database in Go."
        },
        {
          "href": "https://github.com/kapitan-k/gorocksdb",
          "title": "gorocksdb",
          "description": "Gorocksdb is a wrapper for RocksDB written in Go."
        },
        {
          "href": "https://github.com/twharmon/gostore",
          "title": "gostore",
          "description": "Gostore is a simple, durable, embedded key-value storage engine written in Go."
        },
        {
          "href": "https://github.com/golang/groupcache",
          "title": "groupcache",
          "description": "Groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases."
        },
        {
          "href": "https://github.com/influxdb/influxdb",
          "title": "influxdb",
          "description": "Scalable datastore for metrics, events, and real-time analytics."
        },
        {
          "href": "https://github.com/go-kivik/kivik",
          "title": "Kivik",
          "description": "Kivik provides a common Go and GopherJS client library for CouchDB, PouchDB, and similar databases."
        },
        {
          "href": "https://github.com/siddontang/ledisdb",
          "title": "ledisdb",
          "description": "Ledisdb is a high performance NoSQL like Redis based on LevelDB."
        },
        {
          "href": "https://github.com/jmhodges/levigo",
          "title": "levigo",
          "description": "Levigo is a Go wrapper for LevelDB."
        },
        {
          "href": "https://github.com/couchbase/moss",
          "title": "moss",
          "description": "Moss is a simple LSM key-value storage engine written in 100% Go."
        },
        {
          "href": "https://github.com/xujiajun/nutsdb",
          "title": "nutsdb",
          "description": "Nutsdb is a simple, fast, embeddable, persistent key/value store written in pure Go. It supports fully serializable transactions and many data structures such as  list, set, sorted set."
        },
        {
          "href": "https://github.com/fern4lvarez/piladb",
          "title": "piladb",
          "description": "Lightweight RESTful database engine based on stack data structures."
        },
        {
          "href": "https://github.com/prometheus/prometheus",
          "title": "prometheus",
          "description": "Monitoring system and time series database."
        },
        {
          "href": "https://github.com/recoilme/pudge",
          "title": "pudge",
          "description": "Fast and simple  key/value store written using Go's standard library."
        },
        {
          "href": "https://github.com/rqlite/rqlite",
          "title": "rqlite",
          "description": "The lightweight, distributed, relational database built on SQLite."
        },
        {
          "href": "https://github.com/nanobox-io/golang-scribble",
          "title": "Scribble",
          "description": "Tiny flat file JSON store."
        },
        {
          "href": "https://github.com/recoilme/slowpoke",
          "title": "slowpoke",
          "description": "Key-value store with persistence."
        },
        {
          "href": "https://github.com/rafaeljesus/tempdb",
          "title": "tempdb",
          "description": "Key-value store for temporary items."
        },
        {
          "href": "https://github.com/pingcap/tidb",
          "title": "tidb",
          "description": "TiDB is a distributed SQL database. Inspired by the design of Google F1."
        },
        {
          "href": "https://github.com/HouzuoGuo/tiedot",
          "title": "tiedot",
          "description": "Your NoSQL database powered by Golang."
        },
        {
          "href": "https://github.com/unit-io/tracedb",
          "title": "tracedb",
          "description": "Fast timeseries database for IoT, realtime messaging  applications. Access tracedb with pubsub over tcp or websocket using github.com/unit-io/trace application."
        },
        {
          "href": "https://github.com/chrislusf/vasto",
          "title": "Vasto",
          "description": "A distributed high-performance key-value store. On Disk. Eventual consistent. HA. Able to grow or shrink without service interruption."
        },
        {
          "href": "https://github.com/VictoriaMetrics/VictoriaMetrics",
          "title": "VictoriaMetrics",
          "description": "fast, resource-effective and scalable open source time series database. May be used as long-term remote storage for Prometheus. Supports PromQL."
        },
        {
          "href": "https://github.com/khezen/avro",
          "title": "avro",
          "description": "Discover SQL schemas and convert them to AVRO schemas. Query SQL records into AVRO bytes."
        },
        {
          "href": "https://github.com/GuiaBolso/darwin",
          "title": "darwin",
          "description": "Database schema evolution library for Go."
        },
        {
          "href": "https://github.com/RichardKnop/go-fixtures",
          "title": "go-fixtures",
          "description": "Django style fixtures for Golang's excellent built-in database/sql library."
        },
        {
          "href": "https://github.com/robinjoseph08/go-pg-migrations",
          "title": "go-pg-migrations",
          "description": "A Go package to help write migrations with go-pg/pg."
        },
        {
          "href": "https://github.com/emvi/gondolier",
          "title": "gondolier",
          "description": "Database migration library using struct decorators."
        },
        {
          "href": "https://github.com/steinbacher/goose",
          "title": "goose",
          "description": "Database migration tool. You can manage your database's evolution by creating incremental SQL or Go scripts."
        },
        {
          "href": "https://github.com/go-gormigrate/gormigrate",
          "title": "gormigrate",
          "description": "Database schema migration helper for Gorm ORM."
        },
        {
          "href": "https://github.com/golang-migrate/migrate",
          "title": "migrate",
          "description": "Database migrations. CLI and Golang library."
        },
        {
          "href": "https://github.com/lopezator/migrator",
          "title": "migrator",
          "description": "Dead simple Go database migration library."
        },
        {
          "href": "https://github.com/pravasan/pravasan",
          "title": "pravasan",
          "description": "Simple Migration tool - currently for MySQL but planning to soon support Postgres, SQLite, MongoDB, etc."
        },
        {
          "href": "https://github.com/adlio/schema",
          "title": "schema",
          "description": "Library to embed schema migrations for database/sql-compatible databases inside your Go binaries."
        },
        {
          "href": "https://github.com/skeema/skeema",
          "title": "skeema",
          "description": "Pure-SQL schema management system for MySQL, with support for sharding and external online schema change tools."
        },
        {
          "href": "https://github.com/gobuffalo/pop/tree/master/soda",
          "title": "soda",
          "description": "Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite."
        },
        {
          "href": "https://github.com/rubenv/sql-migrate",
          "title": "sql-migrate",
          "description": "Database migration tool. Allows embedding migrations into the application using go-bindata."
        },
        {
          "href": "https://github.com/PumpkinSeed/bucket",
          "title": "bucket",
          "description": "Optimized data structure framework for Couchbase specialized on one bucket usage."
        },
        {
          "href": "https://github.com/Vertamedia/chproxy",
          "title": "chproxy",
          "description": "HTTP proxy for ClickHouse database."
        },
        {
          "href": "https://github.com/nikepan/clickhouse-bulk",
          "title": "clickhouse-bulk",
          "description": "Collects small insterts and sends big requests to ClickHouse servers."
        },
        {
          "href": "https://github.com/codingconcepts/datagen",
          "title": "datagen",
          "description": "A fast data generator that's multi-table aware and supports multi-row DML."
        },
        {
          "href": "https://github.com/sj14/dbbench",
          "title": "dbbench",
          "description": "Database benchmarking tool with support for several databases and scripts."
        },
        {
          "href": "https://github.com/siddontang/go-mysql",
          "title": "go-mysql",
          "description": "Go toolset to handle MySQL protocol and replication."
        },
        {
          "href": "https://github.com/siddontang/go-mysql-elasticsearch",
          "title": "go-mysql-elasticsearch",
          "description": "Sync your MySQL data into Elasticsearch automatically."
        },
        {
          "href": "https://github.com/flike/kingshard",
          "title": "kingshard",
          "description": "kingshard is a high performance proxy for MySQL powered by Golang."
        },
        {
          "href": "https://github.com/2tvenom/myreplication",
          "title": "myreplication",
          "description": "MySql binary log replication listener. Supports statement and row based replication."
        },
        {
          "href": "https://github.com/knocknote/octillery",
          "title": "octillery",
          "description": "Go package for sharding databases ( Supports every ORM or raw SQL )."
        },
        {
          "href": "https://github.com/github/orchestrator",
          "title": "orchestrator",
          "description": "MySQL replication topology manager & visualizer."
        },
        {
          "href": "https://github.com/sosedoff/pgweb",
          "title": "pgweb",
          "description": "Web-based PostgreSQL database browser."
        },
        {
          "href": "https://github.com/hexdigest/prep",
          "title": "prep",
          "description": "Use prepared SQL statements without changing your code."
        },
        {
          "href": "https://github.com/nuveo/prest",
          "title": "pREST",
          "description": "Serve a RESTful API from any PostgreSQL database."
        },
        {
          "href": "https://github.com/andizzle/rwdb",
          "title": "rwdb",
          "description": "rwdb provides read replica capability for multiple database servers setup."
        },
        {
          "href": "https://github.com/youtube/vitess",
          "title": "vitess",
          "description": "vitess provides servers and tools which facilitate scaling of MySQL databases for large scale web services."
        },
        {
          "href": "https://github.com/rocketlaunchr/dbq",
          "title": "dbq",
          "description": "Zero boilerplate database operations for Go."
        },
        {
          "href": "https://github.com/gchaincl/dotsql",
          "title": "Dotsql",
          "description": "Go library that helps you keep sql files in one place and use them with ease."
        },
        {
          "href": "https://github.com/didi/gendry",
          "title": "gendry",
          "description": "Non-invasive SQL builder and powerful data binder."
        },
        {
          "href": "https://github.com/xujiajun/godbal",
          "title": "godbal",
          "description": "Database Abstraction Layer (dbal) for go. Support SQL builder and get result easily."
        },
        {
          "href": "https://github.com/doug-martin/goqu",
          "title": "goqu",
          "description": "Idiomatic SQL builder and query library."
        },
        {
          "href": "https://github.com/galeone/igor",
          "title": "igor",
          "description": "Abstraction layer for PostgreSQL that supports advanced functionality and uses gorm-like syntax."
        },
        {
          "href": "https://github.com/go-jet/jet",
          "title": "jet",
          "description": "Framework for writing type-safe SQL queries in Go, with ability to easily convert database query result into desired arbitrary object structure."
        },
        {
          "href": "https://github.com/spacetab-io/mpath-go",
          "title": "mpath",
          "description": "MPTT (Modified Preorder Tree Traversal) package for SQL records - materialized path realisation."
        },
        {
          "href": "https://github.com/pupizoid/ormlite",
          "title": "ormlite",
          "description": "Lightweight package containing some ORM-like features and helpers for sqlite databases."
        },
        {
          "href": "https://github.com/go-ozzo/ozzo-dbx",
          "title": "ozzo-dbx",
          "description": "Powerful data retrieval methods as well as DB-agnostic query building capabilities."
        },
        {
          "href": "https://github.com/HnH/qry",
          "title": "qry",
          "description": "Tool that generates constants from files with raw SQL queries."
        },
        {
          "href": "https://github.com/leporo/sqlf",
          "title": "sqlf",
          "description": "Fast SQL query builder."
        },
        {
          "href": "https://github.com/elgris/sqrl",
          "title": "sqrl",
          "description": "SQL query builder, fork of Squirrel with improved performance."
        },
        {
          "href": "https://gitlab.com/qosenergy/squalus",
          "title": "Squalus",
          "description": "Thin layer over the Go SQL package that makes it easier to perform queries."
        },
        {
          "href": "https://github.com/Masterminds/squirrel",
          "title": "Squirrel",
          "description": "Go library that helps you build SQL queries."
        },
        {
          "href": "https://github.com/knq/xo",
          "title": "xo",
          "description": "Generate idiomatic Go code for databases based on existing schema definitions or custom queries supporting PostgreSQL, MySQL, SQLite, Oracle, and Microsoft SQL Server."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Database Drivers",
      "subtitle": "Libraries for connecting and operating databases.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/apache/calcite-avatica-go",
          "title": "avatica",
          "description": "Apache Avatica/Phoenix SQL driver for database/sql."
        },
        {
          "href": "https://github.com/viant/bgc",
          "title": "bgc",
          "description": "Datastore Connectivity for BigQuery for go."
        },
        {
          "href": "https://github.com/nakagami/firebirdsql",
          "title": "firebirdsql",
          "description": "Firebird RDBMS SQL driver for Go."
        },
        {
          "href": "https://github.com/mattn/go-adodb",
          "title": "go-adodb",
          "description": "Microsoft ActiveX Object DataBase driver for go that uses database/sql."
        },
        {
          "href": "https://github.com/denisenkom/go-mssqldb",
          "title": "go-mssqldb",
          "description": "Microsoft MSSQL driver for Go."
        },
        {
          "href": "https://github.com/mattn/go-oci8",
          "title": "go-oci8",
          "description": "Oracle driver for go that uses database/sql."
        },
        {
          "href": "https://github.com/go-sql-driver/mysql",
          "title": "go-sql-driver/mysql",
          "description": "MySQL driver for Go."
        },
        {
          "href": "https://github.com/mattn/go-sqlite3",
          "title": "go-sqlite3",
          "description": "SQLite3 driver for go that uses database/sql."
        },
        {
          "href": "https://github.com/minus5/gofreetds",
          "title": "gofreetds",
          "description": "Microsoft MSSQL driver. Go wrapper over FreeTDS ."
        },
        {
          "href": "https://github.com/go-goracle/goracle",
          "title": "goracle",
          "description": "Oracle driver for Go, using the ODPI-C driver."
        },
        {
          "href": "https://github.com/jackc/pgx",
          "title": "pgx",
          "description": "PostgreSQL driver supporting features beyond those exposed by database/sql."
        },
        {
          "href": "https://github.com/lib/pq",
          "title": "pq",
          "description": "Pure Go Postgres driver for database/sql."
        },
        {
          "href": "https://github.com/aerospike/aerospike-client-go",
          "title": "aerospike-client-go",
          "description": "Aerospike client in Go language."
        },
        {
          "href": "https://github.com/solher/arangolite",
          "title": "arangolite",
          "description": "Lightweight golang driver for ArangoDB."
        },
        {
          "href": "https://github.com/viant/asc",
          "title": "asc",
          "description": "Datastore Connectivity for Aerospike for go."
        },
        {
          "href": "https://github.com/underarmour/dynago",
          "title": "dynago",
          "description": "Dynago is a principle of least surprise client for DynamoDB."
        },
        {
          "href": "https://github.com/couchbase/goforestdb",
          "title": "forestdb",
          "description": "Go bindings for ForestDB."
        },
        {
          "href": "https://github.com/couchbase/go-couchbase",
          "title": "go-couchbase",
          "description": "Couchbase client in Go."
        },
        {
          "href": "https://github.com/pilosa/go-pilosa",
          "title": "go-pilosa",
          "description": "Go client library for Pilosa."
        },
        {
          "href": "https://github.com/nitishm/go-rejson",
          "title": "go-rejson",
          "description": "Golang client for redislabs' ReJSON module using Redigo golang client. Store and manipulate structs as JSON objects in redis with ease."
        },
        {
          "href": "https://github.com/couchbase/gocb",
          "title": "gocb",
          "description": "Official Couchbase Go SDK."
        },
        {
          "href": "http://gocql.github.io",
          "title": "gocql",
          "description": "Go language driver for Apache Cassandra."
        },
        {
          "href": "https://github.com/piaohao/godis",
          "title": "godis",
          "description": "redis client implement by golang, inspired by jedis."
        },
        {
          "href": "https://github.com/defcronyke/godscache",
          "title": "godscache",
          "description": "A wrapper for the Google Cloud Platform Go Datastore package that adds caching using memcached."
        },
        {
          "href": "https://github.com/bradfitz/gomemcache/",
          "title": "gomemcache",
          "description": "memcache client library for the Go programming language."
        },
        {
          "href": "https://github.com/dancannon/gorethink",
          "title": "gorethink",
          "description": "Go language driver for RethinkDB."
        },
        {
          "href": "https://github.com/zegl/goriak",
          "title": "goriak",
          "description": "Go language driver for Riak KV."
        },
        {
          "href": "https://github.com/kamva/mgm",
          "title": "mgm",
          "description": "MongoDB model-based ODM for Go (based on official MongoDB driver)."
        },
        {
          "href": "https://github.com/globalsign/mgo",
          "title": "mgo",
          "description": "(unmaintained) MongoDB driver for the Go language that implements a rich and well tested selection of features under a very simple API following standard Go idioms."
        },
        {
          "href": "https://github.com/mongodb/mongo-go-driver",
          "title": "mongo-go-driver",
          "description": "Official MongoDB driver for the Go language."
        },
        {
          "href": "https://github.com/cihangir/neo4j",
          "title": "neo4j",
          "description": "Neo4j Rest API Bindings for Golang."
        },
        {
          "href": "https://github.com/davemeehan/Neo4j-GO",
          "title": "Neo4j-GO",
          "description": "Neo4j REST Client in golang."
        },
        {
          "href": "https://github.com/jmcvetta/neoism",
          "title": "neoism",
          "description": "Neo4j client for Golang."
        },
        {
          "href": "https://github.com/bsm/redeo",
          "title": "redeo",
          "description": "Redis-protocol compatible TCP servers/services."
        },
        {
          "href": "https://github.com/gomodule/redigo",
          "title": "redigo",
          "description": "Redigo is a Go client for the Redis database."
        },
        {
          "href": "https://github.com/go-redis/redis",
          "title": "redis",
          "description": "Redis client for Golang."
        },
        {
          "href": "https://github.com/shomali11/xredis",
          "title": "xredis",
          "description": "Typesafe, customizable, clean & easy to use Redis client."
        },
        {
          "href": "https://github.com/blevesearch/bleve",
          "title": "bleve",
          "description": "Modern text indexing library for go."
        },
        {
          "href": "https://github.com/olivere/elastic",
          "title": "elastic",
          "description": "Elasticsearch client for Go."
        },
        {
          "href": "https://github.com/cch123/elasticsql",
          "title": "elasticsql",
          "description": "Convert sql to elasticsearch dsl in Go."
        },
        {
          "href": "https://github.com/mattbaird/elastigo",
          "title": "elastigo",
          "description": "Elasticsearch client library."
        },
        {
          "href": "https://github.com/elastic/go-elasticsearch",
          "title": "go-elasticsearch",
          "description": "Official Elasticsearch client for Go."
        },
        {
          "href": "https://github.com/OwnLocal/goes",
          "title": "goes",
          "description": "Library to interact with Elasticsearch."
        },
        {
          "href": "https://github.com/go-ego/riot",
          "title": "riot",
          "description": "Go Open Source, Distributed, Simple and efficient Search Engine."
        },
        {
          "href": "https://github.com/seiflotfy/skizze",
          "title": "skizze",
          "description": "probabilistic data-structures service and storage."
        },
        {
          "href": "https://github.com/fabiorphp/cachego",
          "title": "cachego",
          "description": "Golang Cache component for multiple drivers."
        },
        {
          "href": "https://github.com/google/cayley",
          "title": "cayley",
          "description": "Graph database with support for multiple backends."
        },
        {
          "href": "https://github.com/viant/dsc",
          "title": "dsc",
          "description": "Datastore connectivity for SQL, NoSQL, structured files."
        },
        {
          "href": "https://github.com/philippgille/gokv",
          "title": "gokv",
          "description": "Simple key-value store abstraction and implementations for Go (Redis, Consul, etcd, bbolt, BadgerDB, LevelDB, Memcached, DynamoDB, S3, PostgreSQL, MongoDB, CockroachDB and many more)."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Date and Time",
      "subtitle": "Libraries for working with dates and times.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/uniplaces/carbon",
          "title": "carbon",
          "description": "Simple Time extension with a lot of util methods, ported from PHP Carbon library."
        },
        {
          "href": "https://github.com/1set/cronrange",
          "title": "cronrange",
          "description": "Parses Cron-style time range expressions, checks if the given time is within any ranges."
        },
        {
          "href": "https://github.com/rickb777/date",
          "title": "date",
          "description": "Augments Time for working with dates, date ranges, time spans, periods, and time-of-day."
        },
        {
          "href": "https://github.com/araddon/dateparse",
          "title": "dateparse",
          "description": "Parse date's without knowing format in advance."
        },
        {
          "href": "https://github.com/hako/durafmt",
          "title": "durafmt",
          "description": "Time duration formatting library for Go."
        },
        {
          "href": "https://github.com/wlbr/feiertage",
          "title": "feiertage",
          "description": "Set of functions to calculate public holidays in Germany, incl. specialization on the states of Germany (Bundesländer). Things like Easter, Pentecost, Thanksgiving..."
        },
        {
          "href": "https://github.com/yaa110/go-persian-calendar",
          "title": "go-persian-calendar",
          "description": "The implementation of the Persian (Solar Hijri) Calendar in Go (golang)."
        },
        {
          "href": "https://github.com/xhit/go-str2duration",
          "title": "go-str2duration",
          "description": "Convert string to duration. Support time.Duration returned string and more."
        },
        {
          "href": "https://github.com/nathan-osman/go-sunrise",
          "title": "go-sunrise",
          "description": "Calculate the sunrise and sunset times for a given location."
        },
        {
          "href": "https://github.com/stoewer/go-week",
          "title": "go-week",
          "description": "An efficient package to work with ISO8601 week dates."
        },
        {
          "href": "https://github.com/relvacode/iso8601",
          "title": "iso8601",
          "description": "Efficiently parse ISO8601 date-times without regex."
        },
        {
          "href": "https://github.com/GuilhermeCaruso/kair",
          "title": "kair",
          "description": "Date and Time - Golang Formatting Library."
        },
        {
          "href": "https://github.com/jinzhu/now",
          "title": "now",
          "description": "Now is a time toolkit for golang."
        },
        {
          "href": "https://github.com/kirillDanshin/nulltime",
          "title": "NullTime",
          "description": "Nullable time.Time ."
        },
        {
          "href": "https://github.com/awoodbeck/strftime",
          "title": "strftime",
          "description": "C99-compatible strftime formatter."
        },
        {
          "href": "https://github.com/SaidinWoT/timespan",
          "title": "timespan",
          "description": "For interacting with intervals of time, defined as a start time and a duration."
        },
        {
          "href": "https://github.com/leekchan/timeutil",
          "title": "timeutil",
          "description": "Useful extensions (Timedelta, Strftime, ...) to the golang's time package."
        },
        {
          "href": "https://github.com/osteele/tuesday",
          "title": "tuesday",
          "description": "Ruby-compatible Strftime function."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Distributed Systems",
      "subtitle": "Packages that help with building Distributed Systems.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/svcavallar/celeriac.v1",
          "title": "celeriac",
          "description": "Library for adding support for interacting and monitoring Celery workers, tasks and events in Go."
        },
        {
          "href": "https://github.com/buraksezer/consistent",
          "title": "consistent",
          "description": "Consistent hashing with bounded loads."
        },
        {
          "href": "https://github.com/anacrolix/dht",
          "title": "dht",
          "description": "BitTorrent Kademlia DHT implementation."
        },
        {
          "href": "https://github.com/digota/digota",
          "title": "digota",
          "description": "grpc ecommerce microservice."
        },
        {
          "href": "https://github.com/dotchain/dot/",
          "title": "dot",
          "description": "distributed sync using operational transformation/OT."
        },
        {
          "href": "https://github.com/edwingeng/doublejump",
          "title": "doublejump",
          "description": "A revamped Google's jump consistent hash."
        },
        {
          "href": "https://github.com/lni/dragonboat",
          "title": "dragonboat",
          "description": "A feature complete and high performance multi-group Raft library in Go."
        },
        {
          "href": "https://github.com/dgruber/drmaa",
          "title": "drmaa",
          "description": "Job submission library for cluster schedulers based on the DRMAA standard."
        },
        {
          "href": "https://cirello.io/dynamolock",
          "title": "dynamolock",
          "description": "DynamoDB-backed distributed locking implementation."
        },
        {
          "href": "https://github.com/tylfin/dynatomic",
          "title": "dynatomic",
          "description": "A library for using DynamoDB as an atomic counter."
        },
        {
          "href": "https://github.com/emitter-io/emitter",
          "title": "emitter-io",
          "description": "High performance, distributed, secure and low latency publish-subscribe platform built with MQTT, Websockets and love."
        },
        {
          "href": "https://github.com/vectaport/flowgraph",
          "title": "flowgraph",
          "description": "flow-based programming package."
        },
        {
          "href": "https://github.com/chrislusf/gleam",
          "title": "gleam",
          "description": "Fast and scalable distributed map/reduce system written in pure Go and Luajit, combining Go's high concurrency with Luajit's high performance, runs standalone or distributed."
        },
        {
          "href": "https://github.com/chrislusf/glow",
          "title": "glow",
          "description": "Easy-to-Use scalable distributed big data processing, Map-Reduce, DAG execution, all in pure Go."
        },
        {
          "href": "https://github.com/InVisionApp/go-health",
          "title": "go-health",
          "description": "Library for enabling asynchronous dependency health checks in your service."
        },
        {
          "href": "https://github.com/dgryski/go-jump",
          "title": "go-jump",
          "description": "Port of Google's \"Jump\" Consistent Hash function."
        },
        {
          "href": "https://github.com/go-kit/kit",
          "title": "go-kit",
          "description": "Microservice toolkit with support for service discovery, load balancing, pluggable transports, request tracking, etc."
        },
        {
          "href": "https://github.com/pdupub/go-pdu",
          "title": "go-pdu",
          "description": "A decentralized identity-based social network."
        },
        {
          "href": "https://github.com/AppsFlyer/go-sundheit",
          "title": "go-sundheit",
          "description": "A library built to provide support for defining async service health checks for golang services."
        },
        {
          "href": "https://github.com/valyala/gorpc",
          "title": "gorpc",
          "description": "Simple, fast and scalable RPC library for high load."
        },
        {
          "href": "https://github.com/grpc/grpc-go",
          "title": "grpc-go",
          "description": "The Go language implementation of gRPC. HTTP/2 based RPC."
        },
        {
          "href": "https://github.com/hprose/hprose-golang",
          "title": "hprose",
          "description": "Very newbility RPC Library, support 25+ languages now."
        },
        {
          "href": "https://github.com/osamingo/jsonrpc",
          "title": "jsonrpc",
          "description": "The jsonrpc package helps implement of JSON-RPC 2.0."
        },
        {
          "href": "https://github.com/ybbus/jsonrpc",
          "title": "jsonrpc",
          "description": "JSON-RPC 2.0 HTTP client implementation."
        },
        {
          "href": "https://github.com/devopsfaith/krakend",
          "title": "KrakenD",
          "description": "Ultra performant API Gateway framework with middlewares."
        },
        {
          "href": "https://github.com/liftbridge-io/liftbridge",
          "title": "liftbridge",
          "description": "Lightweight, fault-tolerant message streams for NATS."
        },
        {
          "href": "https://github.com/micro/micro",
          "title": "micro",
          "description": "Pluggable microservice toolkit and distributed systems platform."
        },
        {
          "href": "https://github.com/nats-io/gnatsd",
          "title": "NATS",
          "description": "Lightweight, high performance messaging system for microservices, IoT, and cloud native systems."
        },
        {
          "href": "https://github.com/italolelis/outboxer",
          "title": "outboxer",
          "description": "Outboxer is a go library that implements the outbox pattern."
        },
        {
          "href": "https://cirello.io/pglock",
          "title": "pglock",
          "description": "PostgreSQL-backed distributed locking implementation."
        },
        {
          "href": "https://github.com/hashicorp/raft",
          "title": "raft",
          "description": "Golang implementation of the Raft consensus protocol, by HashiCorp."
        },
        {
          "href": "https://github.com/coreos/etcd/tree/master/raft",
          "title": "raft",
          "description": "Go implementation of the Raft consensus protocol, by CoreOS."
        },
        {
          "href": "https://github.com/cenkalti/rain",
          "title": "rain",
          "description": "BitTorrent client and library."
        },
        {
          "href": "https://github.com/bsm/redislock",
          "title": "redis-lock",
          "description": "Simplified distributed locking implementation using Redis."
        },
        {
          "href": "https://resgate.io/",
          "title": "resgate",
          "description": "Realtime API Gateway for building REST, real time, and RPC APIs, where all clients are synchronized seamlessly."
        },
        {
          "href": "https://github.com/uber/ringpop-go",
          "title": "ringpop-go",
          "description": "Scalable, fault-tolerant application-layer sharding for Go applications."
        },
        {
          "href": "https://github.com/smallnest/rpcx",
          "title": "rpcx",
          "description": "Distributed pluggable RPC service framework like alibaba Dubbo."
        },
        {
          "href": "https://github.com/ursiform/sleuth",
          "title": "sleuth",
          "description": "Library for master-less p2p auto-discovery and RPC between HTTP services (using ZeroMQ )."
        },
        {
          "href": "https://github.com/tendermint/tendermint",
          "title": "tendermint",
          "description": "High-performance middleware for transforming a state machine written in any programming language into a Byzantine Fault Tolerant replicated state machine using the Tendermint consensus and blockchain protocols."
        },
        {
          "href": "https://github.com/anacrolix/torrent",
          "title": "torrent",
          "description": "BitTorrent client package."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Dynamic DNS",
      "subtitle": "Tools for updating dynamic DNS records.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/skibish/ddns",
          "title": "DDNS",
          "description": "Personal DDNS client with Digital Ocean Networking DNS as backend."
        },
        {
          "href": "https://gitlab.com/alcastle/dyndns",
          "title": "dyndns",
          "description": "Background Go process to regularly and automatically check your IP Address and make updates to (one or many) Dynamic DNS records for Google domains whenever your address changes."
        },
        {
          "href": "https://github.com/timothyye/godns",
          "title": "GoDNS",
          "description": "A dynamic DNS client tool, supports DNSPod & HE.net, written in Go."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Email",
      "subtitle": "Libraries and tools that implement email creation and sending.",
      "subsections": [],
      "links": [
        {
          "href": "https://blitiri.com.ar/p/chasquid",
          "title": "chasquid",
          "description": "SMTP server written in Go."
        },
        {
          "href": "https://github.com/aymerick/douceur",
          "title": "douceur",
          "description": "CSS inliner for your HTML emails."
        },
        {
          "href": "https://github.com/jordan-wright/email",
          "title": "email",
          "description": "A robust and flexible email library for Go."
        },
        {
          "href": "https://github.com/toorop/go-dkim",
          "title": "go-dkim",
          "description": "DKIM library, to sign & verify email."
        },
        {
          "href": "https://github.com/emersion/go-imap",
          "title": "go-imap",
          "description": "IMAP library for clients and servers."
        },
        {
          "href": "https://github.com/emersion/go-message",
          "title": "go-message",
          "description": "Streaming library for the Internet Message Format and mail messages."
        },
        {
          "href": "https://github.com/vanng822/go-premailer",
          "title": "go-premailer",
          "description": "Inline styling for HTML mail in Go."
        },
        {
          "href": "https://github.com/xhit/go-simple-mail",
          "title": "go-simple-mail",
          "description": "Very simple package to send emails with SMTP Keep Alive and two timeouts: Connect and Send."
        },
        {
          "href": "https://github.com/hectane/hectane",
          "title": "Hectane",
          "description": "Lightweight SMTP client providing an HTTP API."
        },
        {
          "href": "https://github.com/matcornic/hermes",
          "title": "hermes",
          "description": "Golang package that generates clean, responsive HTML e-mails."
        },
        {
          "href": "https://github.com/mailchain/mailchain",
          "title": "mailchain",
          "description": "Send encrypted emails to blockchain addresses written in Go."
        },
        {
          "href": "https://github.com/mailgun/mailgun-go",
          "title": "mailgun-go",
          "description": "Go library for sending mail with the Mailgun API."
        },
        {
          "href": "https://github.com/mailhog/MailHog",
          "title": "MailHog",
          "description": "Email and SMTP testing with web and API interface."
        },
        {
          "href": "https://github.com/sendgrid/sendgrid-go",
          "title": "SendGrid",
          "description": "SendGrid's Go library for sending email."
        },
        {
          "href": "https://github.com/mailhog/smtp",
          "title": "smtp",
          "description": "SMTP server protocol state machine."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Embeddable Scripting Languages",
      "subtitle": "Embedding other languages inside your go code.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/mattn/anko",
          "title": "anko",
          "description": "Scriptable interpreter written in Go."
        },
        {
          "href": "https://github.com/alexeyco/binder",
          "title": "binder",
          "description": "Go to Lua binding library, based on gopher-lua ."
        },
        {
          "href": "https://github.com/google/cel-go",
          "title": "cel-go",
          "description": "Fast, portable, non-Turing complete expression evaluation with gradual typing."
        },
        {
          "href": "https://github.com/antonmedv/expr",
          "title": "expr",
          "description": "Expression evaluation engine for Go: fast, non-Turing complete, dynamic typing, static typing."
        },
        {
          "href": "https://github.com/gentee/gentee",
          "title": "gentee",
          "description": "Embeddable scripting programming language."
        },
        {
          "href": "https://github.com/jcla1/gisp",
          "title": "gisp",
          "description": "Simple LISP in Go."
        },
        {
          "href": "https://github.com/olebedev/go-duktape",
          "title": "go-duktape",
          "description": "Duktape JavaScript engine bindings for Go."
        },
        {
          "href": "https://github.com/Shopify/go-lua",
          "title": "go-lua",
          "description": "Port of the Lua 5.2 VM to pure Go."
        },
        {
          "href": "https://github.com/deuill/go-php",
          "title": "go-php",
          "description": "PHP bindings for Go."
        },
        {
          "href": "https://github.com/sbinet/go-python",
          "title": "go-python",
          "description": "naive go bindings to the CPython C-API."
        },
        {
          "href": "https://github.com/aarzilli/golua",
          "title": "golua",
          "description": "Go bindings for Lua C API."
        },
        {
          "href": "https://github.com/yuin/gopher-lua",
          "title": "gopher-lua",
          "description": "Lua 5.1 VM and compiler written in Go."
        },
        {
          "href": "https://github.com/PaesslerAG/gval",
          "title": "gval",
          "description": "A highly customizable expression language written in Go."
        },
        {
          "href": "https://github.com/db47h/ngaro",
          "title": "ngaro",
          "description": "Embeddable Ngaro VM implementation enabling scripting in Retro."
        },
        {
          "href": "https://github.com/robertkrimen/otto",
          "title": "otto",
          "description": "JavaScript interpreter written in Go."
        },
        {
          "href": "https://github.com/ian-kent/purl",
          "title": "purl",
          "description": "Perl 5.18.2 embedded in Go."
        },
        {
          "href": "https://github.com/d5/tengo",
          "title": "tengo",
          "description": "Bytecode compiled script language for Go."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Error Handling",
      "subtitle": "Libraries for handling errors.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/emperror/emperror",
          "title": "emperror",
          "description": "Error handling tools and best practices for Go libraries and applications."
        },
        {
          "href": "https://github.com/rotisserie/eris",
          "title": "eris",
          "description": "A better way to handle, trace, and log errors in Go. Compatible with the standard error library and github.com/pkg/errors."
        },
        {
          "href": "https://github.com/snwfdhmp/errlog",
          "title": "errlog",
          "description": "Hackable package that determines responsible source code for an error (and some other fast-debugging features). Pluggable to any logger in-place."
        },
        {
          "href": "https://github.com/emperror/errors",
          "title": "errors",
          "description": "Drop-in replacement for the standard library errors package and github.com/pkg/errors. Provides various error handling primitives."
        },
        {
          "href": "https://github.com/pkg/errors",
          "title": "errors",
          "description": "Package that provides simple error handling primitives."
        },
        {
          "href": "https://github.com/neuronlabs/errors",
          "title": "errors",
          "description": "Simple golang error handling with classification primitives."
        },
        {
          "href": "https://github.com/PumpkinSeed/errors",
          "title": "errors",
          "description": "The most simple error wrapper with awesome performance and minimal memory overhead."
        },
        {
          "href": "https://github.com/joomcode/errorx",
          "title": "errorx",
          "description": "A feature rich error package with stack traces, composition of errors and more."
        },
        {
          "href": "https://github.com/SonicRoshan/falcon",
          "title": "Falcon",
          "description": "A Simple Yet Highly Powerful Package For Error Handling."
        },
        {
          "href": "https://github.com/hashicorp/go-multierror",
          "title": "go-multierror",
          "description": "Go (golang) package for representing a list of errors as a single error."
        },
        {
          "href": "https://github.com/ztrue/tracerr",
          "title": "tracerr",
          "description": "Golang errors with stack trace and source fragments."
        },
        {
          "href": "https://github.com/txgruppi/werr",
          "title": "werr",
          "description": "Error Wrapper creates an wrapper for the error type in Go which captures the File, Line and Stack of where it was called."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Files",
      "subtitle": "Libraries for handling files and file systems.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/spf13/afero",
          "title": "afero",
          "description": "FileSystem Abstraction System for Go."
        },
        {
          "href": "https://github.com/viant/afs",
          "title": "afs",
          "description": "Abstract File Storage (mem, scp, zip, tar, cloud: s3, gs) for Go."
        },
        {
          "href": "https://github.com/bigfile/bigfile",
          "title": "bigfile",
          "description": "A file transfer system, support to manage files with http api, rpc call and ftp client."
        },
        {
          "href": "https://github.com/codingsince1985/checksum",
          "title": "checksum",
          "description": "Compute message digest, like MD5 and SHA256, for large files."
        },
        {
          "href": "https://github.com/otiai10/copy",
          "title": "copy",
          "description": "Copy directory recursively."
        },
        {
          "href": "https://github.com/homedepot/flop",
          "title": "flop",
          "description": "File operations library which aims to mirror feature parity with GNU cp ."
        },
        {
          "href": "https://github.com/artonge/go-csv-tag",
          "title": "go-csv-tag",
          "description": "Load csv file using tag."
        },
        {
          "href": "https://github.com/hugocarreira/go-decent-copy",
          "title": "go-decent-copy",
          "description": "Copy files for humans."
        },
        {
          "href": "https://github.com/barasher/go-exiftool",
          "title": "go-exiftool",
          "description": "Go bindings for ExifTool, the well-known library used to extract as much metadata as possible (EXIF, IPTC, ...) from files (pictures, PDF, office, ...)."
        },
        {
          "href": "https://github.com/artonge/go-gtfs",
          "title": "go-gtfs",
          "description": "Load gtfs files in go."
        },
        {
          "href": "https://github.com/1set/gut",
          "title": "gut/yos",
          "description": "Simple and reliable package for file operations like copy/move/diff/list on files, directories and symbolic links."
        },
        {
          "href": "https://github.com/rjeczalik/notify",
          "title": "notify",
          "description": "File system event notification library with simple API, similar to os/signal."
        },
        {
          "href": "https://github.com/qmuntal/opc",
          "title": "opc",
          "description": "Load Open Packaging Conventions (OPC) files for Go."
        },
        {
          "href": "https://github.com/parsyl/parquet",
          "title": "parquet",
          "description": "Read and write parquet files."
        },
        {
          "href": "https://github.com/pdfcpu/pdfcpu",
          "title": "pdfcpu",
          "description": "PDF processor."
        },
        {
          "href": "https://github.com/dixonwille/skywalker",
          "title": "skywalker",
          "description": "Package to allow one to concurrently go through a filesystem with ease."
        },
        {
          "href": "https://gitlab.com/russoj88/stl",
          "title": "stl",
          "description": "Modules to read and write STL (stereolithography) files.  Concurrent algorithm for reading."
        },
        {
          "href": "https://github.com/posener/tarfs",
          "title": "tarfs",
          "description": "Implementation of the FileSystem interface for tar files."
        },
        {
          "href": "https://github.com/C2FO/vfs",
          "title": "vfs",
          "description": "A pluggable, extensible, and opinionated set of filesystem functionality for Go across a number of filesystem types such as os, S3, and GCS."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Financial",
      "subtitle": "Packages for accounting and finance.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/leekchan/accounting",
          "title": "accounting",
          "description": "money and currency formatting for golang."
        },
        {
          "href": "https://github.com/bnkamalesh/currency",
          "title": "currency",
          "description": "High performant & accurate currency computation package."
        },
        {
          "href": "https://github.com/shopspring/decimal",
          "title": "decimal",
          "description": "Arbitrary-precision fixed-point decimal numbers."
        },
        {
          "href": "https://github.com/FlashBoys/go-finance",
          "title": "go-finance",
          "description": "Comprehensive financial markets data in Go."
        },
        {
          "href": "https://github.com/alpeb/go-finance",
          "title": "go-finance",
          "description": "Library of financial functions for time value of money (annuities), cash flow, interest rate conversions, bonds and depreciation calculations."
        },
        {
          "href": "https://github.com/pieterclaerhout/go-finance",
          "title": "go-finance",
          "description": "Module to fetch exchange rates, check VAT numbers via VIES and check IBAN bank account numbers."
        },
        {
          "href": "https://github.com/m1/go-finnhub",
          "title": "go-finnhub",
          "description": "Client for stock market, forex and crypto data from finnhub.io. Access real-time financial market data from 60+ stock exchanges, 10 forex brokers, and 15+ crypto exchanges."
        },
        {
          "href": "https://github.com/rhymond/go-money",
          "title": "go-money",
          "description": "Implementation of Fowler's Money pattern."
        },
        {
          "href": "https://github.com/aclindsa/ofxgo",
          "title": "ofxgo",
          "description": "Query OFX servers and/or parse the responses (with example command-line client)."
        },
        {
          "href": "https://github.com/i25959341/orderbook",
          "title": "orderbook",
          "description": "Matching Engine for Limit Order Book in Golang."
        },
        {
          "href": "https://github.com/sdcoffey/techan",
          "title": "techan",
          "description": "Technical analysis library with advanced market analysis and trading strategies."
        },
        {
          "href": "https://github.com/claygod/transaction",
          "title": "transaction",
          "description": "Embedded transactional database of accounts, running in multithreaded mode."
        },
        {
          "href": "https://github.com/dannyvankooten/vat",
          "title": "vat",
          "description": "VAT number validation & EU VAT rates."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Forms",
      "subtitle": "Libraries for working with forms.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/robfig/bind",
          "title": "bind",
          "description": "Bind form data to any Go values."
        },
        {
          "href": "https://github.com/mholt/binding",
          "title": "binding",
          "description": "Binds form and JSON data from net/http Request to struct."
        },
        {
          "href": "https://github.com/leebenson/conform",
          "title": "conform",
          "description": "Keeps user input in check. Trims, sanitizes & scrubs data based on struct tags."
        },
        {
          "href": "https://github.com/go-playground/form",
          "title": "form",
          "description": "Decodes url.Values into Go value(s) and Encodes Go value(s) into url.Values. Dual Array and Full map support."
        },
        {
          "href": "https://github.com/monoculum/formam",
          "title": "formam",
          "description": "decode form's values into a struct."
        },
        {
          "href": "https://github.com/albrow/forms",
          "title": "forms",
          "description": "Framework-agnostic library for parsing and validating form/JSON data which supports multipart forms and files."
        },
        {
          "href": "https://github.com/gorilla/csrf",
          "title": "gorilla/csrf",
          "description": "CSRF protection for Go web applications & services."
        },
        {
          "href": "https://github.com/justinas/nosurf",
          "title": "nosurf",
          "description": "CSRF protection middleware for Go."
        },
        {
          "href": "https://github.com/tomwright/queryparam",
          "title": "queryparam",
          "description": "Decode url.Values into usable struct values of standard or custom types."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Functional",
      "subtitle": "Packages to support functional programming in Go.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/TeaEntityLab/fpGo",
          "title": "fpGo",
          "description": "Monad, Functional Programming features for Golang."
        },
        {
          "href": "https://github.com/seborama/fuego",
          "title": "fuego",
          "description": "Functional Experiment in Go."
        },
        {
          "href": "https://github.com/tobyhede/go-underscore",
          "title": "go-underscore",
          "description": "Useful collection of helpfully functional Go collection utilities."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Game Development",
      "subtitle": "Awesome game development libraries.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/azul3d/engine",
          "title": "Azul3D",
          "description": "3D game engine written in Go."
        },
        {
          "href": "https://github.com/hajimehoshi/ebiten",
          "title": "Ebiten",
          "description": "dead simple 2D game library in Go."
        },
        {
          "href": "https://github.com/EngoEngine/engo",
          "title": "engo",
          "description": "Engo is an open-source 2D game engine written in Go. It follows the Entity-Component-System paradigm."
        },
        {
          "href": "https://github.com/g3n/engine",
          "title": "g3n",
          "description": "Go 3D Game Engine."
        },
        {
          "href": "https://github.com/vova616/GarageEngine",
          "title": "GarageEngine",
          "description": "2d game engine written in Go working on OpenGL."
        },
        {
          "href": "https://github.com/runningwild/glop",
          "title": "glop",
          "description": "Glop (Game Library Of Power) is a fairly simple cross-platform game library."
        },
        {
          "href": "https://github.com/beefsack/go-astar",
          "title": "go-astar",
          "description": "Go implementation of the A* path finding algorithm."
        },
        {
          "href": "https://github.com/GlenKelley/go-collada",
          "title": "go-collada",
          "description": "Go package for working with the Collada file format."
        },
        {
          "href": "https://github.com/veandco/go-sdl2",
          "title": "go-sdl2",
          "description": "Go bindings for the Simple DirectMedia Layer ."
        },
        {
          "href": "https://github.com/ungerik/go3d",
          "title": "go3d",
          "description": "Performance oriented 2D/3D math package for Go."
        },
        {
          "href": "https://github.com/xtaci/gonet",
          "title": "gonet",
          "description": "Game server skeleton implemented with golang."
        },
        {
          "href": "https://github.com/xiaonanln/goworld",
          "title": "goworld",
          "description": "Scalable game server engine, featuring space-entity framework and hot-swapping."
        },
        {
          "href": "https://github.com/name5566/leaf",
          "title": "Leaf",
          "description": "Lightweight game server framework."
        },
        {
          "href": "https://github.com/lonng/nano",
          "title": "nano",
          "description": "Lightweight, facility, high performance golang based game server framework."
        },
        {
          "href": "https://github.com/oakmound/oak",
          "title": "Oak",
          "description": "Pure Go game engine."
        },
        {
          "href": "https://github.com/topfreegames/pitaya",
          "title": "Pitaya",
          "description": "Scalable game server framework with clustering support and client libraries for iOS, Android, Unity and others through the C SDK."
        },
        {
          "href": "https://github.com/faiface/pixel",
          "title": "Pixel",
          "description": "Hand-crafted 2D game library in Go."
        },
        {
          "href": "https://github.com/gen2brain/raylib-go",
          "title": "raylib-go",
          "description": "Go bindings for raylib , a simple and easy-to-use library to learn videogames programming."
        },
        {
          "href": "https://github.com/JoelOtter/termloop",
          "title": "termloop",
          "description": "Terminal-based game engine for Go, built on top of Termbox."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Generation and Generics",
      "subtitle": "Tools to enhance the language with features like generics via code generation.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/t0pep0/efaceconv",
          "title": "efaceconv",
          "description": "Code generation tool for high performance conversion from interface{} to immutable type without allocations."
        },
        {
          "href": "https://github.com/clipperhouse/gen",
          "title": "gen",
          "description": "Code generation tool for ‘generics’-like functionality."
        },
        {
          "href": "https://github.com/senselogic/GENERIS",
          "title": "generis",
          "description": "Code generation tool providing generics, free-form macros, conditional compilation and HTML templating."
        },
        {
          "href": "https://github.com/abice/go-enum",
          "title": "go-enum",
          "description": "Code generation for enums from code comments."
        },
        {
          "href": "https://github.com/ahmetalpbalkan/go-linq",
          "title": "go-linq",
          "description": ".NET LINQ-like query methods for Go."
        },
        {
          "href": "https://github.com/pieterclaerhout/go-xray",
          "title": "go-xray",
          "description": "Helpers for making the use of reflection easier."
        },
        {
          "href": "https://github.com/awalterschulze/goderive",
          "title": "goderive",
          "description": "Derives functions from input types."
        },
        {
          "href": "https://github.com/wzshiming/gotype",
          "title": "gotype",
          "description": "Golang source code parsing, usage like reflect package."
        },
        {
          "href": "https://github.com/hexdigest/gowrap",
          "title": "GoWrap",
          "description": "Generate decorators for Go interfaces using simple templates."
        },
        {
          "href": "https://github.com/rjeczalik/interfaces",
          "title": "interfaces",
          "description": "Command line tool for generating interface definitions."
        },
        {
          "href": "https://github.com/dave/jennifer",
          "title": "jennifer",
          "description": "Generate arbitrary Go code without templates."
        },
        {
          "href": "https://github.com/ungerik/pkgreflect",
          "title": "pkgreflect",
          "description": "Go preprocessor for package scoped reflection."
        },
        {
          "href": "https://github.com/xiaoxin01/typeregistry",
          "title": "typeregistry",
          "description": "A library to create type dynamically."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Geographic",
      "subtitle": "Geographic tools and servers",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/melihmucuk/geocache",
          "title": "geocache",
          "description": "In-memory cache that is suitable for geolocation based applications."
        },
        {
          "href": "https://github.com/hishamkaram/geoserver",
          "title": "geoserver",
          "description": "geoserver Is a Go Package For Manipulating a GeoServer Instance via the GeoServer REST API."
        },
        {
          "href": "https://github.com/hishamkaram/gismanager",
          "title": "gismanager",
          "description": "Publish Your GIS Data(Vector Data) to PostGIS and Geoserver."
        },
        {
          "href": "https://github.com/consbio/mbtileserver",
          "title": "mbtileserver",
          "description": "A simple Go-based server for map tiles stored in mbtiles format."
        },
        {
          "href": "https://github.com/paulmach/osm",
          "title": "osm",
          "description": "Library for reading, writing and working with OpenStreetMap data and APIs."
        },
        {
          "href": "https://github.com/maguro/pbf",
          "title": "pbf",
          "description": "OpenStreetMap PBF golang encoder/decoder."
        },
        {
          "href": "https://github.com/golang/geo",
          "title": "S2 geometry",
          "description": "S2 geometry library in Go."
        },
        {
          "href": "https://github.com/tidwall/tile38",
          "title": "Tile38",
          "description": "Geolocation DB with spatial index and realtime geofencing."
        },
        {
          "href": "https://github.com/wroge/wgs84",
          "title": "WGS84",
          "description": "Library for Coordinate Conversion and Transformation (ETRS89, OSGB36, NAD83, RGF93, Web Mercator, UTM)."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Go Compilers",
      "subtitle": "Tools for compiling Go to other languages.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/Konstantin8105/c4go",
          "title": "c4go",
          "description": "Transpile C code to Go code."
        },
        {
          "href": "https://github.com/Konstantin8105/f4go",
          "title": "f4go",
          "description": "Transpile FORTRAN 77 code to Go code."
        },
        {
          "href": "https://github.com/gopherjs/gopherjs",
          "title": "gopherjs",
          "description": "Compiler from Go to JavaScript."
        },
        {
          "href": "https://github.com/go-llvm/llgo",
          "title": "llgo",
          "description": "LLVM-based compiler for Go."
        },
        {
          "href": "https://github.com/tardisgo/tardisgo",
          "title": "tardisgo",
          "description": "Golang to Haxe to CPP/CSharp/Java/JavaScript transpiler."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Goroutines",
      "subtitle": "Tools for managing and working with Goroutines.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/panjf2000/ants",
          "title": "ants",
          "description": "A high-performance and low-cost goroutine pool in Go."
        },
        {
          "href": "https://github.com/borderstech/artifex",
          "title": "artifex",
          "description": "Simple in-memory job queue for Golang using worker-based dispatching."
        },
        {
          "href": "https://github.com/studiosol/async",
          "title": "async",
          "description": "A safe way to execute functions asynchronously, recovering them in case of panic."
        },
        {
          "href": "https://github.com/kamilsk/breaker",
          "title": "breaker",
          "description": "Flexible mechanism to make execution flow interruptible."
        },
        {
          "href": "https://github.com/ITcathyh/conexec",
          "title": "conexec",
          "description": "A concurrent toolkit to help execute funcs concurrently in an efficient and safe way.It supports specifying the overall timeout to avoid blocking and uses goroutine pool to improve efficiency."
        },
        {
          "href": "https://github.com/marusama/cyclicbarrier",
          "title": "cyclicbarrier",
          "description": "CyclicBarrier for golang."
        },
        {
          "href": "https://github.com/workanator/go-floc",
          "title": "go-floc",
          "description": "Orchestrate goroutines with ease."
        },
        {
          "href": "https://github.com/kamildrazkiewicz/go-flow",
          "title": "go-flow",
          "description": "Control goroutines execution order."
        },
        {
          "href": "https://github.com/nikhilsaraf/go-tools",
          "title": "go-tools/multithreading",
          "description": "Manage a pool of goroutines using this lightweight library with a simple API."
        },
        {
          "href": "https://github.com/subchen/go-trylock",
          "title": "go-trylock",
          "description": "TryLock support on read-write lock for Golang."
        },
        {
          "href": "https://github.com/pieterclaerhout/go-waitgroup",
          "title": "go-waitgroup",
          "description": "Like sync.WaitGroup with error handling and concurrency control."
        },
        {
          "href": "https://github.com/loveleshsharma/gohive",
          "title": "gohive",
          "description": "A highly performant and easy to use Goroutine pool for Go."
        },
        {
          "href": "https://github.com/vardius/gollback",
          "title": "gollback",
          "description": "asynchronous simple function utilities, for managing execution of closures and callbacks."
        },
        {
          "href": "https://github.com/themester/GoSlaves",
          "title": "GoSlaves",
          "description": "Simple and Asynchronous Goroutine pool library."
        },
        {
          "href": "https://github.com/benmanns/goworker",
          "title": "goworker",
          "description": "goworker is a Go-based background worker."
        },
        {
          "href": "https://github.com/xxjwxc/gowp",
          "title": "gowp",
          "description": "gowp is concurrency limiting goroutine pool."
        },
        {
          "href": "https://github.com/Sherifabdlnaby/gpool",
          "title": "gpool",
          "description": "manages a resizeable pool of context-aware goroutines to bound concurrency."
        },
        {
          "href": "https://github.com/ivpusic/grpool",
          "title": "grpool",
          "description": "Lightweight Goroutine pool."
        },
        {
          "href": "https://github.com/AaronJan/Hunch",
          "title": "Hunch",
          "description": "Hunch provides functions like: All , First , Retry , Waterfall etc., that makes asynchronous flow control more intuitive."
        },
        {
          "href": "https://github.com/dirkaholic/kyoo",
          "title": "kyoo",
          "description": "Provides an unlimited job queue and concurrent worker pools."
        },
        {
          "href": "https://cirello.io/oversight",
          "title": "oversight",
          "description": "Oversight is a complete implementation of the Erlang supervision trees."
        },
        {
          "href": "https://github.com/rafaeljesus/parallel-fn",
          "title": "parallel-fn",
          "description": "Run functions in parallel."
        },
        {
          "href": "https://github.com/go-playground/pool",
          "title": "pool",
          "description": "Limited consumer goroutine or unlimited goroutine pool for easier goroutine handling and cancellation."
        },
        {
          "href": "https://github.com/AnikHasibul/queue",
          "title": "queue",
          "description": "Gives you a sync.WaitGroup like queue group accessibility. Helps you to throttle and limit goroutines, wait for the end of the all goroutines and much more."
        },
        {
          "href": "https://github.com/x-mod/routine",
          "title": "routine",
          "description": "go routine control with context, support: Main, Go, Pool and some useful Executors."
        },
        {
          "href": "https://github.com/kamilsk/semaphore",
          "title": "semaphore",
          "description": "Semaphore pattern implementation with timeout of lock/unlock operations based on channel and context."
        },
        {
          "href": "https://github.com/marusama/semaphore",
          "title": "semaphore",
          "description": "Fast resizable semaphore implementation based on CAS (faster than channel-based semaphore implementations)."
        },
        {
          "href": "https://github.com/ssgreg/stl",
          "title": "stl",
          "description": "Software transactional locks based on Software Transactional Memory (STM) concurrency control mechanism."
        },
        {
          "href": "https://github.com/shettyh/threadpool",
          "title": "threadpool",
          "description": "Golang threadpool implementation."
        },
        {
          "href": "https://github.com/Jeffail/tunny",
          "title": "tunny",
          "description": "Goroutine pool for golang."
        },
        {
          "href": "https://github.com/vardius/worker-pool",
          "title": "worker-pool",
          "description": "goworker is a Go simple async worker pool."
        },
        {
          "href": "https://github.com/gammazero/workerpool",
          "title": "workerpool",
          "description": "Goroutine pool that limits the concurrency of task execution, not the number of tasks queued."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "GUI",
      "subtitle": "Libraries for building GUI Applications.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/murlokswarm/app",
          "title": "app",
          "description": "Package to create apps with GO, HTML and CSS. Supports: MacOS, Windows in progress."
        },
        {
          "href": "https://github.com/fyne-io/fyne",
          "title": "fyne",
          "description": "Cross platform native GUIs designed for Go based on Material Design. Supports: Linux, macOS, Windows, BSD, iOS and Android."
        },
        {
          "href": "https://github.com/asticode/go-astilectron",
          "title": "go-astilectron",
          "description": "Build cross platform GUI apps with GO and HTML/JS/CSS (powered by Electron)."
        },
        {
          "href": "http://mattn.github.io/go-gtk/",
          "title": "go-gtk",
          "description": "Go bindings for GTK."
        },
        {
          "href": "https://github.com/sciter-sdk/go-sciter",
          "title": "go-sciter",
          "description": "Go bindings for Sciter: the Embeddable HTML/CSS/script engine for modern desktop UI development. Cross platform."
        },
        {
          "href": "https://github.com/gotk3/gotk3",
          "title": "gotk3",
          "description": "Go bindings for GTK3."
        },
        {
          "href": "https://github.com/dtylman/gowd",
          "title": "gowd",
          "description": "Rapid and simple desktop UI development with GO, HTML, CSS and NW.js. Cross platform."
        },
        {
          "href": "https://github.com/therecipe/qt",
          "title": "qt",
          "description": "Qt binding for Go (support for Windows / macOS / Linux / Android / iOS / Sailfish OS / Raspberry Pi)."
        },
        {
          "href": "https://github.com/andlabs/ui",
          "title": "ui",
          "description": "Platform-native GUI library for Go. Cross platform."
        },
        {
          "href": "https://wails.app",
          "title": "Wails",
          "description": "Mac, Windows, Linux desktop apps with HTML UI using built-in OS HTML renderer."
        },
        {
          "href": "https://github.com/lxn/walk",
          "title": "walk",
          "description": "Windows application library kit for Go."
        },
        {
          "href": "https://github.com/zserge/webview",
          "title": "webview",
          "description": "Cross-platform webview window with simple two-way JavaScript bindings (Windows / macOS / Linux)."
        },
        {
          "href": "https://github.com/dawidd6/go-appindicator",
          "title": "go-appindicator",
          "description": "Go bindings for libappindicator3 C library."
        },
        {
          "href": "https://github.com/deckarep/gosx-notifier",
          "title": "gosx-notifier",
          "description": "OSX Desktop Notifications library for Go."
        },
        {
          "href": "https://github.com/prashantgupta24/activity-tracker",
          "title": "mac-activity-tracker",
          "description": "OSX library to notify about any (pluggable) activity on your machine."
        },
        {
          "href": "https://github.com/prashantgupta24/mac-sleep-notifier",
          "title": "mac-sleep-notifier",
          "description": "OSX Sleep/Wake notifications in golang."
        },
        {
          "href": "https://github.com/go-vgo/robotgo",
          "title": "robotgo",
          "description": "Go Native cross-platform GUI system automation. Control the mouse, keyboard and other."
        },
        {
          "href": "https://github.com/getlantern/systray",
          "title": "systray",
          "description": "Cross platform Go library to place an icon and menu in the notification area."
        },
        {
          "href": "https://github.com/shurcooL/trayhost",
          "title": "trayhost",
          "description": "Cross-platform Go library to place an icon in the host operating system's taskbar."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Hardware",
      "subtitle": "Libraries, tools, and tutorials for interacting with hardware.",
      "subsections": [],
      "links": []
    },
    {
      "group": "Awesome Go",
      "title": "Images",
      "subtitle": "Libraries for manipulating images.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/anthonynsimon/bild",
          "title": "bild",
          "description": "Collection of image processing algorithms in pure Go."
        },
        {
          "href": "https://github.com/h2non/bimg",
          "title": "bimg",
          "description": "Small package for fast and efficient image processing using libvips."
        },
        {
          "href": "https://github.com/aofei/cameron",
          "title": "cameron",
          "description": "An avatar generator for Go."
        },
        {
          "href": "https://github.com/tdewolff/canvas",
          "title": "canvas",
          "description": "Vector graphics to PDF, SVG or rasterized image."
        },
        {
          "href": "https://github.com/gojek/darkroom",
          "title": "darkroom",
          "description": "An image proxy with changeable storage backends and image processing engines with focus on speed and resiliency."
        },
        {
          "href": "https://github.com/pravj/geopattern",
          "title": "geopattern",
          "description": "Create beautiful generative image patterns from a string."
        },
        {
          "href": "https://github.com/fogleman/gg",
          "title": "gg",
          "description": "2D rendering in pure Go."
        },
        {
          "href": "https://github.com/disintegration/gift",
          "title": "gift",
          "description": "Package of image processing filters."
        },
        {
          "href": "https://github.com/qmuntal/gltf",
          "title": "gltf",
          "description": "Efficient and robust glTF 2.0 reader, writer and validator."
        },
        {
          "href": "https://github.com/ungerik/go-cairo",
          "title": "go-cairo",
          "description": "Go binding for the cairo graphics library."
        },
        {
          "href": "https://github.com/bolknote/go-gd",
          "title": "go-gd",
          "description": "Go binding for GD library."
        },
        {
          "href": "https://github.com/koyachi/go-nude",
          "title": "go-nude",
          "description": "Nudity detection with Go."
        },
        {
          "href": "https://github.com/lazywei/go-opencv",
          "title": "go-opencv",
          "description": "Go bindings for OpenCV."
        },
        {
          "href": "https://github.com/jyotiska/go-webcolors",
          "title": "go-webcolors",
          "description": "Port of webcolors library from Python to Go."
        },
        {
          "href": "https://github.com/hybridgroup/gocv",
          "title": "gocv",
          "description": "Go package for computer vision using OpenCV 3.3+."
        },
        {
          "href": "https://github.com/corona10/goimagehash",
          "title": "goimagehash",
          "description": "Go Perceptual image hashing package."
        },
        {
          "href": "https://github.com/corona10/goimghdr",
          "title": "goimghdr",
          "description": "The imghdr module determines the type of image contained in a file for Go."
        },
        {
          "href": "https://github.com/o1egl/govatar",
          "title": "govatar",
          "description": "Library and CMD tool for generating funny avatars."
        },
        {
          "href": "https://github.com/qeesung/image2ascii",
          "title": "image2ascii",
          "description": "Convert image to ASCII."
        },
        {
          "href": "https://github.com/gographics/imagick",
          "title": "imagick",
          "description": "Go binding to ImageMagick's MagickWand C API."
        },
        {
          "href": "https://github.com/h2non/imaginary",
          "title": "imaginary",
          "description": "Fast and simple HTTP microservice for image resizing."
        },
        {
          "href": "https://github.com/disintegration/imaging",
          "title": "imaging",
          "description": "Simple Go image processing package."
        },
        {
          "href": "https://github.com/hawx/img",
          "title": "img",
          "description": "Selection of image manipulation tools."
        },
        {
          "href": "https://github.com/fogleman/ln",
          "title": "ln",
          "description": "3D line art rendering in Go."
        },
        {
          "href": "https://github.com/noelyahan/mergi",
          "title": "mergi",
          "description": "Tool & Go library for image manipulation (Merge, Crop, Resize, Watermark, Animate)."
        },
        {
          "href": "https://github.com/aldor007/mort",
          "title": "mort",
          "description": "Storage and image processing server written in Go."
        },
        {
          "href": "https://github.com/donatj/mpo",
          "title": "mpo",
          "description": "Decoder and conversion tool for MPO 3D Photos."
        },
        {
          "href": "https://github.com/thoas/picfit",
          "title": "picfit",
          "description": "An image resizing server written in Go."
        },
        {
          "href": "https://github.com/fogleman/pt",
          "title": "pt",
          "description": "Path tracing engine written in Go."
        },
        {
          "href": "https://github.com/nfnt/resize",
          "title": "resize",
          "description": "Image resizing for Go with common interpolation methods."
        },
        {
          "href": "https://github.com/bamiaux/rez",
          "title": "rez",
          "description": "Image resizing in pure Go and SIMD."
        },
        {
          "href": "https://github.com/muesli/smartcrop",
          "title": "smartcrop",
          "description": "Finds good crops for arbitrary images and crop sizes."
        },
        {
          "href": "https://github.com/auyer/steganography",
          "title": "steganography",
          "description": "Pure Go Library for LSB steganography."
        },
        {
          "href": "https://github.com/DimitarPetrov/stegify",
          "title": "stegify",
          "description": "Go tool for LSB steganography, capable of hiding any file within an image."
        },
        {
          "href": "https://github.com/ajstarks/svgo",
          "title": "svgo",
          "description": "Go Language Library for SVG generation."
        },
        {
          "href": "https://github.com/ftrvxmtrx/tga",
          "title": "tga",
          "description": "Package tga is a TARGA image format decoder/encoder."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "IoT (Internet of Things)",
      "subtitle": "Libraries for programming devices of the IoT.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/connectordb/connectordb",
          "title": "connectordb",
          "description": "Open-Source Platform for Quantified Self & IoT."
        },
        {
          "href": "https://github.com/goiot/devices",
          "title": "devices",
          "description": "Suite of libraries for IoT devices, experimental for x/exp/io."
        },
        {
          "href": "https://github.com/xcodersun/eywa",
          "title": "eywa",
          "description": "Project Eywa is essentially a connection manager that keeps track of connected devices."
        },
        {
          "href": "https://github.com/tibcosoftware/flogo",
          "title": "flogo",
          "description": "Project Flogo is an Open Source Framework for IoT Edge Apps & Integration."
        },
        {
          "href": "https://github.com/paypal/gatt",
          "title": "gatt",
          "description": "Gatt is a Go package for building Bluetooth Low Energy peripherals."
        },
        {
          "href": "https://github.com/hybridgroup/gobot/",
          "title": "gobot",
          "description": "Gobot is a framework for robotics, physical computing, and the Internet of Things."
        },
        {
          "href": "https://github.com/amimof/huego",
          "title": "huego",
          "description": "An extensive Philips Hue client library for Go."
        },
        {
          "href": "https://github.com/vaelen/iot/",
          "title": "iot",
          "description": "IoT is a simple framework for implementing a Google IoT Core device."
        },
        {
          "href": "https://github.com/Mainflux/mainflux",
          "title": "mainflux",
          "description": "Industrial IoT Messaging and Device Management Server."
        },
        {
          "href": "https://periph.io/",
          "title": "periph",
          "description": "Peripherals I/O to interface with low-level board facilities."
        },
        {
          "href": "https://github.com/sensorbee/sensorbee",
          "title": "sensorbee",
          "description": "Lightweight stream processing engine for IoT."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Job Scheduler",
      "subtitle": "Libraries for scheduling jobs.",
      "subsections": [],
      "links": [
        {
          "href": "http://github.com/onatm/clockwerk",
          "title": "clockwerk",
          "description": "Go package to schedule periodic jobs using a simple, fluent syntax."
        },
        {
          "href": "https://github.com/whiteShtef/clockwork",
          "title": "clockwork",
          "description": "Simple and intuitive job scheduling library in Go."
        },
        {
          "href": "https://github.com/rk/go-cron",
          "title": "go-cron",
          "description": "Simple Cron library for go that can execute closures or functions at varying intervals, from once a second to once a year on a specific date and time. Primarily for web applications and long running daemons."
        },
        {
          "href": "https://github.com/roylee0704/gron",
          "title": "gron",
          "description": "Define time-based tasks using a simple Go API and Gron’s scheduler will run them accordingly."
        },
        {
          "href": "https://github.com/bamzi/jobrunner",
          "title": "JobRunner",
          "description": "Smart and featureful cron job scheduler with job queuing and live monitoring built in."
        },
        {
          "href": "https://github.com/albrow/jobs",
          "title": "jobs",
          "description": "Persistent and flexible background jobs library."
        },
        {
          "href": "https://github.com/kilgaloon/leprechaun",
          "title": "leprechaun",
          "description": "Job scheduler that supports webhooks, crons and classic scheduling."
        },
        {
          "href": "https://github.com/carlescere/scheduler",
          "title": "scheduler",
          "description": "Cronjobs scheduling made easy."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "JSON",
      "subtitle": "Libraries for working with JSON.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/spyzhov/ajson",
          "title": "ajson",
          "description": "Abstract JSON for golang with JSONPath support."
        },
        {
          "href": "https://github.com/lucassscaravelli/ej",
          "title": "ej",
          "description": "Write and read JSON from different sources succinctly."
        },
        {
          "href": "https://github.com/skanehira/gjo",
          "title": "gjo",
          "description": "Small utility to create JSON objects."
        },
        {
          "href": "https://github.com/tidwall/gjson",
          "title": "GJSON",
          "description": "Get a JSON value with one line of code."
        },
        {
          "href": "https://github.com/ddymko/go-jsonerror",
          "title": "go-jsonerror",
          "description": "Go-JsonError is ment to allow us to easily create json response errors that follow the JsonApi spec."
        },
        {
          "href": "https://github.com/nicklaw5/go-respond",
          "title": "go-respond",
          "description": "Go package for handling common HTTP JSON responses."
        },
        {
          "href": "https://github.com/elgs/gojq",
          "title": "gojq",
          "description": "JSON query in Golang."
        },
        {
          "href": "https://github.com/ChimeraCoder/gojson",
          "title": "gojson",
          "description": "Automatically generate Go (golang) struct definitions from example JSON."
        },
        {
          "href": "https://github.com/yazgazan/jaydiff",
          "title": "JayDiff",
          "description": "JSON diff utility written in Go."
        },
        {
          "href": "https://github.com/wI2L/jettison",
          "title": "jettison",
          "description": "High performance, reflection-less JSON encoder for Go."
        },
        {
          "href": "https://mholt.github.io/json-to-go/",
          "title": "JSON-to-Go",
          "description": "Convert JSON to Go struct."
        },
        {
          "href": "https://github.com/m-zajac/json2go",
          "title": "json2go",
          "description": "Advanced JSON to Go struct conversion. Provides package that can parse multiple JSON documents and create struct to fit them all."
        },
        {
          "href": "https://github.com/AmuzaTkts/jsonapi-errors",
          "title": "jsonapi-errors",
          "description": "Go bindings based on the JSON API errors reference."
        },
        {
          "href": "https://github.com/miolini/jsonf",
          "title": "jsonf",
          "description": "Console tool for highlighted formatting and struct query fetching JSON."
        },
        {
          "href": "https://github.com/ricardolonga/jsongo",
          "title": "jsongo",
          "description": "Fluent API to make it easier to create Json objects."
        },
        {
          "href": "https://github.com/RichardKnop/jsonhal",
          "title": "jsonhal",
          "description": "Simple Go package to make custom structs marshal into HAL compatible JSON responses."
        },
        {
          "href": "https://github.com/Qntfy/kazaam",
          "title": "kazaam",
          "description": "API for arbitrary transformation of JSON documents."
        },
        {
          "href": "https://github.com/mickep76/mapslice-json",
          "title": "mapslice-json",
          "description": "Go MapSlice for ordered marshal/ unmarshal of maps in JSON."
        },
        {
          "href": "https://github.com/sanbornm/mp",
          "title": "mp",
          "description": "Simple cli email parser. It currently takes stdin and outputs JSON."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Logging",
      "subtitle": "Libraries for generating and working with log files.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/amoghe/distillog",
          "title": "distillog",
          "description": "distilled levelled logging (think of it as stdlib + log levels)."
        },
        {
          "href": "https://github.com/kpango/glg",
          "title": "glg",
          "description": "glg is simple and fast leveled logging library for Go."
        },
        {
          "href": "https://github.com/lajosbencz/glo",
          "title": "glo",
          "description": "PHP Monolog inspired logging facility with identical severity levels."
        },
        {
          "href": "https://github.com/golang/glog",
          "title": "glog",
          "description": "Leveled execution logs for Go."
        },
        {
          "href": "https://github.com/utahta/go-cronowriter",
          "title": "go-cronowriter",
          "description": "Simple writer that rotate log files automatically based on current date and time, like cronolog."
        },
        {
          "href": "https://github.com/pieterclaerhout/go-log",
          "title": "go-log",
          "description": "A logging library with strack traces, object dumping and optional timestamps."
        },
        {
          "href": "https://github.com/subchen/go-log",
          "title": "go-log",
          "description": "Simple and configurable Logging in Go, with level, formatters and writers."
        },
        {
          "href": "https://github.com/siddontang/go-log",
          "title": "go-log",
          "description": "Log lib supports level and multi handlers."
        },
        {
          "href": "https://github.com/ian-kent/go-log",
          "title": "go-log",
          "description": "Log4j implementation in Go."
        },
        {
          "href": "https://github.com/apsdehal/go-logger",
          "title": "go-logger",
          "description": "Simple logger of Go Programs, with level handlers."
        },
        {
          "href": "https://github.com/sadlil/gologger",
          "title": "gologger",
          "description": "Simple easy to use log lib for go, logs in Colored Console, Simple Console, File or Elasticsearch."
        },
        {
          "href": "https://github.com/aphistic/gomol",
          "title": "gomol",
          "description": "Multiple-output, structured logging for Go with extensible logging outputs."
        },
        {
          "href": "https://github.com/One-com/gone/tree/master/log",
          "title": "gone/log",
          "description": "Fast, extendable, full-featured, std-lib source compatible log library."
        },
        {
          "href": "https://github.com/ssgreg/journald",
          "title": "journald",
          "description": "Go implementation of systemd Journal's native API for logging."
        },
        {
          "href": "https://github.com/aerogo/log",
          "title": "log",
          "description": "An O(1) logging system that allows you to connect one log to multiple writers (e.g. stdout, a file and a TCP connection)."
        },
        {
          "href": "https://github.com/apex/log",
          "title": "log",
          "description": "Structured logging package for Go."
        },
        {
          "href": "https://github.com/go-playground/log",
          "title": "log",
          "description": "Simple, configurable and scalable Structured Logging for Go."
        },
        {
          "href": "https://github.com/teris-io/log",
          "title": "log",
          "description": "Structured log interface for Go cleanly separates logging facade from its implementation."
        },
        {
          "href": "https://github.com/firstrow/logvoyage",
          "title": "log-voyage",
          "description": "Full-featured logging saas written in golang."
        },
        {
          "href": "https://github.com/inconshreveable/log15",
          "title": "log15",
          "description": "Simple, powerful logging for Go."
        },
        {
          "href": "https://github.com/ewwwwwqm/logdump",
          "title": "logdump",
          "description": "Package for multi-level logging."
        },
        {
          "href": "https://github.com/chzyer/logex",
          "title": "logex",
          "description": "Golang log lib, supports tracking and level, wrap by standard log lib."
        },
        {
          "href": "https://github.com/azer/logger",
          "title": "logger",
          "description": "Minimalistic logging library for Go."
        },
        {
          "href": "https://github.com/borderstech/logmatic",
          "title": "logmatic",
          "description": "Colorized logger for Golang with dynamic log level configuration."
        },
        {
          "href": "https://github.com/mbndr/logo",
          "title": "logo",
          "description": "Golang logger to different configurable writers."
        },
        {
          "href": "https://github.com/Sirupsen/logrus",
          "title": "logrus",
          "description": "Structured logger for Go."
        },
        {
          "href": "https://github.com/cabify/logrusiowriter",
          "title": "logrusiowriter",
          "description": " io.Writer implementation using logrus logger."
        },
        {
          "href": "https://github.com/sebest/logrusly",
          "title": "logrusly",
          "description": " logrus plug-in to send errors to a Loggly ."
        },
        {
          "href": "https://github.com/hashicorp/logutils",
          "title": "logutils",
          "description": "Utilities for slightly better logging in Go (Golang) extending the standard logger."
        },
        {
          "href": "https://github.com/mgutz/logxi",
          "title": "logxi",
          "description": "12-factor app logger that is fast and makes you happy."
        },
        {
          "href": "https://github.com/natefinch/lumberjack",
          "title": "lumberjack",
          "description": "Simple rolling logger, implements io.WriteCloser."
        },
        {
          "href": "https://github.com/jbrodriguez/mlog",
          "title": "mlog",
          "description": "Simple logging module for go, with 5 levels, an optional rotating logfile feature and stdout/stderr output."
        },
        {
          "href": "https://github.com/francoispqt/onelog",
          "title": "onelog",
          "description": "Onelog is a dead simple but very efficient JSON logger. It is the fastest JSON logger out there in all scenario. Also, it is one of the logger with the lowest allocation."
        },
        {
          "href": "https://github.com/go-ozzo/ozzo-log",
          "title": "ozzo-log",
          "description": "High performance logging supporting log severity, categorization, and filtering. Can send filtered log messages to various targets (e.g. console, network, mail)."
        },
        {
          "href": "https://github.com/arthurkiller/rollingWriter",
          "title": "rollingwriter",
          "description": "RollingWriter is an auto-rotate io.Writer implementation with multi policies to provide log file rotation."
        },
        {
          "href": "https://github.com/cihub/seelog",
          "title": "seelog",
          "description": "Logging functionality with flexible dispatching, filtering, and formatting."
        },
        {
          "href": "https://github.com/davecgh/go-spew",
          "title": "spew",
          "description": "Implements a deep pretty printer for Go data structures to aid in debugging."
        },
        {
          "href": "https://github.com/alexcesaro/log",
          "title": "stdlog",
          "description": "Stdlog is an object-oriented library providing leveled logging. It is very useful for cron jobs."
        },
        {
          "href": "https://github.com/hpcloud/tail",
          "title": "tail",
          "description": "Go package striving to emulate the features of the BSD tail program."
        },
        {
          "href": "https://github.com/xfxdev/xlog",
          "title": "xlog",
          "description": "Plugin architecture and flexible log system for Go, with level ctrl, multiple log target and custom log format."
        },
        {
          "href": "https://github.com/rs/xlog",
          "title": "xlog",
          "description": "Structured logger for net/context aware HTTP handlers with flexible dispatching."
        },
        {
          "href": "https://github.com/uber-go/zap",
          "title": "zap",
          "description": "Fast, structured, leveled logging in Go."
        },
        {
          "href": "https://github.com/rs/zerolog",
          "title": "zerolog",
          "description": "Zero-allocation JSON logger."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Machine Learning",
      "subtitle": "Libraries for Machine Learning.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/jbrukh/bayesian",
          "title": "bayesian",
          "description": "Naive Bayesian Classification for Golang."
        },
        {
          "href": "https://github.com/ryanbressler/CloudForest",
          "title": "CloudForest",
          "description": "Fast, flexible, multi-threaded ensembles of decision trees for machine learning in pure Go."
        },
        {
          "href": "https://github.com/MaxHalford/eaopt",
          "title": "eaopt",
          "description": "An evolutionary optimization library."
        },
        {
          "href": "https://github.com/khezen/evoli",
          "title": "evoli",
          "description": "Genetic Algorithm and Particle Swarm Optimization library."
        },
        {
          "href": "https://github.com/Fontinalis/fonet",
          "title": "fonet",
          "description": "A Deep Neural Network library written in Go."
        },
        {
          "href": "https://github.com/e-XpertSolutions/go-cluster",
          "title": "go-cluster",
          "description": "Go implementation of the k-modes and k-prototypes clustering algorithms."
        },
        {
          "href": "https://github.com/patrikeh/go-deep",
          "title": "go-deep",
          "description": "A feature-rich neural network library in Go."
        },
        {
          "href": "https://github.com/white-pony/go-fann",
          "title": "go-fann",
          "description": "Go bindings for Fast Artificial Neural Networks(FANN) library."
        },
        {
          "href": "https://github.com/thoj/go-galib",
          "title": "go-galib",
          "description": "Genetic Algorithms library written in Go / golang."
        },
        {
          "href": "https://github.com/daviddengcn/go-pr",
          "title": "go-pr",
          "description": "Pattern recognition package in Go lang."
        },
        {
          "href": "https://github.com/goml/gobrain",
          "title": "gobrain",
          "description": "Neural Networks written in go."
        },
        {
          "href": "https://github.com/e-dard/godist",
          "title": "godist",
          "description": "Various probability distributions, and associated methods."
        },
        {
          "href": "https://github.com/tomcraven/goga",
          "title": "goga",
          "description": "Genetic algorithm library for Go."
        },
        {
          "href": "https://github.com/sjwhitworth/golearn",
          "title": "GoLearn",
          "description": "General Machine Learning library for Go."
        },
        {
          "href": "https://github.com/danieldk/golinear",
          "title": "golinear",
          "description": "liblinear bindings for Go."
        },
        {
          "href": "https://github.com/surenderthakran/gomind",
          "title": "GoMind",
          "description": "A simplistic Neural Network Library in Go."
        },
        {
          "href": "https://github.com/cdipaolo/goml",
          "title": "goml",
          "description": "On-line Machine Learning in Go."
        },
        {
          "href": "https://github.com/dathoangnd/gonet",
          "title": "gonet",
          "description": "Neural Network for Go."
        },
        {
          "href": "https://github.com/c-bata/goptuna",
          "title": "Goptuna",
          "description": "Bayesian optimization framework for black-box functions written in Go. Everything will be optimized."
        },
        {
          "href": "https://github.com/timkaye11/goRecommend",
          "title": "goRecommend",
          "description": "Recommendation Algorithms library written in Go."
        },
        {
          "href": "https://github.com/gorgonia/gorgonia",
          "title": "gorgonia",
          "description": "graph-based computational library like Theano for Go that provides primitives for building various machine learning and neural network algorithms."
        },
        {
          "href": "https://github.com/zhenghaoz/gorse",
          "title": "gorse",
          "description": "An offline recommender system backend based on collaborative filtering written in Go."
        },
        {
          "href": "https://github.com/asafschers/goscore",
          "title": "goscore",
          "description": "Go Scoring API for PMML."
        },
        {
          "href": "https://github.com/otiai10/gosseract",
          "title": "gosseract",
          "description": "Go package for OCR (Optical Character Recognition), by using Tesseract C++ library."
        },
        {
          "href": "https://github.com/datastream/libsvm",
          "title": "libsvm",
          "description": "libsvm golang version derived work based on LIBSVM 3.14."
        },
        {
          "href": "https://github.com/jinyeom/neat",
          "title": "neat",
          "description": "Plug-and-play, parallel Go framework for NeuroEvolution of Augmenting Topologies (NEAT)."
        },
        {
          "href": "https://github.com/schuyler/neural-go",
          "title": "neural-go",
          "description": "Multilayer perceptron network implemented in Go, with training via backpropagation."
        },
        {
          "href": "https://github.com/otiai10/ocrserver",
          "title": "ocrserver",
          "description": "A simple OCR API server, seriously easy to be deployed by Docker and Heroku."
        },
        {
          "href": "https://github.com/owulveryck/onnx-go",
          "title": "onnx-go",
          "description": "Go Interface to Open Neural Network Exchange (ONNX)."
        },
        {
          "href": "https://github.com/ThePaw/probab",
          "title": "probab",
          "description": "Probability distribution functions. Bayesian inference. Written in pure Go."
        },
        {
          "href": "https://github.com/malaschitz/randomForest",
          "title": "randomforest",
          "description": "Easy to use Random Forest library for Go."
        },
        {
          "href": "https://github.com/muesli/regommend",
          "title": "regommend",
          "description": "Recommendation & collaborative filtering engine."
        },
        {
          "href": "https://github.com/eaigner/shield",
          "title": "shield",
          "description": "Bayesian text classifier with flexible tokenizers and storage backends for Go."
        },
        {
          "href": "https://github.com/galeone/tfgo",
          "title": "tfgo",
          "description": "Easy to use Tensorflow bindings: simplifies the usage of the official Tensorflow Go bindings. Define computational graphs in Go, load and execute models trained in Python."
        },
        {
          "href": "https://github.com/Xamber/Varis",
          "title": "Varis",
          "description": "Golang Neural Network."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Messaging",
      "subtitle": "Libraries that implement messaging systems.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/kak-tus/ami",
          "title": "ami",
          "description": "Go client to reliable queues based on Redis Cluster Streams."
        },
        {
          "href": "https://github.com/sideshow/apns2",
          "title": "APNs2",
          "description": "HTTP/2 Apple Push Notification provider for Go — Send push notifications to iOS, tvOS, Safari and OSX apps."
        },
        {
          "href": "https://github.com/hibiken/asynq",
          "title": "Asynq",
          "description": "A simple, reliable, and efficient distributed task queue for Go built on top of Redis."
        },
        {
          "href": "https://github.com/Clivern/Beaver",
          "title": "Beaver",
          "description": "A real time messaging server to build a scalable in-app notifications, multiplayer games, chat apps in web and mobile apps."
        },
        {
          "href": "https://github.com/Jeffail/benthos",
          "title": "Benthos",
          "description": "A message streaming bridge between a range of protocols."
        },
        {
          "href": "https://github.com/mustafaturan/bus",
          "title": "Bus",
          "description": "Minimalist message bus implementation for internal communication."
        },
        {
          "href": "https://github.com/centrifugal/centrifugo",
          "title": "Centrifugo",
          "description": "Real-time messaging (Websockets or SockJS) server in Go."
        },
        {
          "href": "https://github.com/jeroenrinzema/commander",
          "title": "Commander",
          "description": "A high-level event driven consumer/producer supporting various \"dialects\" such as Apache Kafka."
        },
        {
          "href": "https://github.com/godbus/dbus",
          "title": "dbus",
          "description": "Native Go bindings for D-Bus."
        },
        {
          "href": "https://github.com/appleboy/drone-line",
          "title": "drone-line",
          "description": "Sending Line notifications using a binary, docker or Drone CI."
        },
        {
          "href": "https://github.com/olebedev/emitter",
          "title": "emitter",
          "description": "Emits events using Go way, with wildcard, predicates, cancellation possibilities and many other good wins."
        },
        {
          "href": "https://github.com/agoalofalife/event",
          "title": "event",
          "description": "Implementation of the pattern observer."
        },
        {
          "href": "https://github.com/asaskevich/EventBus",
          "title": "EventBus",
          "description": "The lightweight event bus with async compatibility."
        },
        {
          "href": "https://github.com/osamingo/gaurun-client",
          "title": "gaurun-client",
          "description": "Gaurun Client written in Go."
        },
        {
          "href": "https://github.com/desertbit/glue",
          "title": "Glue",
          "description": "Robust Go and Javascript Socket Library (Alternative to Socket.io)."
        },
        {
          "href": "https://github.com/TheCreeper/go-notify",
          "title": "go-notify",
          "description": "Native implementation of the freedesktop notification spec."
        },
        {
          "href": "https://github.com/nsqio/go-nsq",
          "title": "go-nsq",
          "description": "the official Go package for NSQ."
        },
        {
          "href": "https://github.com/jirenius/go-res",
          "title": "go-res",
          "description": "Package for building REST/real-time services where clients are synchronized seamlessly, using NATS and Resgate."
        },
        {
          "href": "https://github.com/googollee/go-socket.io",
          "title": "go-socket.io",
          "description": "socket.io library for golang, a realtime application framework."
        },
        {
          "href": "https://github.com/maxatome/go-vitotrol",
          "title": "go-vitotrol",
          "description": "Client library to Viessmann Vitotrol web service."
        },
        {
          "href": "https://github.com/trivago/gollum",
          "title": "Gollum",
          "description": "A n:m multiplexer that gathers messages from different sources and broadcasts them to a set of destinations."
        },
        {
          "href": "https://github.com/jcuga/golongpoll",
          "title": "golongpoll",
          "description": "HTTP longpoll server library that makes web pub-sub simple."
        },
        {
          "href": "https://github.com/Terry-Mao/gopush-cluster",
          "title": "gopush-cluster",
          "description": "gopush-cluster is a go push server cluster."
        },
        {
          "href": "https://github.com/appleboy/gorush",
          "title": "gorush",
          "description": "Push notification server using APNs2 and google GCM ."
        },
        {
          "href": "https://github.com/smancke/guble",
          "title": "guble",
          "description": "Messaging server using push notifications (Google Firebase Cloud Messaging, Apple Push Notification services, SMS) as well as websockets, a REST API, featuring distributed operation and message-persistence."
        },
        {
          "href": "https://github.com/leandro-lugaresi/hub",
          "title": "hub",
          "description": "A Message/Event Hub for Go applications, using publish/subscribe pattern with support for alias like rabbitMQ exchanges."
        },
        {
          "href": "https://github.com/socifi/jazz",
          "title": "jazz",
          "description": "A simple RabbitMQ abstraction layer for queue administration and publishing and consuming of messages."
        },
        {
          "href": "https://github.com/RichardKnop/machinery",
          "title": "machinery",
          "description": "Asynchronous task queue/job queue based on distributed message passing."
        },
        {
          "href": "https://github.com/go-mangos/mangos",
          "title": "mangos",
          "description": "Pure go implementation of the Nanomsg (\"Scalable Protocols\") with transport interoperability."
        },
        {
          "href": "https://github.com/olahol/melody",
          "title": "melody",
          "description": "Minimalist framework for dealing with websocket sessions, includes broadcasting and automatic ping/pong handling."
        },
        {
          "href": "https://github.com/dunglas/mercure",
          "title": "Mercure",
          "description": "Server and library to dispatch server-sent updates using the Mercure protocol (built on top of Server-Sent Events)."
        },
        {
          "href": "https://github.com/vardius/message-bus",
          "title": "messagebus",
          "description": "messagebus is a Go simple async message bus, perfect for using as event bus when doing event sourcing, CQRS, DDD."
        },
        {
          "href": "https://github.com/nats-io/nats",
          "title": "NATS Go Client",
          "description": "Lightweight and high performance publish-subscribe and distributed queueing messaging system - this is the Go library."
        },
        {
          "href": "https://github.com/rafaeljesus/nsq-event-bus",
          "title": "nsq-event-bus",
          "description": "A tiny wrapper around NSQ topic and channel."
        },
        {
          "href": "https://github.com/dailymotion/oplog",
          "title": "oplog",
          "description": "Generic oplog/replication system for REST APIs."
        },
        {
          "href": "https://github.com/tuxychandru/pubsub",
          "title": "pubsub",
          "description": "Simple pubsub package for go."
        },
        {
          "href": "https://github.com/rafaeljesus/rabbus",
          "title": "rabbus",
          "description": "A tiny wrapper over amqp exchanges and queues."
        },
        {
          "href": "https://github.com/jandelgado/rabtap",
          "title": "rabtap",
          "description": "RabbitMQ swiss army knife cli app."
        },
        {
          "href": "https://github.com/sybrexsys/RapidMQ",
          "title": "RapidMQ",
          "description": "RapidMQ is a lightweight and reliable library for managing of the local messages queue."
        },
        {
          "href": "https://github.com/robinjoseph08/redisqueue",
          "title": "redisqueue",
          "description": "redisqueue provides a producer and consumer of a queue that uses Redis streams."
        },
        {
          "href": "https://github.com/sbabiv/rmqconn",
          "title": "rmqconn",
          "description": "RabbitMQ Reconnection. Wrapper over amqp.Connection and amqp.Dial. Allowing to do a reconnection when the connection is broken before forcing the call to the Close () method to be closed."
        },
        {
          "href": "https://github.com/Shopify/sarama",
          "title": "sarama",
          "description": "Go library for Apache Kafka."
        },
        {
          "href": "https://github.com/uniqush/uniqush-push",
          "title": "Uniqush-Push",
          "description": "Redis backed unified push service for server-side notifications to mobile devices."
        },
        {
          "href": "https://github.com/pebbe/zmq4",
          "title": "zmq4",
          "description": "Go interface to ZeroMQ version 4. Also available for version 3 and version 2 ."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Microsoft Office",
      "subsections": [
        {
          "title": "Microsoft Excel",
          "subtitle": "Libraries for working with Microsoft Excel.",
          "subsections": [],
          "links": [
            {
              "href": "https://github.com/360EntSecGroup-Skylar/excelize",
              "title": "excelize",
              "description": "Golang library for reading and writing Microsoft Excel™ (XLSX) files."
            },
            {
              "href": "https://github.com/szyhf/go-excel",
              "title": "go-excel",
              "description": "A simple and light reader to read a relate-db-like excel as a table."
            },
            {
              "href": "https://github.com/fterrag/goxlsxwriter",
              "title": "goxlsxwriter",
              "description": "Golang bindings for libxlsxwriter for writing XLSX (Microsoft Excel) files."
            },
            {
              "href": "https://github.com/tealeg/xlsx",
              "title": "xlsx",
              "description": "Library to simplify reading the XML format used by recent version of Microsoft Excel in Go programs."
            },
            {
              "href": "https://github.com/plandem/xlsx",
              "title": "xlsx",
              "description": "Fast and safe way to read/update your existing Microsoft Excel files in Go programs."
            }
          ]
        }
      ],
      "links": [
        {
          "href": "https://github.com/unidoc/unioffice",
          "title": "unioffice",
          "description": "Pure go library for creating and processing Office Word (.docx), Excel (.xlsx) and Powerpoint (.pptx) documents."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Miscellaneous",
      "subsections": [
        {
          "title": "Dependency Injection",
          "subtitle": "Libraries for working with dependency injection.",
          "subsections": [],
          "links": [
            {
              "href": "https://github.com/magic003/alice",
              "title": "alice",
              "description": "Additive dependency injection container for Golang."
            },
            {
              "href": "https://github.com/golobby/container",
              "title": "container",
              "description": "A powerful IoC Container with fluent and easy-to-use interface."
            },
            {
              "href": "https://github.com/goava/di",
              "title": "di",
              "description": "A dependency injection container for go programming language."
            },
            {
              "href": "https://github.com/uber-go/dig",
              "title": "dig",
              "description": "A reflection based dependency injection toolkit for Go."
            },
            {
              "href": "https://github.com/i-love-flamingo/dingo",
              "title": "dingo",
              "description": "A dependency injection toolkit for Go, based on Guice."
            },
            {
              "href": "https://github.com/uber-go/fx",
              "title": "fx",
              "description": "A dependency injection based application framework for Go (built on top of dig)."
            },
            {
              "href": "https://github.com/vardius/gocontainer",
              "title": "gocontainer",
              "description": "Simple Dependency Injection Container."
            },
            {
              "href": "https://github.com/logrange/linker",
              "title": "linker",
              "description": "A reflection based dependency injection and inversion of control library with components lifecycle support."
            },
            {
              "href": "https://github.com/Fs02/wire",
              "title": "wire",
              "description": "Strict Runtime Dependency Injection for Golang."
            }
          ]
        },
        {
          "title": "Project Layout",
          "subtitle": "Unofficial set of patterns for structuring projects.",
          "subsections": [],
          "links": [
            {
              "href": "https://github.com/lacion/cookiecutter-golang",
              "title": "cookiecutter-golang",
              "description": "A Go application boilerplate template for quick starting projects following production best practices."
            },
            {
              "href": "https://github.com/zitryss/go-sample",
              "title": "go-sample",
              "description": "A sample layout for Go application projects with the real code."
            },
            {
              "href": "https://github.com/golang-standards/project-layout",
              "title": "golang-standards/project-layout",
              "description": "Set of common historical and emerging project layout patterns in the Go ecosystem."
            },
            {
              "href": "https://github.com/sagikazarmark/modern-go-application",
              "title": "modern-go-application",
              "description": "Go application boilerplate and example applying modern practices."
            },
            {
              "href": "https://github.com/catchplay/scaffold",
              "title": "scaffold",
              "description": "Scaffold generates starter Go project layout. Lets you focus on business logic implemeted."
            }
          ]
        },
        {
          "title": "Strings",
          "subtitle": "Libraries for working with strings.",
          "subsections": [],
          "links": [
            {
              "href": "https://github.com/ozgio/strutil",
              "title": "strutil",
              "description": "String utilities."
            },
            {
              "href": "https://github.com/huandu/xstrings",
              "title": "xstrings",
              "description": "Collection of useful string functions ported from other languages."
            },
            {
              "href": "https://github.com/mudler/anagent",
              "title": "anagent",
              "description": "Minimalistic, pluggable Golang evloop/timer handler with dependency-injection."
            },
            {
              "href": "https://github.com/antchfx/antch",
              "title": "antch",
              "description": "A fast, powerful and extensible web crawling & scraping framework."
            },
            {
              "href": "https://github.com/mholt/archiver",
              "title": "archiver",
              "description": "Library and command for making and extracting .zip and .tar.gz archives."
            },
            {
              "href": "https://github.com/artyom/autoflags",
              "title": "autoflags",
              "description": "Go package to automatically define command line flags from struct fields."
            },
            {
              "href": "https://github.com/kirillDanshin/avgRating",
              "title": "avgRating",
              "description": "Calculate average score and rating based on Wilson Score Equation."
            },
            {
              "href": "https://github.com/dimiro1/banner",
              "title": "banner",
              "description": "Add beautiful banners into your Go applications."
            },
            {
              "href": "https://github.com/mojocn/base64Captcha",
              "title": "base64Captcha",
              "description": "Base64captch supports digit, number, alphabet, arithmetic, audio and digit-alphabet captcha."
            },
            {
              "href": "https://github.com/distatus/battery",
              "title": "battery",
              "description": "Cross-platform, normalized battery information library."
            },
            {
              "href": "https://github.com/icza/bitio",
              "title": "bitio",
              "description": "Highly optimized bit-level Reader and Writer for Go."
            },
            {
              "href": "https://github.com/digitalcrab/browscap_go",
              "title": "browscap_go",
              "description": "GoLang Library for Browser Capabilities Project ."
            },
            {
              "href": "https://github.com/steambap/captcha",
              "title": "captcha",
              "description": "Package captcha provides an easy to use, unopinionated API for captcha generation."
            },
            {
              "href": "https://github.com/cstockton/go-conv",
              "title": "conv",
              "description": "Package conv provides fast and intuitive conversions across Go types."
            },
            {
              "href": "https://github.com/miolini/datacounter",
              "title": "datacounter",
              "description": "Go counters for readers/writer/http.ResponseWriter."
            },
            {
              "href": "https://github.com/go-ffmt/ffmt",
              "title": "ffmt",
              "description": "Beautify data display for Humans."
            },
            {
              "href": "https://github.com/gabrie30/ghorg",
              "title": "ghorg",
              "description": "Quickly clone an entire org/users repositories into one directory - Supports GitHub, GitLab, and Bitbucket."
            },
            {
              "href": "https://github.com/jolestar/go-commons-pool",
              "title": "go-commons-pool",
              "description": "Generic object pool for Golang."
            },
            {
              "href": "https://github.com/go-openapi",
              "title": "go-openapi",
              "description": "Collection of packages to parse and utilize open-api schemas."
            },
            {
              "href": "https://github.com/eapache/go-resiliency",
              "title": "go-resiliency",
              "description": "Resiliency patterns for golang."
            },
            {
              "href": "https://github.com/gen2brain/go-unarr",
              "title": "go-unarr",
              "description": "Decompression library for RAR, TAR, ZIP and 7z archives."
            },
            {
              "href": "https://github.com/brianvoe/gofakeit",
              "title": "gofakeit",
              "description": "Random data generator written in go."
            },
            {
              "href": "https://github.com/antham/gommit",
              "title": "gommit",
              "description": "Analyze git commit messages to ensure they follow defined patterns."
            },
            {
              "href": "https://github.com/shirou/gopsutil",
              "title": "gopsutil",
              "description": "Cross-platform library for retrieving process and system utilization(CPU, Memory, Disks, etc)."
            },
            {
              "href": "https://github.com/osamingo/gosh",
              "title": "gosh",
              "description": "Provide Go Statistics Handler, Struct, Measure Method."
            },
            {
              "href": "https://github.com/haxpax/gosms",
              "title": "gosms",
              "description": "Your own local SMS gateway in Go that can be used to send SMS."
            },
            {
              "href": "https://github.com/cabify/gotoprom",
              "title": "gotoprom",
              "description": "Type-safe metrics builder wrapper library for the official Prometheus client."
            },
            {
              "href": "https://github.com/pariz/gountries",
              "title": "gountries",
              "description": "Package that exposes country and subdivision data."
            },
            {
              "href": "https://github.com/dimiro1/health",
              "title": "health",
              "description": "Easy to use, extensible health check library."
            },
            {
              "href": "https://github.com/etherlabsio/healthcheck",
              "title": "healthcheck",
              "description": "An opinionated and concurrent health-check HTTP handler for RESTful services."
            },
            {
              "href": "https://github.com/Wing924/hostutils",
              "title": "hostutils",
              "description": "A golang library for packing and unpacking FQDNs list."
            },
            {
              "href": "https://github.com/osamingo/indigo",
              "title": "indigo",
              "description": "Distributed unique ID generator of using Sonyflake and encoded by Base58."
            },
            {
              "href": "https://github.com/hyperboloide/lk",
              "title": "lk",
              "description": "A simple licensing library for golang."
            },
            {
              "href": "https://github.com/llir/llvm",
              "title": "llvm",
              "description": "Library for interacting with LLVM IR in pure Go."
            },
            {
              "href": "https://github.com/pascaldekloe/metrics",
              "title": "metrics",
              "description": "Library for metrics instrumentation and Prometheus exposition."
            },
            {
              "href": "https://github.com/alwindoss/morse",
              "title": "morse",
              "description": "Library to convert to and from morse code."
            },
            {
              "href": "https://github.com/lrita/numa",
              "title": "numa",
              "description": "NUMA is a utility library, which is written in go. It help us to write some NUMA-AWARED code."
            },
            {
              "href": "https://github.com/hyperboloide/pdfgen",
              "title": "pdfgen",
              "description": "HTTP service to generate PDF from Json requests."
            },
            {
              "href": "https://github.com/mavihq/persian",
              "title": "persian",
              "description": "Some utilities for Persian language in go."
            },
            {
              "href": "https://github.com/aofei/sandid",
              "title": "sandid",
              "description": "Every grain of sand on earth has its own ID."
            },
            {
              "href": "https://github.com/Wing924/shellwords",
              "title": "shellwords",
              "description": "A Golang library to manipulate strings according to the word parsing rules of the UNIX Bourne shell."
            },
            {
              "href": "https://github.com/teris-io/shortid",
              "title": "shortid",
              "description": "Distributed generation of super short, unique, non-sequential, URL friendly IDs."
            },
            {
              "href": "https://github.com/qmuntal/stateless",
              "title": "stateless",
              "description": "A fluent library for creating state machines."
            },
            {
              "href": "https://github.com/go-playground/stats",
              "title": "stats",
              "description": "Monitors Go MemStats + System stats such as Memory, Swap and CPU and sends via UDP anywhere you want for logging etc..."
            },
            {
              "href": "https://github.com/hackebrot/turtle",
              "title": "turtle",
              "description": "Emojis for Go."
            },
            {
              "href": "https://github.com/pantrif/url-shortener",
              "title": "url-shortener",
              "description": "A modern, powerful, and robust URL shortener microservice with mysql support."
            },
            {
              "href": "https://github.com/azr/generators/tree/master/varhandler",
              "title": "VarHandler",
              "description": "Generate boilerplate http input and output handling."
            },
            {
              "href": "https://github.com/rkoesters/xdg",
              "title": "xdg",
              "description": "FreeDesktop.org (xdg) Specs implemented in Go."
            },
            {
              "href": "https://github.com/go-xkg/xkg",
              "title": "xkg",
              "description": "X Keyboard Grabber."
            }
          ]
        }
      ],
      "links": []
    },
    {
      "group": "Awesome Go",
      "title": "Natural Language Processing",
      "subtitle": "Libraries for working with human languages.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/detectlanguage/detectlanguage-go",
          "title": "detectlanguage",
          "description": "Language Detection API Go Client. Supports batch requests, short phrase or single word language detection."
        },
        {
          "href": "https://github.com/rylans/getlang",
          "title": "getlang",
          "description": "Fast natural language detection package."
        },
        {
          "href": "https://github.com/nicksnyder/go-i18n/",
          "title": "go-i18n",
          "description": "Package and an accompanying tool to work with localized text."
        },
        {
          "href": "https://github.com/m1/go-localize",
          "title": "go-localize",
          "description": "Simple and easy to use i18n (Internationalization and localization) engine - used for translating locale strings."
        },
        {
          "href": "https://github.com/dveselov/mystem",
          "title": "go-mystem",
          "description": "CGo bindings to Yandex.Mystem - russian morphology analyzer."
        },
        {
          "href": "https://github.com/nuance/go-nlp",
          "title": "go-nlp",
          "description": "Utilities for working with discrete probability distributions and other tools useful for doing NLP work."
        },
        {
          "href": "https://github.com/mozillazg/go-pinyin",
          "title": "go-pinyin",
          "description": "CN Hanzi to Hanyu Pinyin converter."
        },
        {
          "href": "https://github.com/agonopol/go-stem",
          "title": "go-stem",
          "description": "Implementation of the porter stemming algorithm."
        },
        {
          "href": "https://github.com/mozillazg/go-unidecode",
          "title": "go-unidecode",
          "description": "ASCII transliterations of Unicode text."
        },
        {
          "href": "https://github.com/danieldk/go2vec",
          "title": "go2vec",
          "description": "Reader and utility functions for word2vec embeddings."
        },
        {
          "href": "https://github.com/yanyiwu/gojieba",
          "title": "gojieba",
          "description": "This is a Go implementation of jieba which a Chinese word splitting algorithm."
        },
        {
          "href": "https://github.com/rjohnsondev/golibstemmer",
          "title": "golibstemmer",
          "description": "Go bindings for the snowball libstemmer library including porter 2."
        },
        {
          "href": "https://github.com/xujiajun/gotokenizer",
          "title": "gotokenizer",
          "description": "A tokenizer based on the dictionary and Bigram language models for Golang. (Now only support chinese segmentation)"
        },
        {
          "href": "https://github.com/fiam/gounidecode",
          "title": "gounidecode",
          "description": "Unicode transliterator (also known as unidecode) for Go."
        },
        {
          "href": "https://github.com/go-ego/gse",
          "title": "gse",
          "description": "Go efficient text segmentation; support english, chinese, japanese and other."
        },
        {
          "href": "https://github.com/goodsign/icu",
          "title": "icu",
          "description": "Cgo binding for icu4c C library detection and conversion functions. Guaranteed compatibility with version 50.1."
        },
        {
          "href": "https://github.com/ikawaha/kagome",
          "title": "kagome",
          "description": "JP morphological analyzer written in pure Go."
        },
        {
          "href": "https://github.com/goodsign/libtextcat",
          "title": "libtextcat",
          "description": "Cgo binding for libtextcat C library. Guaranteed compatibility with version 2.2."
        },
        {
          "href": "https://github.com/awsong/MMSEGO",
          "title": "MMSEGO",
          "description": "This is a GO implementation of MMSEG which a Chinese word splitting algorithm."
        },
        {
          "href": "https://github.com/Shixzie/nlp",
          "title": "nlp",
          "description": "Extract values from strings and fill your structs with nlp."
        },
        {
          "href": "https://github.com/james-bowman/nlp",
          "title": "nlp",
          "description": "Go Natural Language Processing library supporting LSA (Latent Semantic Analysis)."
        },
        {
          "href": "https://github.com/rookii/paicehusk",
          "title": "paicehusk",
          "description": "Golang implementation of the Paice/Husk Stemming Algorithm."
        },
        {
          "href": "https://github.com/striker2000/petrovich",
          "title": "petrovich",
          "description": "Petrovich is the library which inflects Russian names to given grammatical case."
        },
        {
          "href": "https://github.com/a2800276/porter",
          "title": "porter",
          "description": "This is a fairly straightforward port of Martin Porter's C implementation of the Porter stemming algorithm."
        },
        {
          "href": "https://github.com/zhenjl/porter2",
          "title": "porter2",
          "description": "Really fast Porter 2 stemmer."
        },
        {
          "href": "https://github.com/jdkato/prose",
          "title": "prose",
          "description": "Library for text processing that supports tokenization, part-of-speech tagging, named-entity extraction, and more. English only."
        },
        {
          "href": "https://github.com/Obaied/RAKE.go",
          "title": "RAKE.go",
          "description": "Go port of the Rapid Automatic Keyword Extraction Algorithm (RAKE)."
        },
        {
          "href": "https://github.com/blevesearch/segment",
          "title": "segment",
          "description": "Go library for performing Unicode Text Segmentation as described in Unicode Standard Annex #29"
        },
        {
          "href": "https://github.com/neurosnap/sentences",
          "title": "sentences",
          "description": "Sentence tokenizer:  converts text into a list of sentences."
        },
        {
          "href": "https://github.com/osamingo/shamoji",
          "title": "shamoji",
          "description": "The shamoji is word filtering package written in Go."
        },
        {
          "href": "https://github.com/goodsign/snowball",
          "title": "snowball",
          "description": "Snowball stemmer port (cgo wrapper) for Go. Provides word stem extraction functionality Snowball native ."
        },
        {
          "href": "https://github.com/dchest/stemmer",
          "title": "stemmer",
          "description": "Stemmer packages for Go programming language. Includes English and German stemmers."
        },
        {
          "href": "https://github.com/pebbe/textcat",
          "title": "textcat",
          "description": "Go package for n-gram based text categorization, with support for utf-8 and raw text."
        },
        {
          "href": "https://github.com/abadojack/whatlanggo",
          "title": "whatlanggo",
          "description": "Natural language detection package for Go. Supports 84 languages and 24 scripts (writing systems e.g. Latin, Cyrillic, etc)."
        },
        {
          "href": "https://github.com/olebedev/when",
          "title": "when",
          "description": "Natural EN and RU language date/time parser with pluggable rules."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Networking",
      "subtitle": "Libraries for working with various layers of the network.",
      "subsections": [
        {
          "title": "HTTP Clients",
          "subtitle": "Libraries for making HTTP requests.",
          "subsections": [],
          "links": [
            {
              "href": "https://github.com/h2non/gentleman",
              "title": "gentleman",
              "description": "Full-featured plugin-driven HTTP client library."
            },
            {
              "href": "https://github.com/bozd4g/go-http-client",
              "title": "go-http-client",
              "description": "Make http calls simply and easily."
            },
            {
              "href": "https://github.com/levigross/grequests",
              "title": "grequests",
              "description": "A Go \"clone\" of the great and famous Requests library."
            },
            {
              "href": "https://github.com/gojektech/heimdall",
              "title": "heimdall",
              "description": "An enchanced http client with retry and hystrix capabilities."
            },
            {
              "href": "https://github.com/ybbus/httpretry",
              "title": "httpretry",
              "description": "Enriches the default go HTTP client with retry functionality."
            },
            {
              "href": "https://github.com/sethgrid/pester",
              "title": "pester",
              "description": "Go HTTP client calls with retries, backoff, and concurrency."
            },
            {
              "href": "https://github.com/go-resty/resty",
              "title": "resty",
              "description": "Simple HTTP and REST client for Go inspired by Ruby rest-client."
            },
            {
              "href": "https://github.com/ddo/rq",
              "title": "rq",
              "description": "A nicer interface for golang stdlib HTTP client."
            },
            {
              "href": "https://github.com/dghubble/sling",
              "title": "sling",
              "description": "Sling is a Go HTTP client library for creating and sending API requests."
            }
          ]
        }
      ],
      "links": [
        {
          "href": "https://github.com/mdlayher/arp",
          "title": "arp",
          "description": "Package arp implements the ARP protocol, as described in RFC 826."
        },
        {
          "href": "https://github.com/stabbycutyou/buffstreams",
          "title": "buffstreams",
          "description": "Streaming protocolbuffer data over TCP made easy."
        },
        {
          "href": "https://github.com/zubairhamed/canopus",
          "title": "canopus",
          "description": "CoAP Client/Server implementation (RFC 7252)."
        },
        {
          "href": "https://github.com/yl2chen/cidranger",
          "title": "cidranger",
          "description": "Fast IP to CIDR lookup for Go."
        },
        {
          "href": "https://github.com/mdlayher/dhcp6",
          "title": "dhcp6",
          "description": "Package dhcp6 implements a DHCPv6 server, as described in RFC 3315."
        },
        {
          "href": "https://github.com/miekg/dns",
          "title": "dns",
          "description": "Go library for working with DNS."
        },
        {
          "href": "https://github.com/songgao/ether",
          "title": "ether",
          "description": "Cross-platform Go package for sending and receiving ethernet frames."
        },
        {
          "href": "https://github.com/mdlayher/ethernet",
          "title": "ethernet",
          "description": "Package ethernet implements marshaling and unmarshaling of IEEE 802.3 Ethernet II frames and IEEE 802.1Q VLAN tags."
        },
        {
          "href": "https://github.com/valyala/fasthttp",
          "title": "fasthttp",
          "description": "Package fasthttp is a fast HTTP implementation for Go, up to 10 times faster than net/http."
        },
        {
          "href": "https://github.com/fortio/fortio",
          "title": "fortio",
          "description": "Load testing library and command line tool, advanced echo server and web UI. Allows to specify a set query-per-second load and record latency histograms and other useful stats and graph them. Tcp, Http, gRPC."
        },
        {
          "href": "https://github.com/jlaffaye/ftp",
          "title": "ftp",
          "description": "Package ftp implements a FTP client as described in RFC 959 ."
        },
        {
          "href": "https://github.com/xtaci/gaio",
          "title": "gaio",
          "description": "High performance async-io networking for Golang in proactor mode."
        },
        {
          "href": "https://github.com/Allenxuxu/gev",
          "title": "gev",
          "description": "gev is a lightweight, fast non-blocking TCP network library based on Reactor mode."
        },
        {
          "href": "https://github.com/DrmagicE/gmqtt",
          "title": "gmqtt",
          "description": "Gmqtt is a flexible, high-performance MQTT broker library that fully implements the MQTT protocol V3.1.1."
        },
        {
          "href": "https://github.com/panjf2000/gnet",
          "title": "gnet",
          "description": " gnet is a high-performance, lightweight, non-blocking, event-driven networking framework written in pure Go."
        },
        {
          "href": "https://github.com/google/gnxi",
          "title": "gNxI",
          "description": "A collection of tools for Network Management that use the gNMI and gNOI protocols."
        },
        {
          "href": "https://github.com/hashicorp/go-getter",
          "title": "go-getter",
          "description": "Go library for downloading files or directories from various sources using a URL."
        },
        {
          "href": "https://github.com/joeig/go-powerdns",
          "title": "go-powerdns",
          "description": "PowerDNS API bindings for Golang."
        },
        {
          "href": "https://github.com/ccding/go-stun",
          "title": "go-stun",
          "description": "Go implementation of the STUN client (RFC 3489 and RFC 5389)."
        },
        {
          "href": "https://github.com/osrg/gobgp",
          "title": "gobgp",
          "description": "BGP implemented in the Go Programming Language."
        },
        {
          "href": "https://github.com/sunwxg/golibwireshark",
          "title": "golibwireshark",
          "description": "Package golibwireshark use libwireshark library to decode pcap file and analyse dissection data."
        },
        {
          "href": "https://github.com/google/gopacket",
          "title": "gopacket",
          "description": "Go library for packet processing with libpcap bindings."
        },
        {
          "href": "https://github.com/akrennmair/gopcap",
          "title": "gopcap",
          "description": "Go wrapper for libpcap."
        },
        {
          "href": "https://github.com/sunwxg/goshark",
          "title": "goshark",
          "description": "Package goshark use tshark to decode IP packet and create data struct to analyse packet."
        },
        {
          "href": "https://github.com/soniah/gosnmp",
          "title": "gosnmp",
          "description": "Native Go library for performing SNMP actions."
        },
        {
          "href": "https://github.com/rakeki/gosocsvr",
          "title": "gosocsvr",
          "description": "Socket server made simple."
        },
        {
          "href": "https://github.com/gansidui/gotcp",
          "title": "gotcp",
          "description": "Go package for quickly writing tcp applications."
        },
        {
          "href": "https://github.com/cavaliercoder/grab",
          "title": "grab",
          "description": "Go package for managing file downloads."
        },
        {
          "href": "https://github.com/koofr/graval",
          "title": "graval",
          "description": "Experimental FTP server framework."
        },
        {
          "href": "https://github.com/gchaincl/httplab",
          "title": "HTTPLab",
          "description": "HTTPLabs let you inspect HTTP requests and forge responses."
        },
        {
          "href": "https://github.com/wzshiming/httpproxy",
          "title": "httpproxy",
          "description": "HTTP proxy handler and dialer."
        },
        {
          "href": "https://github.com/c-robinson/iplib",
          "title": "iplib",
          "description": "Library for working with IP addresses (net.IP, net.IPNet), inspired by python ipaddress and ruby ipaddr"
        },
        {
          "href": "https://github.com/udhos/jazigo",
          "title": "jazigo",
          "description": "Jazigo is a tool written in Go for retrieving configuration for multiple network devices."
        },
        {
          "href": "https://github.com/xtaci/kcp-go",
          "title": "kcp-go",
          "description": "KCP - Fast and Reliable ARQ Protocol."
        },
        {
          "href": "https://github.com/xtaci/kcptun",
          "title": "kcptun",
          "description": "Extremely simple & fast udp tunnel based on KCP protocol."
        },
        {
          "href": "https://github.com/fanux/lhttp",
          "title": "lhttp",
          "description": "Powerful websocket framework, build your IM server more easily."
        },
        {
          "href": "https://github.com/ian-kent/linkio",
          "title": "linkio",
          "description": "Network link speed simulation for Reader/Writer interfaces."
        },
        {
          "href": "https://github.com/kirillDanshin/llb",
          "title": "llb",
          "description": "It's a very simple but quick backend for proxy servers. Can be useful for fast redirection to predefined domain with zero memory allocation and fast response."
        },
        {
          "href": "https://github.com/hashicorp/mdns",
          "title": "mdns",
          "description": "Simple mDNS (Multicast DNS) client/server library in Golang."
        },
        {
          "href": "https://eclipse.org/paho/clients/golang/",
          "title": "mqttPaho",
          "description": "The Paho Go Client provides an MQTT client library for connection to MQTT brokers via TCP, TLS or WebSockets."
        },
        {
          "href": "https://github.com/intel-go/nff-go",
          "title": "NFF-Go",
          "description": "Framework for rapid development of performant network functions for cloud and bare-metal (former YANFF)."
        },
        {
          "href": "https://github.com/aerogo/packet",
          "title": "packet",
          "description": "Send packets over TCP and UDP. It can buffer messages and hot-swap connections if needed."
        },
        {
          "href": "https://github.com/schollz/peerdiscovery",
          "title": "peerdiscovery",
          "description": "Pure Go library for cross-platform local peer discovery using UDP multicast."
        },
        {
          "href": "https://github.com/aybabtme/portproxy",
          "title": "portproxy",
          "description": "Simple TCP proxy which adds CORS support to API's which don't support it."
        },
        {
          "href": "https://github.com/polera/publicip",
          "title": "publicip",
          "description": "Package publicip returns your public facing IPv4 address (internet egress)."
        },
        {
          "href": "https://github.com/lucas-clemente/quic-go",
          "title": "quic-go",
          "description": "An implementation of the QUIC protocol in pure Go."
        },
        {
          "href": "https://github.com/mdlayher/raw",
          "title": "raw",
          "description": "Package raw enables reading and writing data at the device driver level for a network interface."
        },
        {
          "href": "https://github.com/pkg/sftp",
          "title": "sftp",
          "description": "Package sftp implements the SSH File Transfer Protocol as described in https://filezilla-project.org/specs/draft-ietf-secsh-filexfer-02.txt."
        },
        {
          "href": "https://github.com/gliderlabs/ssh",
          "title": "ssh",
          "description": "Higher-level API for building SSH servers (wraps crypto/ssh)."
        },
        {
          "href": "https://github.com/eduardonunesp/sslb",
          "title": "sslb",
          "description": "It's a Super Simples Load Balancer, just a little project to achieve some kind of performance."
        },
        {
          "href": "https://github.com/go-rtc/stun",
          "title": "stun",
          "description": "Go implementation of RFC 5389 STUN protocol."
        },
        {
          "href": "https://github.com/firstrow/tcp_server",
          "title": "tcp_server",
          "description": "Go library for building tcp servers faster."
        },
        {
          "href": "https://github.com/two/tspool",
          "title": "tspool",
          "description": "A TCP Library use worker pool to improve performance and protect your server."
        },
        {
          "href": "https://github.com/anacrolix/utp",
          "title": "utp",
          "description": "Go uTP micro transport protocol implementation."
        },
        {
          "href": "https://github.com/songgao/water",
          "title": "water",
          "description": "Simple TUN/TAP library."
        },
        {
          "href": "https://github.com/pions/webrtc",
          "title": "webrtc",
          "description": "A pure Go implementation of the WebRTC API."
        },
        {
          "href": "https://github.com/masterzen/winrm",
          "title": "winrm",
          "description": "Go WinRM client to remotely execute commands on Windows machines."
        },
        {
          "href": "https://github.com/xfxdev/xtcp",
          "title": "xtcp",
          "description": "TCP Server Framework with simultaneous full duplex communication,graceful shutdown,custom protocol."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "OpenGL",
      "subtitle": "Libraries for using OpenGL in Go.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/go-gl/gl",
          "title": "gl",
          "description": "Go bindings for OpenGL (generated via glow)."
        },
        {
          "href": "https://github.com/go-gl/glfw",
          "title": "glfw",
          "description": "Go bindings for GLFW 3."
        },
        {
          "href": "https://github.com/goxjs/gl",
          "title": "goxjs/gl",
          "description": "Go cross-platform OpenGL bindings (OS X, Linux, Windows, browsers, iOS, Android)."
        },
        {
          "href": "https://github.com/goxjs/glfw",
          "title": "goxjs/glfw",
          "description": "Go cross-platform glfw library for creating an OpenGL context and receiving events."
        },
        {
          "href": "https://github.com/go-gl/mathgl",
          "title": "mathgl",
          "description": "Pure Go math package specialized for 3D math, with inspiration from GLM."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "ORM",
      "subtitle": "Libraries that implement Object-Relational Mapping or datamapping techniques.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/astaxie/beego/tree/master/orm",
          "title": "beego orm",
          "description": "Powerful orm framework for go. Support: pq/mysql/sqlite3."
        },
        {
          "href": "https://github.com/jschoedt/go-firestorm",
          "title": "go-firestorm",
          "description": "A simple ORM for Google/Firebase Cloud Firestore."
        },
        {
          "href": "https://github.com/go-pg/pg",
          "title": "go-pg",
          "description": "PostgreSQL ORM with focus on PostgreSQL specific features and performance."
        },
        {
          "href": "https://github.com/jirfag/go-queryset",
          "title": "go-queryset",
          "description": "100% type-safe ORM with code generation and MySQL, PostgreSQL, Sqlite3, SQL Server support based on GORM."
        },
        {
          "href": "https://github.com/huandu/go-sqlbuilder",
          "title": "go-sqlbuilder",
          "description": "A flexible and powerful SQL string builder library plus a zero-config ORM."
        },
        {
          "href": "https://github.com/gosuri/go-store",
          "title": "go-store",
          "description": "Simple and fast Redis backed key-value store library for Go."
        },
        {
          "href": "https://github.com/jinzhu/gorm",
          "title": "GORM",
          "description": "The fantastic ORM library for Golang, aims to be developer friendly."
        },
        {
          "href": "https://github.com/xxjwxc/gormt",
          "title": "gormt",
          "description": "Mysql database to golang gorm struct."
        },
        {
          "href": "https://github.com/go-gorp/gorp",
          "title": "gorp",
          "description": "Go Relational Persistence, ORM-ish library for Go."
        },
        {
          "href": "https://github.com/Fs02/grimoire",
          "title": "grimoire",
          "description": "Grimoire is a database access layer and validation for golang. (Support: MySQL, PostgreSQL and SQLite3)."
        },
        {
          "href": "https://github.com/abrahambotros/lore",
          "title": "lore",
          "description": "Simple and lightweight pseudo-ORM/pseudo-struct-mapping environment for Go."
        },
        {
          "href": "https://github.com/dadleyy/marlow",
          "title": "Marlow",
          "description": "Generated ORM from project structs for compile time safety assurances."
        },
        {
          "href": "https://github.com/gobuffalo/pop",
          "title": "pop/soda",
          "description": "Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite."
        },
        {
          "href": "https://github.com/coocood/qbs",
          "title": "QBS",
          "description": "Stands for Query By Struct. A Go ORM."
        },
        {
          "href": "https://github.com/go-reform/reform",
          "title": "reform",
          "description": "Better ORM for Go, based on non-empty interfaces and code generation."
        },
        {
          "href": "https://github.com/Fs02/rel",
          "title": "rel",
          "description": "Golang SQL Repository Layer for Clean (Onion) Architecture."
        },
        {
          "href": "https://github.com/volatiletech/sqlboiler",
          "title": "SQLBoiler",
          "description": "ORM generator. Generate a featureful and blazing-fast ORM tailored to your database schema."
        },
        {
          "href": "https://github.com/upper/db",
          "title": "upper.io/db",
          "description": "Single interface for interacting with different data sources through the use of adapters that wrap mature database drivers."
        },
        {
          "href": "https://github.com/go-xorm/xorm",
          "title": "Xorm",
          "description": "Simple and powerful ORM for Go."
        },
        {
          "href": "https://github.com/albrow/zoom",
          "title": "Zoom",
          "description": "Blazing-fast datastore and querying engine built on Redis."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Package Management",
      "subtitle": "Official tooling for dependency and package management",
      "subsections": [],
      "links": [
        {
          "href": "https://golang.org/cmd/go/#hdr-Modules__module_versions__and_more",
          "title": "go modules",
          "description": "Modules are the unit of source code interchange and versioning. The go command has direct support for working with modules, including recording and resolving dependencies on other modules."
        },
        {
          "href": "https://github.com/golang/dep",
          "title": "dep",
          "description": "Go dependency tool."
        },
        {
          "href": "https://go.googlesource.com/vgo/",
          "title": "vgo",
          "description": "Versioned Go."
        },
        {
          "href": "https://github.com/LyricalSecurity/gigo",
          "title": "gigo",
          "description": "PIP-like dependency tool for golang, with support for private repositories and hashes."
        },
        {
          "href": "https://github.com/Masterminds/glide",
          "title": "glide",
          "description": "Manage your golang vendor and vendored packages with ease. Inspired by tools like Maven, Bundler, and Pip."
        },
        {
          "href": "https://github.com/tools/godep",
          "title": "godep",
          "description": "dependency tool for go, godep helps build packages reproducibly by fixing their dependencies."
        },
        {
          "href": "https://github.com/mattn/gom",
          "title": "gom",
          "description": "Go Manager - bundle for go."
        },
        {
          "href": "https://github.com/nitrous-io/goop",
          "title": "goop",
          "description": "Simple dependency manager for Go (golang), inspired by Bundler."
        },
        {
          "href": "https://github.com/lunny/gop",
          "title": "gop",
          "description": "Build and manage your Go applications out of GOPATH."
        },
        {
          "href": "https://github.com/gpmgo/gopm",
          "title": "gopm",
          "description": "Go Package Manager."
        },
        {
          "href": "https://github.com/kardianos/govendor",
          "title": "govendor",
          "description": "Go Package Manager. Go vendor tool that works with the standard vendor file."
        },
        {
          "href": "https://github.com/pote/gpm",
          "title": "gpm",
          "description": "Barebones dependency manager for Go."
        },
        {
          "href": "https://github.com/VividCortex/johnny-deps",
          "title": "johnny-deps",
          "description": "Minimal dependency version using Git."
        },
        {
          "href": "https://github.com/raydac/mvn-golang",
          "title": "mvn-golang",
          "description": "plugin that provides way for auto-loading of Golang SDK, dependency management and start build environment in Maven project infrastructure."
        },
        {
          "href": "https://github.com/jingweno/nut",
          "title": "nut",
          "description": "Vendor Go dependencies."
        },
        {
          "href": "https://github.com/DamnWidget/VenGO",
          "title": "VenGO",
          "description": "create and manage exportable isolated go virtual environments."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Performance",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/jaegertracing/jaeger",
          "title": "jaeger",
          "description": "A distributed tracing system."
        },
        {
          "href": "https://github.com/pkg/profile",
          "title": "profile",
          "description": "Simple profiling support package for Go."
        },
        {
          "href": "https://github.com/kamilsk/tracer",
          "title": "tracer",
          "description": "Simple, lightweight tracing."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Query Language",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/thedevsaddam/gojsonq",
          "title": "gojsonq",
          "description": "A simple Go package to Query over JSON Data."
        },
        {
          "href": "https://github.com/tmc/graphql",
          "title": "graphql",
          "description": "graphql parser + utilities."
        },
        {
          "href": "https://github.com/neelance/graphql-go",
          "title": "graphql",
          "description": "GraphQL server with a focus on ease of use."
        },
        {
          "href": "https://github.com/graphql-go/graphql",
          "title": "graphql-go",
          "description": "Implementation of GraphQL for Go."
        },
        {
          "href": "https://github.com/elgs/jsonql",
          "title": "jsonql",
          "description": "JSON query expression library in Golang."
        },
        {
          "href": "https://github.com/bhmj/jsonslice",
          "title": "jsonslice",
          "description": "Jsonpath queries with advanced filters."
        },
        {
          "href": "https://github.com/a8m/rql",
          "title": "rql",
          "description": "Resource Query Language for REST API."
        },
        {
          "href": "https://github.com/SonicRoshan/straf",
          "title": "straf",
          "description": "Easily Convert Golang structs to GraphQL objects."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Resource Embedding",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/mjibson/esc",
          "title": "esc",
          "description": "Embeds files into Go programs and provides http.FileSystem interfaces to them."
        },
        {
          "href": "https://github.com/UnnoTed/fileb0x",
          "title": "fileb0x",
          "description": "Simple tool to embed files in go with focus on \"customization\" and ease to use."
        },
        {
          "href": "https://github.com/pyros2097/go-embed",
          "title": "go-embed",
          "description": "Generates go code to embed resource files into your library or executable."
        },
        {
          "href": "https://github.com/omeid/go-resources",
          "title": "go-resources",
          "description": "Unfancy resources embedding with Go."
        },
        {
          "href": "https://github.com/GeertJohan/go.rice",
          "title": "go.rice",
          "description": "go.rice is a Go package that makes working with resources such as html,js,css,images and templates very easy."
        },
        {
          "href": "https://github.com/wlbr/mule",
          "title": "mule",
          "description": "Embed external resources like images, movies ... into Go source code to create single file binaries using go generate . Focussed on simplicity."
        },
        {
          "href": "https://github.com/gobuffalo/packr",
          "title": "packr",
          "description": "The simple and easy way to embed static files into Go binaries."
        },
        {
          "href": "https://github.com/go-playground/statics",
          "title": "statics",
          "description": "Embeds static resources into go files for single binary compilation + works with http.FileSystem + symlinks."
        },
        {
          "href": "https://github.com/rakyll/statik",
          "title": "statik",
          "description": "Embeds static files into a Go executable."
        },
        {
          "href": "https://github.com/wlbr/templify",
          "title": "templify",
          "description": "Embed external template files into Go code to create single file binaries."
        },
        {
          "href": "https://github.com/shurcooL/vfsgen",
          "title": "vfsgen",
          "description": "Generates a vfsdata.go file that statically implements the given virtual filesystem."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Science and Data Analysis",
      "subtitle": "Libraries for scientific computing and data analyzing.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/ndabAP/assocentity",
          "title": "assocentity",
          "description": "Package assocentity returns the average distance from words to a given entity."
        },
        {
          "href": "https://github.com/seanhagen/bradleyterry",
          "title": "bradleyterry",
          "description": "Provides a Bradley-Terry Model for pairwise comparisons."
        },
        {
          "href": "https://github.com/vdobler/chart",
          "title": "chart",
          "description": "Simple Chart Plotting library for Go. Supports many graphs types."
        },
        {
          "href": "https://github.com/rocketlaunchr/dataframe-go",
          "title": "dataframe-go",
          "description": "Dataframes for machine-learning and statistics (similar to pandas)."
        },
        {
          "href": "https://github.com/soniah/evaler",
          "title": "evaler",
          "description": "Simple floating point arithmetic expression evaluator."
        },
        {
          "href": "https://github.com/VividCortex/ewma",
          "title": "ewma",
          "description": "Exponentially-weighted moving averages."
        },
        {
          "href": "https://github.com/skelterjohn/geom",
          "title": "geom",
          "description": "2D geometry for golang."
        },
        {
          "href": "https://github.com/mjibson/go-dsp",
          "title": "go-dsp",
          "description": "Digital Signal Processing for Go."
        },
        {
          "href": "https://github.com/ThePaw/go-gt",
          "title": "go-gt",
          "description": "Graph theory algorithms written in \"Go\" language."
        },
        {
          "href": "https://github.com/kzahedi/goent",
          "title": "goent",
          "description": "GO Implementation of Entropy Measures."
        },
        {
          "href": "https://github.com/VividCortex/gohistogram",
          "title": "gohistogram",
          "description": "Approximate histograms for data streams."
        },
        {
          "href": "https://github.com/gonum/gonum",
          "title": "gonum",
          "description": "Gonum is a set of numeric libraries for the Go programming language. It contains libraries for matrices, statistics, optimization, and more."
        },
        {
          "href": "https://github.com/gonum/plot",
          "title": "gonum/plot",
          "description": "gonum/plot provides an API for building and drawing plots in Go."
        },
        {
          "href": "https://github.com/gyuho/goraph",
          "title": "goraph",
          "description": "Pure Go graph theory library(data structure, algorith visualization)."
        },
        {
          "href": "https://github.com/cpmech/gosl",
          "title": "gosl",
          "description": "Go scientific library for linear algebra, FFT, geometry, NURBS, numerical methods, probabilities, optimisation, differential equations, and more."
        },
        {
          "href": "https://github.com/OGFris/GoStats",
          "title": "GoStats",
          "description": "GoStats is an Open Source GoLang library for math statistics mostly used in Machine Learning domains, it covers most of the Statistical measures functions."
        },
        {
          "href": "https://github.com/yourbasic/graph",
          "title": "graph",
          "description": "Library of basic graph algorithms."
        },
        {
          "href": "https://github.com/ChristopherRabotin/ode",
          "title": "ode",
          "description": "Ordinary differential equation (ODE) solver which supports extended states and channel-based iteration stop conditions."
        },
        {
          "href": "https://github.com/paulmach/orb",
          "title": "orb",
          "description": "2D geometry types with clipping, GeoJSON and Mapbox Vector Tile support."
        },
        {
          "href": "https://github.com/alixaxel/pagerank",
          "title": "pagerank",
          "description": "Weighted PageRank algorithm implemented in Go."
        },
        {
          "href": "https://github.com/sgreben/piecewiselinear",
          "title": "piecewiselinear",
          "description": "Tiny linear interpolation library."
        },
        {
          "href": "https://github.com/claygod/PiHex",
          "title": "PiHex",
          "description": "Implementation of the \"Bailey-Borwein-Plouffe\" algorithm for the hexadecimal number Pi."
        },
        {
          "href": "https://github.com/khezen/rootfinding",
          "title": "rootfinding",
          "description": "root-finding algorithms library for finding roots of quadratic functions."
        },
        {
          "href": "https://github.com/james-bowman/sparse",
          "title": "sparse",
          "description": "Go Sparse matrix formats for linear algebra supporting scientific and machine learning applications, compatible with gonum matrix libraries."
        },
        {
          "href": "https://github.com/montanaflynn/stats",
          "title": "stats",
          "description": "Statistics package with common functions missing from the Golang standard library."
        },
        {
          "href": "https://github.com/nytlabs/streamtools",
          "title": "streamtools",
          "description": "general purpose, graphical tool for dealing with streams of data."
        },
        {
          "href": "https://github.com/DavidBelicza/TextRank",
          "title": "TextRank",
          "description": "TextRank implementation in Golang with extendable features (summarization, weighting, phrase extraction) and multithreading (goroutine) support."
        },
        {
          "href": "https://github.com/tchayen/triangolatte",
          "title": "triangolatte",
          "description": "2D triangulation library. Allows translating lines and polygons (both based on points) to the language of GPUs."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Security",
      "subtitle": "Libraries that are used to help make your application more secure.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/hlandau/acme",
          "title": "acmetool",
          "description": "ACME (Let's Encrypt) client tool with automatic renewal."
        },
        {
          "href": "https://github.com/cossacklabs/acra",
          "title": "acra",
          "description": "Network encryption proxy to protect database-based applications from data leaks: strong selective encryption, SQL injections prevention, intrusion detection system."
        },
        {
          "href": "https://github.com/raja/argon2pw",
          "title": "argon2pw",
          "description": "Argon2 password hash generation with constant-time password comparison."
        },
        {
          "href": "https://godoc.org/golang.org/x/crypto/acme/autocert",
          "title": "autocert",
          "description": "Auto provision Let's Encrypt certificates and start a TLS server."
        },
        {
          "href": "https://github.com/jaredfolkins/badactor",
          "title": "BadActor",
          "description": "In-memory, application-driven jailer built in the spirit of fail2ban."
        },
        {
          "href": "https://github.com/Ullaakut/cameradar",
          "title": "Cameradar",
          "description": "Tool and library to remotely hack RTSP streams from surveillance cameras."
        },
        {
          "href": "https://github.com/mvmaasakkers/certificates",
          "title": "certificates",
          "description": "An opinionated tool for generating tls certificates."
        },
        {
          "href": "https://github.com/m1/go-generate-password",
          "title": "go-generate-password",
          "description": "Password generator that can be used on the cli or as a library."
        },
        {
          "href": "https://github.com/hillu/go-yara",
          "title": "go-yara",
          "description": "Go Bindings for YARA , the \"pattern matching swiss knife for malware researchers (and everyone else)\"."
        },
        {
          "href": "https://github.com/dwin/goArgonPass",
          "title": "goArgonPass",
          "description": "Argon2 password hash and verification designed to be compatible with existing Python and PHP implementations."
        },
        {
          "href": "https://github.com/dwin/goSecretBoxPassword",
          "title": "goSecretBoxPassword",
          "description": "A probably paranoid package for securely hashing and encrypting passwords."
        },
        {
          "href": "https://bitbucket.org/vahidi/interpol",
          "title": "Interpol",
          "description": "Rule-based data generator for fuzzing and penetration testing."
        },
        {
          "href": "https://github.com/xenolf/lego",
          "title": "lego",
          "description": "Pure Go ACME client library and CLI tool (for use with Let's Encrypt)."
        },
        {
          "href": "https://github.com/awnumar/memguard",
          "title": "memguard",
          "description": "A pure Go library for handling sensitive values in memory."
        },
        {
          "href": "https://github.com/kevinburke/nacl",
          "title": "nacl",
          "description": "Go implementation of the NaCL set of API's."
        },
        {
          "href": "https://github.com/pjebs/optimus-go",
          "title": "optimus-go",
          "description": "ID hashing and Obfuscation using Knuth's Algorithm."
        },
        {
          "href": "https://github.com/hlandau/passlib",
          "title": "passlib",
          "description": "Futureproof password hashing library."
        },
        {
          "href": "https://github.com/unrolled/secure",
          "title": "secure",
          "description": "HTTP middleware for Go that facilitates some quick security wins."
        },
        {
          "href": "https://github.com/xaionaro-go/secureio",
          "title": "secureio",
          "description": "An keyexchanging+authenticating+encrypting wrapper and multiplexer for io.ReadWriteCloser based on XChaCha20-poly1305, ECDH and ED25519."
        },
        {
          "href": "https://github.com/elithrar/simple-scrypt",
          "title": "simple-scrypt",
          "description": "Scrypt package with a simple, obvious API and automatic cost calibration built-in."
        },
        {
          "href": "https://github.com/ssh-vault/ssh-vault",
          "title": "ssh-vault",
          "description": "encrypt/decrypt using ssh keys."
        },
        {
          "href": "https://github.com/adrianosela/sslmgr",
          "title": "sslmgr",
          "description": "SSL certificates made easy with a high level wrapper around acme/autocert."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Serialization",
      "subtitle": "Libraries and tools for binary serialization.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/PromonLogicalis/asn1",
          "title": "asn1",
          "description": "Asn.1 BER and DER encoding library for golang."
        },
        {
          "href": "https://github.com/glycerine/bambam",
          "title": "bambam",
          "description": "generator for Cap'n Proto schemas from go."
        },
        {
          "href": "https://github.com/32leaves/bel",
          "title": "bel",
          "description": "Generate TypeScript interfaces from Go structs/interfaces. Useful for JSON RPC."
        },
        {
          "href": "https://github.com/ghostiam/binstruct",
          "title": "binstruct",
          "description": "Golang binary decoder for mapping data into the structure."
        },
        {
          "href": "https://github.com/fxamacker/cbor",
          "title": "cbor",
          "description": "Small, safe, and easy CBOR encoding and decoding library."
        },
        {
          "href": "https://github.com/pascaldekloe/colfer",
          "title": "colfer",
          "description": "Code generation for the Colfer binary format."
        },
        {
          "href": "https://github.com/jszwec/csvutil",
          "title": "csvutil",
          "description": "High Performance, idiomatic CSV record encoding and decoding to native Go structures."
        },
        {
          "href": "https://github.com/epiclabs-io/elastic",
          "title": "elastic",
          "description": "Convert slices, maps or any other unknown value across different types at run-time, no matter what."
        },
        {
          "href": "https://github.com/huydang284/fixedwidth",
          "title": "fixedwidth",
          "description": "Fixed-width text formatting (UTF-8 supported)."
        },
        {
          "href": "https://github.com/o1egl/fwencoder",
          "title": "fwencoder",
          "description": "Fixed width file parser (encoding and decoding library) for Go."
        },
        {
          "href": "https://github.com/glycerine/go-capnproto",
          "title": "go-capnproto",
          "description": "Cap'n Proto library and parser for go."
        },
        {
          "href": "https://github.com/ugorji/go",
          "title": "go-codec",
          "description": "High Performance, feature-Rich, idiomatic encode, decode and rpc library for msgpack, cbor and json, with runtime-based OR code-generation support."
        },
        {
          "href": "https://github.com/gogo/protobuf",
          "title": "gogoprotobuf",
          "description": "Protocol Buffers for Go with Gadgets."
        },
        {
          "href": "https://github.com/golang/protobuf",
          "title": "goprotobuf",
          "description": "Go support, in the form of a library and protocol compiler plugin, for Google's protocol buffers."
        },
        {
          "href": "https://github.com/json-iterator/go",
          "title": "jsoniter",
          "description": "High-performance 100% compatible drop-in replacement of \"encoding/json\"."
        },
        {
          "href": "https://github.com/mitchellh/mapstructure",
          "title": "mapstructure",
          "description": "Go library for decoding generic map values into native Go structures."
        },
        {
          "href": "https://github.com/yvasiyarov/php_session_decoder",
          "title": "php_session_decoder",
          "description": "GoLang library for working with PHP session format and PHP Serialize/Unserialize functions."
        },
        {
          "href": "https://github.com/vimeda/pletter",
          "title": "pletter",
          "description": "A standard way to wrap a proto message for message brokers."
        },
        {
          "href": "https://github.com/tuvistavie/structomap",
          "title": "structomap",
          "description": "Library to easily and dynamically generate maps from static structures."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Server Applications",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/xyproto/algernon",
          "title": "algernon",
          "description": "HTTP/2 web server with built-in support for Lua, Markdown, GCSS and Amber."
        },
        {
          "href": "https://github.com/mholt/caddy",
          "title": "Caddy",
          "description": "Caddy is an alternative, HTTP/2 web server that's easy to configure and use."
        },
        {
          "href": "https://www.consul.io/",
          "title": "consul",
          "description": "Consul is a tool for service discovery, monitoring and configuration."
        },
        {
          "href": "https://github.com/cortesi/devd",
          "title": "devd",
          "description": "Local webserver for developers."
        },
        {
          "href": "https://github.com/Bilibili/discovery",
          "title": "discovery",
          "description": "A registry for resilient mid-tier load balancing and failover."
        },
        {
          "href": "https://github.com/krotik/dudeldu",
          "title": "dudeldu",
          "description": "A simple SHOUTcast server."
        },
        {
          "href": "https://github.com/coreos/etcd",
          "title": "etcd",
          "description": "Highly-available key value store for shared configuration and service discovery."
        },
        {
          "href": "https://github.com/getfider/fider",
          "title": "Fider",
          "description": "Fider is an open platform to collect and organize customer feedback."
        },
        {
          "href": "https://github.com/checkr/flagr",
          "title": "Flagr",
          "description": "Flagr is an open-source feature flagging and A/B testing service."
        },
        {
          "href": "https://github.com/markphelps/flipt",
          "title": "flipt",
          "description": "A self contained feature flag solution written in Go and Vue.js"
        },
        {
          "href": "https://github.com/ortuman/jackal",
          "title": "jackal",
          "description": "An XMPP server written in Go."
        },
        {
          "href": "https://github.com/rekby/lets-proxy2",
          "title": "lets-proxy2",
          "description": "Reverse proxy for handle https with issue certificates in fly from lets-encrypt."
        },
        {
          "href": "https://github.com/minio/minio",
          "title": "minio",
          "description": "Minio is a distributed object storage server."
        },
        {
          "href": "https://github.com/blind-oracle/nginx-prometheus",
          "title": "nginx-prometheus",
          "description": "Nginx log parser and exporter to Prometheus."
        },
        {
          "href": "http://nsq.io/",
          "title": "nsq",
          "description": "A realtime distributed messaging platform."
        },
        {
          "href": "https://github.com/blind-oracle/psql-streamer",
          "title": "psql-streamer",
          "description": "Stream database events from PostgreSQL to Kafka."
        },
        {
          "href": "https://github.com/blind-oracle/riemann-relay",
          "title": "riemann-relay",
          "description": "Relay to load-balance Riemann events and/or convert them to Carbon."
        },
        {
          "href": "https://github.com/spiral/roadrunner",
          "title": "RoadRunner",
          "description": "High-performance PHP application server, load-balancer and process manager."
        },
        {
          "href": "https://github.com/drakkan/sftpgo",
          "title": "SFTPGo",
          "description": "Full featured and highly configurable SFTP server software."
        },
        {
          "href": "https://github.com/Comcast/trickster",
          "title": "Trickster",
          "description": "HTTP reverse proxy cache and time series accelerator."
        },
        {
          "href": "https://git.sci4me.com/sci4me/yakvs",
          "title": "yakvs",
          "description": "Small, networked, in-memory key-value store."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Stream Processing",
      "subtitle": "Libraries and tools for stream processing and reactive programming.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/reugn/go-streams",
          "title": "go-streams",
          "description": "Go stream processing library."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Template Engines",
      "subtitle": "Libraries and tools for templating and lexing.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/yosssi/ace",
          "title": "ace",
          "description": "Ace is an HTML template engine for Go, inspired by Slim and Jade. Ace is a refinement of Gold."
        },
        {
          "href": "https://github.com/eknkc/amber",
          "title": "amber",
          "description": "Amber is an elegant templating engine for Go Programming Language It is inspired from HAML and Jade."
        },
        {
          "href": "https://github.com/dskinner/damsel",
          "title": "damsel",
          "description": "Markup language featuring html outlining via css-selectors, extensible via pkg html/template and others."
        },
        {
          "href": "https://github.com/benbjohnson/ego",
          "title": "ego",
          "description": "Lightweight templating language that lets you write templates in Go. Templates are translated into Go and compiled."
        },
        {
          "href": "https://github.com/dannyvankooten/extemplate",
          "title": "extemplate",
          "description": "Tiny wrapper around html/template to allow for easy file-based template inheritance."
        },
        {
          "href": "https://github.com/valyala/fasttemplate",
          "title": "fasttemplate",
          "description": "Simple and fast template engine. Substitutes template placeholders up to 10x faster than text/template ."
        },
        {
          "href": "https://github.com/jung-kurt/gofpdf",
          "title": "gofpdf",
          "description": "PDF document generator with high level support for text, drawing and images."
        },
        {
          "href": "https://github.com/m1/gospin",
          "title": "gospin",
          "description": "Article spinning and spintax/spinning syntax engine, useful for A/B, testing pieces of text/articles and creating more natural conversations."
        },
        {
          "href": "https://github.com/foolin/goview",
          "title": "goview",
          "description": "Goview is a lightweight, minimalist and idiomatic template library based on golang html/template for building Go web application."
        },
        {
          "href": "https://github.com/shiyanhui/hero",
          "title": "hero",
          "description": "Hero is a handy, fast and powerful go template engine."
        },
        {
          "href": "https://github.com/CloudyKit/jet",
          "title": "jet",
          "description": "Jet template engine."
        },
        {
          "href": "https://github.com/ziutek/kasia.go",
          "title": "kasia.go",
          "description": "Templating system for HTML and other text documents - go implementation."
        },
        {
          "href": "https://github.com/osteele/liquid",
          "title": "liquid",
          "description": "Go implementation of Shopify Liquid templates."
        },
        {
          "href": "https://github.com/johnfercher/maroto",
          "title": "maroto",
          "description": "A maroto way to create PDFs. Maroto is inspired in Bootstrap and uses gofpdf. Fast and simple."
        },
        {
          "href": "https://github.com/hoisie/mustache",
          "title": "mustache",
          "description": "Go implementation of the Mustache template language."
        },
        {
          "href": "https://github.com/flosch/pongo2",
          "title": "pongo2",
          "description": "Django-like template-engine for Go."
        },
        {
          "href": "https://github.com/valyala/quicktemplate",
          "title": "quicktemplate",
          "description": "Fast, powerful, yet easy to use template engine. Converts templates into Go code and then compiles it."
        },
        {
          "href": "https://github.com/aymerick/raymond",
          "title": "raymond",
          "description": "Complete handlebars implementation in Go."
        },
        {
          "href": "https://github.com/sipin/gorazor",
          "title": "Razor",
          "description": "Razor view engine for Golang."
        },
        {
          "href": "https://github.com/robfig/soy",
          "title": "Soy",
          "description": "Closure templates (aka Soy templates) for Go, following the official spec ."
        },
        {
          "href": "https://github.com/gobuffalo/velvet",
          "title": "velvet",
          "description": "Complete handlebars implementation in Go."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Testing",
      "subtitle": "Libraries for testing codebases and generating test data.",
      "subsections": [],
      "links": [
        {
          "href": "https://apitest.dev",
          "title": "apitest",
          "description": "Simple and extensible behavioural testing library for REST based services or HTTP handlers that supports mocking external http calls and rendering of sequence diagrams."
        },
        {
          "href": "https://github.com/go-playground/assert",
          "title": "assert",
          "description": "Basic Assertion Library used along side native go testing, with building blocks for custom assertions."
        },
        {
          "href": "https://github.com/cavaliercoder/badio",
          "title": "badio",
          "description": "Extensions to Go's testing/iotest package."
        },
        {
          "href": "https://github.com/h2non/baloo",
          "title": "baloo",
          "description": "Expressive and versatile end-to-end HTTP API testing made easy."
        },
        {
          "href": "https://github.com/fulldump/biff",
          "title": "biff",
          "description": "Bifurcation testing framework, BDD compatible."
        },
        {
          "href": "https://github.com/percolate/charlatan",
          "title": "charlatan",
          "description": "Tool to generate fake interface implementations for tests."
        },
        {
          "href": "https://github.com/SimonBaeumer/commander",
          "title": "commander",
          "description": "Tool for testing cli applications on windows, linux and osx."
        },
        {
          "href": "https://github.com/bradleyjkemp/cupaloy",
          "title": "cupaloy",
          "description": "Simple snapshot testing addon for your test framework."
        },
        {
          "href": "https://github.com/khaiql/dbcleaner",
          "title": "dbcleaner",
          "description": "Clean database for testing purpose, inspired by database_cleaner in Ruby."
        },
        {
          "href": "https://github.com/viant/dsunit",
          "title": "dsunit",
          "description": "Datastore testing for SQL, NoSQL, structured files."
        },
        {
          "href": "https://github.com/fergusstrange/embedded-postgres",
          "title": "embedded-postgres",
          "description": "Run a real Postgres database locally on Linux, OSX or Windows as part of another Go application or test."
        },
        {
          "href": "https://github.com/viant/endly",
          "title": "endly",
          "description": "Declarative end to end functional testing."
        },
        {
          "href": "https://github.com/suzuki-shunsuke/flute",
          "title": "flute",
          "description": "HTTP client testing framework."
        },
        {
          "href": "https://github.com/verdverm/frisby",
          "title": "frisby",
          "description": "REST API testing framework."
        },
        {
          "href": "http://onsi.github.io/ginkgo/",
          "title": "ginkgo",
          "description": "BDD Testing Framework for Go."
        },
        {
          "href": "https://github.com/msoap/go-carpet",
          "title": "go-carpet",
          "description": "Tool for viewing test coverage in terminal."
        },
        {
          "href": "https://github.com/google/go-cmp",
          "title": "go-cmp",
          "description": "Package for comparing Go values in tests."
        },
        {
          "href": "https://github.com/zimmski/go-mutesting",
          "title": "go-mutesting",
          "description": "Mutation testing for Go source code."
        },
        {
          "href": "https://github.com/maxatome/go-testdeep",
          "title": "go-testdeep",
          "description": "Extremely flexible golang deep comparison, extends the go testing package."
        },
        {
          "href": "https://github.com/dnaeon/go-vcr",
          "title": "go-vcr",
          "description": "Record and replay your HTTP interactions for fast, deterministic and accurate tests."
        },
        {
          "href": "https://github.com/franela/goblin",
          "title": "goblin",
          "description": "Mocha like testing framework fo Go."
        },
        {
          "href": "http://labix.org/gocheck",
          "title": "gocheck",
          "description": "More advanced testing framework alternative to gotest."
        },
        {
          "href": "https://github.com/smartystreets/goconvey/",
          "title": "GoConvey",
          "description": "BDD-style framework with web UI and live reload."
        },
        {
          "href": "https://github.com/corbym/gocrest",
          "title": "gocrest",
          "description": "Composable hamcrest-like matchers for Go assertions."
        },
        {
          "href": "https://github.com/DATA-DOG/godog",
          "title": "godog",
          "description": "Cucumber or Behat like BDD framework for Go."
        },
        {
          "href": "https://github.com/appleboy/gofight",
          "title": "gofight",
          "description": "API Handler Testing for Golang Router framework."
        },
        {
          "href": "https://github.com/corbym/gogiven",
          "title": "gogiven",
          "description": "YATSPEC-like BDD testing framework for Go."
        },
        {
          "href": "https://github.com/jfilipczyk/gomatch",
          "title": "gomatch",
          "description": "library created for testing JSON against patterns."
        },
        {
          "href": "http://onsi.github.io/gomega/",
          "title": "gomega",
          "description": "Rspec like matcher/assertion library."
        },
        {
          "href": "https://github.com/orfjackal/gospec",
          "title": "GoSpec",
          "description": "BDD-style testing framework for the Go programming language."
        },
        {
          "href": "https://github.com/stesla/gospecify",
          "title": "gospecify",
          "description": "This provides a BDD syntax for testing your Go code. It should be familiar to anybody who has used libraries such as rspec."
        },
        {
          "href": "https://github.com/pavlo/gosuite",
          "title": "gosuite",
          "description": "Brings lightweight test suites with setup/teardown facilities to testing by leveraging Go1.7's Subtests."
        },
        {
          "href": "https://github.com/gotestyourself/gotest.tools",
          "title": "gotest.tools",
          "description": "A collection of packages to augment the go testing package and support common patterns."
        },
        {
          "href": "https://github.com/rdrdr/hamcrest",
          "title": "Hamcrest",
          "description": "fluent framework for declarative Matcher objects that, when applied to input values, produce self-describing results."
        },
        {
          "href": "https://github.com/gavv/httpexpect",
          "title": "httpexpect",
          "description": "Concise, declarative, and easy to use end-to-end HTTP and REST API testing."
        },
        {
          "href": "https://github.com/kinbiko/jsonassert",
          "title": "jsonassert",
          "description": "Package for verifying that your JSON payloads are serialized correctly."
        },
        {
          "href": "https://github.com/yookoala/restit",
          "title": "restit",
          "description": "Go micro framework to help writing RESTful API integration test."
        },
        {
          "href": "https://github.com/jgroeneveld/schema",
          "title": "schema",
          "description": "Quick and easy expression matching for JSON schemas used in requests and responses."
        },
        {
          "href": "https://github.com/adamluzsi/testcase",
          "title": "testcase",
          "description": "Idiomatic testing framework for Behavior Driven Development."
        },
        {
          "href": "https://github.com/go-testfixtures/testfixtures",
          "title": "testfixtures",
          "description": "A helper for Rails' like test fixtures to test database applications."
        },
        {
          "href": "https://github.com/stretchr/testify",
          "title": "Testify",
          "description": "Sacred extension to the standard go testing package."
        },
        {
          "href": "https://godoc.org/github.com/tvastar/test/cmd/testmd",
          "title": "testmd",
          "description": "Convert markdown snippets into testable go code."
        },
        {
          "href": "https://github.com/zhulongcheng/testsql",
          "title": "testsql",
          "description": "Generate test data from SQL files before testing and clear it after finished."
        },
        {
          "href": "https://github.com/jgroeneveld/trial",
          "title": "trial",
          "description": "Quick and easy extendable assertions without introducing much boilerplate."
        },
        {
          "href": "https://github.com/vcaesar/tt",
          "title": "Tt",
          "description": "Simple and colorful test tools."
        },
        {
          "href": "https://github.com/posener/wstest",
          "title": "wstest",
          "description": "Websocket client for unit-testing a websocket http.Handler."
        },
        {
          "href": "https://github.com/maxbrunsfeld/counterfeiter",
          "title": "counterfeiter",
          "description": "Tool for generating self-contained mock objects."
        },
        {
          "href": "https://github.com/elgohr/go-localstack",
          "title": "go-localstack",
          "description": "Tool for using localstack in AWS testing."
        },
        {
          "href": "https://github.com/DATA-DOG/go-sqlmock",
          "title": "go-sqlmock",
          "description": "Mock SQL driver for testing database interactions."
        },
        {
          "href": "https://github.com/DATA-DOG/go-txdb",
          "title": "go-txdb",
          "description": "Single transaction based database driver mainly for testing purposes."
        },
        {
          "href": "https://github.com/h2non/gock",
          "title": "gock",
          "description": "Versatile HTTP mocking made easy."
        },
        {
          "href": "https://github.com/golang/mock",
          "title": "gomock",
          "description": "Mocking framework for the Go programming language."
        },
        {
          "href": "https://github.com/seborama/govcr",
          "title": "govcr",
          "description": "HTTP mock for Golang: record and replay HTTP interactions for offline testing."
        },
        {
          "href": "https://github.com/SpectoLabs/hoverfly",
          "title": "hoverfly",
          "description": "HTTP(S) proxy for recording and simulating REST/SOAP APIs with extensible middleware and easy-to-use CLI."
        },
        {
          "href": "https://github.com/jarcoal/httpmock",
          "title": "httpmock",
          "description": "Easy mocking of HTTP responses from external resources."
        },
        {
          "href": "https://github.com/gojuno/minimock",
          "title": "minimock",
          "description": "Mock generator for Go interfaces."
        },
        {
          "href": "https://github.com/tv42/mockhttp",
          "title": "mockhttp",
          "description": "Mock object for Go http.ResponseWriter."
        },
        {
          "href": "https://github.com/cabify/timex",
          "title": "timex",
          "description": "A test-friendly replacement for the native time package."
        },
        {
          "href": "https://github.com/dvyukov/go-fuzz",
          "title": "go-fuzz",
          "description": "Randomized testing system."
        },
        {
          "href": "https://github.com/google/gofuzz",
          "title": "gofuzz",
          "description": "Library for populating go objects with random values."
        },
        {
          "href": "https://github.com/zimmski/tavor",
          "title": "Tavor",
          "description": "Generic fuzzing and delta-debugging framework."
        },
        {
          "href": "https://github.com/mafredri/cdp",
          "title": "cdp",
          "description": "Type-safe bindings for the Chrome Debugging Protocol that can be used with browsers or other debug targets that implement it."
        },
        {
          "href": "https://github.com/knq/chromedp",
          "title": "chromedp",
          "description": "a way to drive/test Chrome, Safari, Edge, Android Webviews, and other browsers supporting the Chrome Debugging Protocol."
        },
        {
          "href": "https://github.com/aerokube/ggr",
          "title": "ggr",
          "description": "a lightweight server that routes and proxies Selenium WebDriver requests to multiple Selenium hubs."
        },
        {
          "href": "https://github.com/ysmood/rod",
          "title": "rod",
          "description": "A chrome devtools controller that is easy and safe to use."
        },
        {
          "href": "https://github.com/aerokube/selenoid",
          "title": "selenoid",
          "description": "alternative Selenium hub server that launches browsers within containers."
        },
        {
          "href": "https://github.com/pingcap/failpoint",
          "title": "failpoint",
          "description": "An implementation of failpoints for Golang."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Text Processing",
      "subtitle": "Libraries for parsing and manipulating texts.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/Guitarbum722/align",
          "title": "align",
          "description": "A general purpose application that aligns text."
        },
        {
          "href": "https://github.com/sbstjn/allot",
          "title": "allot",
          "description": "Placeholder and wildcard text parsing for CLI tools and bots."
        },
        {
          "href": "https://github.com/CalebQ42/bbConvert",
          "title": "bbConvert",
          "description": "Converts bbCode to HTML that allows you to add support for custom bbCode tags."
        },
        {
          "href": "https://github.com/russross/blackfriday",
          "title": "blackfriday",
          "description": "Markdown processor in Go."
        },
        {
          "href": "https://github.com/microcosm-cc/bluemonday",
          "title": "bluemonday",
          "description": "HTML Sanitizer."
        },
        {
          "href": "https://github.com/aerogo/codetree",
          "title": "codetree",
          "description": "Parses indented code (python, pixy, scarlet, etc.) and returns a tree structure."
        },
        {
          "href": "https://github.com/asciimoo/colly",
          "title": "colly",
          "description": "Fast and Elegant Scraping Framework for Gophers."
        },
        {
          "href": "https://github.com/mingrammer/commonregex",
          "title": "commonregex",
          "description": "A collection of common regular expressions for Go."
        },
        {
          "href": "https://github.com/slotix/dataflowkit",
          "title": "dataflowkit",
          "description": "Web scraping Framework to turn websites into structured data."
        },
        {
          "href": "https://github.com/ockam-network/did",
          "title": "did",
          "description": "DID (Decentralized Identifiers) Parser and Stringer in Go."
        },
        {
          "href": "https://github.com/hscells/doi",
          "title": "doi",
          "description": "Document object identifier (doi) parser in Go."
        },
        {
          "href": "https://github.com/editorconfig/editorconfig-core-go",
          "title": "editorconfig-core-go",
          "description": "Editorconfig file parser and manipulator for Go."
        },
        {
          "href": "https://github.com/endeveit/enca",
          "title": "enca",
          "description": "Minimal cgo bindings for libenca ."
        },
        {
          "href": "https://github.com/mickep76/encdec",
          "title": "encdec",
          "description": "Package provides a generic interface to encoders and decodersa."
        },
        {
          "href": "https://github.com/alixaxel/genex",
          "title": "genex",
          "description": "Count and expand Regular Expressions into all matching Strings."
        },
        {
          "href": "https://godoc.org/github.com/shurcooL/github_flavored_markdown",
          "title": "github_flavored_markdown",
          "description": "GitHub Flavored Markdown renderer (using blackfriday) with fenced code block highlighting, clickable header anchor links."
        },
        {
          "href": "https://github.com/ianlopshire/go-fixedwidth",
          "title": "go-fixedwidth",
          "description": "Fixed-width text formatting (encoder/decoder with reflection)."
        },
        {
          "href": "https://github.com/dustin/go-humanize",
          "title": "go-humanize",
          "description": "Formatters for time, numbers, and memory size to human readable format."
        },
        {
          "href": "https://github.com/adrianmo/go-nmea",
          "title": "go-nmea",
          "description": "NMEA parser library for the Go language."
        },
        {
          "href": "https://github.com/mattn/go-runewidth",
          "title": "go-runewidth",
          "description": "Functions to get fixed width of the character or string."
        },
        {
          "href": "https://github.com/mozillazg/go-slugify",
          "title": "go-slugify",
          "description": "Make pretty slug with multiple languages support."
        },
        {
          "href": "https://github.com/pelletier/go-toml",
          "title": "go-toml",
          "description": "Go library for the TOML format with query support and handy cli tools."
        },
        {
          "href": "https://github.com/emersion/go-vcard",
          "title": "go-vcard",
          "description": "Parse and format vCard."
        },
        {
          "href": "https://github.com/trubitsyn/go-zero-width",
          "title": "go-zero-width",
          "description": "Zero-width character detection and removal for Go."
        },
        {
          "href": "https://github.com/mmcdole/gofeed",
          "title": "gofeed",
          "description": "Parse RSS and Atom feeds in Go."
        },
        {
          "href": "https://github.com/awalterschulze/gographviz",
          "title": "gographviz",
          "description": "Parses the Graphviz DOT language."
        },
        {
          "href": "https://github.com/labstack/gommon/tree/master/bytes",
          "title": "gommon/bytes",
          "description": "Format bytes to string."
        },
        {
          "href": "https://github.com/polera/gonameparts",
          "title": "gonameparts",
          "description": "Parses human names into individual name parts."
        },
        {
          "href": "https://github.com/andrewstuart/goq",
          "title": "goq",
          "description": "Declarative unmarshaling of HTML using struct tags with jQuery syntax (uses GoQuery)."
        },
        {
          "href": "https://github.com/PuerkitoBio/goquery",
          "title": "GoQuery",
          "description": "GoQuery brings a syntax and a set of features similar to jQuery to the Go language."
        },
        {
          "href": "https://github.com/zach-klippenstein/goregen",
          "title": "goregen",
          "description": "Library for generating random strings from regular expressions."
        },
        {
          "href": "https://github.com/zhshch2002/goribot",
          "title": "goribot",
          "description": "A simple golang spider/scraping framework,build a spider in 3 lines."
        },
        {
          "href": "https://github.com/leonelquinteros/gotext",
          "title": "gotext",
          "description": "GNU gettext utilities for Go."
        },
        {
          "href": "https://github.com/endeveit/guesslanguage",
          "title": "guesslanguage",
          "description": "Functions to determine the natural language of a unicode text."
        },
        {
          "href": "https://github.com/antchfx/htmlquery",
          "title": "htmlquery",
          "description": "An XPath query package for HTML, lets you extract data or evaluate from HTML documents by an XPath expression."
        },
        {
          "href": "https://github.com/facebookgo/inject",
          "title": "inject",
          "description": "Package inject provides a reflect based injector."
        },
        {
          "href": "https://github.com/Wing924/ltsv",
          "title": "ltsv",
          "description": "High performance LTSV (Labeled Tab Separeted Value) reader for Go."
        },
        {
          "href": "https://github.com/clbanning/mxj",
          "title": "mxj",
          "description": "Encode / decode XML as JSON or map[string]interface{}; extract values with dot-notation paths and wildcards. Replaces x2j and j2x packages."
        },
        {
          "href": "https://github.com/eduncan911/podcast",
          "title": "podcast",
          "description": "iTunes Compliant and RSS 2.0 Podcast Generator in Golang"
        },
        {
          "href": "https://github.com/gortc/sdp",
          "title": "sdp",
          "description": "SDP: Session Description Protocol [ RFC 4566 ]."
        },
        {
          "href": "https://github.com/mvdan/sh",
          "title": "sh",
          "description": "Shell parser and formatter."
        },
        {
          "href": "https://github.com/gosimple/slug",
          "title": "slug",
          "description": "URL-friendly slugify with multiple languages support."
        },
        {
          "href": "https://github.com/avelino/slugify",
          "title": "Slugify",
          "description": "Go slugify application that handles string."
        },
        {
          "href": "https://github.com/zhengchun/syndfeed",
          "title": "syndfeed",
          "description": "A syndication feed for Atom 1.0 and RSS 2.0."
        },
        {
          "href": "https://github.com/BurntSushi/toml",
          "title": "toml",
          "description": "TOML configuration format (encoder/decoder with reflection)."
        },
        {
          "href": "https://github.com/JoshuaDoes/gofuckyourself",
          "title": "gofuckyourself",
          "description": "A sanitization-based swear filter for Go."
        },
        {
          "href": "https://github.com/bndr/gotabulate",
          "title": "gotabulate",
          "description": "Easily pretty-print your tabular data with Go."
        },
        {
          "href": "https://github.com/codemodus/kace",
          "title": "kace",
          "description": "Common case conversions covering common initialisms."
        },
        {
          "href": "https://github.com/nproc/parseargs-go",
          "title": "parseargs-go",
          "description": "string argument parser that understands quotes and backslashes."
        },
        {
          "href": "https://github.com/codemodus/parth",
          "title": "parth",
          "description": "URL path segmentation parsing."
        },
        {
          "href": "https://github.com/yourbasic/radix",
          "title": "radix",
          "description": "fast string sorting algorithm."
        },
        {
          "href": "https://github.com/zoomio/tagify",
          "title": "Tagify",
          "description": "Produces a set of tags from given source."
        },
        {
          "href": "https://github.com/isbm/textwrap",
          "title": "textwrap",
          "description": "Implementation of textwrap module from Python."
        },
        {
          "href": "https://github.com/Dynom/TySug",
          "title": "TySug",
          "description": "Alternative suggestions with respect to keyboard layouts."
        },
        {
          "href": "https://github.com/stackerzzq/xj2go",
          "title": "xj2go",
          "description": "Convert xml or json to go struct."
        },
        {
          "href": "https://github.com/mvdan/xurls",
          "title": "xurls",
          "description": "Extract urls from text."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Third-party APIs",
      "subtitle": "Libraries for accessing third party APIs.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/ngs/go-amazon-product-advertising-api",
          "title": "amazon-product-advertising-api",
          "description": "Go Client Library for Amazon Product Advertising API ."
        },
        {
          "href": "https://github.com/ChimeraCoder/anaconda",
          "title": "anaconda",
          "description": "Go client library for the Twitter 1.1 API."
        },
        {
          "href": "https://github.com/aws/aws-sdk-go",
          "title": "aws-sdk-go",
          "description": "The official AWS SDK for the Go programming language."
        },
        {
          "href": "https://github.com/naegelejd/brewerydb",
          "title": "brewerydb",
          "description": "Go library for accessing the BreweryDB API."
        },
        {
          "href": "https://github.com/andygrunwald/cachet",
          "title": "cachet",
          "description": "Go client library for Cachet (open source status page system) ."
        },
        {
          "href": "https://github.com/jszwedko/go-circleci",
          "title": "circleci",
          "description": "Go client library for interacting with CircleCI's API."
        },
        {
          "href": "https://github.com/samuelcouch/clarifai",
          "title": "clarifai",
          "description": "Go client library for interfacing with the Clarifai API."
        },
        {
          "href": "https://github.com/codeship/codeship-go",
          "title": "codeship-go",
          "description": "Go client library for interacting with Codeship's API v2."
        },
        {
          "href": "https://github.com/coinpaprika/coinpaprika-api-go-client",
          "title": "coinpaprika-go",
          "description": "Go client library for interacting with Coinpaprika's API."
        },
        {
          "href": "https://github.com/bwmarrin/discordgo",
          "title": "discordgo",
          "description": "Go bindings for the Discord Chat API."
        },
        {
          "href": "https://github.com/onrik/ethrpc",
          "title": "ethrpc",
          "description": "Go bindings for Ethereum JSON RPC API."
        },
        {
          "href": "https://github.com/huandu/facebook",
          "title": "facebook",
          "description": "Go Library that supports the Facebook Graph API."
        },
        {
          "href": "https://github.com/maddevsio/fcm",
          "title": "fcm",
          "description": "Go library for Firebase Cloud Messaging."
        },
        {
          "href": "https://github.com/emiddleton/gads",
          "title": "gads",
          "description": "Google Adwords Unofficial API."
        },
        {
          "href": "https://github.com/bit4bit/gami",
          "title": "gami",
          "description": "Go library for Asterisk Manager Interface."
        },
        {
          "href": "https://github.com/Aorioli/gcm",
          "title": "gcm",
          "description": "Go library for Google Cloud Messaging."
        },
        {
          "href": "https://github.com/codingsince1985/geo-golang",
          "title": "geo-golang",
          "description": "Go Library to access Google Maps , MapQuest , Nominatim , OpenCage , Bing , Mapbox , and OpenStreetMap geocoding / reverse geocoding APIs."
        },
        {
          "href": "https://github.com/google/go-github",
          "title": "github",
          "description": "Go library for accessing the GitHub REST API v3."
        },
        {
          "href": "https://github.com/shurcooL/githubql",
          "title": "githubql",
          "description": "Go library for accessing the GitHub GraphQL API v4."
        },
        {
          "href": "https://github.com/axelspringer/go-chronos",
          "title": "go-chronos",
          "description": "Go library for interacting with the Chronos Job Scheduler"
        },
        {
          "href": "https://github.com/PaulRosset/go-hacknews",
          "title": "go-hacknews",
          "description": "Tiny Go client for HackerNews API."
        },
        {
          "href": "https://github.com/abdullahselek/go-here",
          "title": "go-here",
          "description": "Go client library around the HERE location based APIs."
        },
        {
          "href": "https://github.com/koffeinsource/go-imgur",
          "title": "go-imgur",
          "description": "Go client library for imgur"
        },
        {
          "href": "https://github.com/andygrunwald/go-jira",
          "title": "go-jira",
          "description": "Go client library for Atlassian JIRA"
        },
        {
          "href": "https://github.com/gambol99/go-marathon",
          "title": "go-marathon",
          "description": "Go library for interacting with Mesosphere's Marathon PAAS."
        },
        {
          "href": "https://github.com/nstratos/go-myanimelist",
          "title": "go-myanimelist",
          "description": "Go client library for accessing the MyAnimeList API ."
        },
        {
          "href": "https://github.com/rbretecher/go-postman-collection",
          "title": "go-postman-collection",
          "description": "Go module to work with Postman Collections (compatible with Insomnia)."
        },
        {
          "href": "https://github.com/esurdam/go-sophos",
          "title": "go-sophos",
          "description": "Go client library for the Sophos UTM REST API with zero dependencies."
        },
        {
          "href": "https://github.com/sergioaugrod/go-sptrans",
          "title": "go-sptrans",
          "description": "Go client library for the SPTrans Olho Vivo API."
        },
        {
          "href": "https://gitlab.com/toby3d/telegraph",
          "title": "go-telegraph",
          "description": "Telegraph publishing platform API client."
        },
        {
          "href": "https://github.com/andygrunwald/go-trending",
          "title": "go-trending",
          "description": "Go library for accessing trending repositories and developers at Github."
        },
        {
          "href": "https://github.com/knspriggs/go-twitch",
          "title": "go-twitch",
          "description": "Go client for interacting with the Twitch v3 API."
        },
        {
          "href": "https://github.com/dghubble/go-twitter",
          "title": "go-twitter",
          "description": "Go client library for the Twitter v1.1 APIs."
        },
        {
          "href": "https://github.com/hbagdi/go-unsplash",
          "title": "go-unsplash",
          "description": "Go client library for the Unsplash.com API."
        },
        {
          "href": "https://github.com/nishanths/go-xkcd",
          "title": "go-xkcd",
          "description": "Go client for the xkcd API."
        },
        {
          "href": "https://github.com/cyruzin/golang-tmdb",
          "title": "golang-tmdb",
          "description": "Golang wrapper for The Movie Database API v3."
        },
        {
          "href": "https://github.com/mamal72/golyrics",
          "title": "golyrics",
          "description": "Golyrics is a Go library to fetch music lyrics data from the Wikia website."
        },
        {
          "href": "https://github.com/MonaxGT/gomalshare",
          "title": "gomalshare",
          "description": "Go library MalShare API malshare.com"
        },
        {
          "href": "https://github.com/michiwend/gomusicbrainz",
          "title": "GoMusicBrainz",
          "description": "Go MusicBrainz WS2 client library."
        },
        {
          "href": "https://github.com/google/google-api-go-client",
          "title": "google",
          "description": "Auto-generated Google APIs for Go."
        },
        {
          "href": "https://github.com/chonthu/go-google-analytics",
          "title": "google-analytics",
          "description": "Simple wrapper for easy google analytics reporting."
        },
        {
          "href": "https://github.com/GoogleCloudPlatform/gcloud-golang",
          "title": "google-cloud",
          "description": "Google Cloud APIs Go Client Library."
        },
        {
          "href": "https://github.com/ngs/go-google-email-audit-api",
          "title": "google-email-audit-api",
          "description": "Go client library for Google G Suite Email Audit API ."
        },
        {
          "href": "https://github.com/n0madic/google-play-scraper",
          "title": "google-play-scraper",
          "description": "Get data from Google Play Store."
        },
        {
          "href": "https://github.com/utekaravinash/gopaapi5",
          "title": "gopaapi5",
          "description": "Go Client Library for Amazon Product Advertising API 5.0 ."
        },
        {
          "href": "https://github.com/koltyakov/gosip",
          "title": "gosip",
          "description": "Go client library SharePoint API."
        },
        {
          "href": "https://github.com/jsgilmore/gostorm",
          "title": "gostorm",
          "description": "GoStorm is a Go library that implements the communications protocol required to write Storm spouts and Bolts in Go that communicate with the Storm shells."
        },
        {
          "href": "https://github.com/andybons/hipchat",
          "title": "hipchat",
          "description": "This project implements a golang client library for the Hipchat API."
        },
        {
          "href": "https://github.com/daneharrigan/hipchat",
          "title": "hipchat (xmpp)",
          "description": "A golang package to communicate with HipChat over XMPP."
        },
        {
          "href": "https://github.com/Henry-Sarabia/igdb",
          "title": "igdb",
          "description": "Go client for the Internet Game Database API ."
        },
        {
          "href": "https://github.com/ansd/lastpass-go",
          "title": "lastpass-go",
          "description": "Go client library for the LastPass API."
        },
        {
          "href": "https://github.com/clevabit/libgoffi",
          "title": "libgoffi",
          "description": "Library adapter toolbox for native libffi integration"
        },
        {
          "href": "https://github.com/Medium/medium-sdk-go",
          "title": "Medium",
          "description": "Golang SDK for Medium's OAuth2 API."
        },
        {
          "href": "https://github.com/andygrunwald/megos",
          "title": "megos",
          "description": "Client library for accessing an Apache Mesos cluster."
        },
        {
          "href": "https://github.com/minio/minio-go",
          "title": "minio-go",
          "description": "Minio Go Library for Amazon S3 compatible cloud storage."
        },
        {
          "href": "https://github.com/dukex/mixpanel",
          "title": "mixpanel",
          "description": "Mixpanel is a library for tracking events and sending Mixpanel profile updates to Mixpanel from your go applications."
        },
        {
          "href": "https://github.com/mxpv/patreon-go",
          "title": "patreon-go",
          "description": "Go library for Patreon API."
        },
        {
          "href": "https://github.com/logpacker/PayPal-Go-SDK",
          "title": "paypal",
          "description": "Wrapper for PayPal payment API."
        },
        {
          "href": "https://github.com/playlyfe/playlyfe-go-sdk",
          "title": "playlyfe",
          "description": "The Playlyfe Rest API Go SDK."
        },
        {
          "href": "https://github.com/gregdel/pushover",
          "title": "pushover",
          "description": "Go wrapper for the Pushover API."
        },
        {
          "href": "https://github.com/Omie/rrdaclient",
          "title": "rrdaclient",
          "description": "Go Library to access statdns.com API, which is in turn RRDA API. DNS Queries over HTTP."
        },
        {
          "href": "https://github.com/rapito/go-shopify",
          "title": "shopify",
          "description": "Go Library to make CRUD request to the Shopify API."
        },
        {
          "href": "https://github.com/rhnvrm/simples3",
          "title": "simples3",
          "description": "Simple no frills AWS S3 Library using REST with V4 Signing written in Go."
        },
        {
          "href": "https://github.com/nlopes/slack",
          "title": "slack",
          "description": "Slack API in Go."
        },
        {
          "href": "https://github.com/sergiotapia/smitego",
          "title": "smite",
          "description": "Go package to wraps access to the Smite game API."
        },
        {
          "href": "https://github.com/rapito/go-spotify",
          "title": "spotify",
          "description": "Go Library to access Spotify WEB API."
        },
        {
          "href": "https://github.com/sostronk/go-steam",
          "title": "steam",
          "description": "Go Library to interact with Steam game servers."
        },
        {
          "href": "https://github.com/stripe/stripe-go",
          "title": "stripe",
          "description": "Go client for the Stripe API."
        },
        {
          "href": "https://github.com/dietsche/textbelt",
          "title": "textbelt",
          "description": "Go client for the textbelt.com txt messaging API."
        },
        {
          "href": "https://github.com/poorny/translate",
          "title": "translate",
          "description": "Go online translation package."
        },
        {
          "href": "https://github.com/adlio/trello",
          "title": "Trello",
          "description": "Go wrapper for the Trello API."
        },
        {
          "href": "https://github.com/mrbenosborne/tripadvisor-golang",
          "title": "TripAdvisor",
          "description": "Go wrapper for the TripAdvisor API."
        },
        {
          "href": "https://github.com/mattcunningham/gumblr",
          "title": "tumblr",
          "description": "Go wrapper for the Tumblr v2 API."
        },
        {
          "href": "https://github.com/n0madic/twitter-scraper",
          "title": "twitter-scraper",
          "description": "Scrape the Twitter Frontend API without authentication and limits."
        },
        {
          "href": "https://github.com/bitfield/uptimerobot",
          "title": "uptimerobot",
          "description": "Go wrapper and command-line client for the Uptime Robot v2 API."
        },
        {
          "href": "https://github.com/verifid/vl-go",
          "title": "vl-go",
          "description": "Go client library around the VerifID identity verification layer API."
        },
        {
          "href": "https://github.com/go-playground/webhooks",
          "title": "webhooks",
          "description": "Webhook receiver for GitHub and Bitbucket."
        },
        {
          "href": "https://github.com/wit-ai/wit-go",
          "title": "wit-go",
          "description": "Go client for wit.ai HTTP API."
        },
        {
          "href": "https://github.com/brunomvsouza/ynab.go",
          "title": "ynab",
          "description": "Go wrapper for the YNAB API."
        },
        {
          "href": "https://github.com/gojuno/go-zooz",
          "title": "zooz",
          "description": "Go client for the Zooz API."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Utilities",
      "subtitle": "General utilities and tools to make your life easier.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/topfreegames/apm",
          "title": "apm",
          "description": "Process manager for Golang applications with an HTTP API."
        },
        {
          "href": "https://github.com/icza/backscanner",
          "title": "backscanner",
          "description": "A scanner similar to bufio.Scanner, but it reads and returns lines in reverse order, starting at a given position and going backward."
        },
        {
          "href": "https://github.com/wesovilabs/beyond",
          "title": "beyond",
          "description": "The Go tool that will drive you to the AOP world!"
        },
        {
          "href": "https://github.com/Henry-Sarabia/blank",
          "title": "blank",
          "description": "Verify or remove blanks and whitespace from strings."
        },
        {
          "href": "https://github.com/tmrts/boilr",
          "title": "boilr",
          "description": "Blazingly fast CLI tool for creating projects from boilerplate templates."
        },
        {
          "href": "https://github.com/antham/chyle",
          "title": "chyle",
          "description": "Changelog generator using a git repository with multiple configuration possibilities."
        },
        {
          "href": "https://github.com/cep21/circuit",
          "title": "circuit",
          "description": "An efficient and feature complete Hystrix like Go implementation of the circuit breaker pattern."
        },
        {
          "href": "https://github.com/rubyist/circuitbreaker",
          "title": "circuitbreaker",
          "description": "Circuit Breakers in Go."
        },
        {
          "href": "https://github.com/jonboulle/clockwork",
          "title": "clockwork",
          "description": "A simple fake clock for golang."
        },
        {
          "href": "https://github.com/SimonBaeumer/cmd",
          "title": "cmd",
          "description": "Library for executing shell commands on osx, windows and linux."
        },
        {
          "href": "https://github.com/txgruppi/command",
          "title": "command",
          "description": "Command pattern for Go with thread safe serial and parallel dispatcher."
        },
        {
          "href": "https://github.com/posener/compare",
          "title": "compare",
          "description": "Enables more readable and easier comparison tasks."
        },
        {
          "href": "https://github.com/jutkko/copy-pasta",
          "title": "copy-pasta",
          "description": "Universal multi-workstation clipboard that uses S3 like backend for the storage."
        },
        {
          "href": "https://github.com/biter777/countries",
          "title": "countries",
          "description": "Full implementation of ISO-3166-1, ISO-4217, ITU-T E.164, Unicode CLDR and IANA ccTLD standarts."
        },
        {
          "href": "https://github.com/bcicen/ctop",
          "title": "ctop",
          "description": " Top-like interface (e.g. htop) for container metrics."
        },
        {
          "href": "https://github.com/posener/ctxutil",
          "title": "ctxutil",
          "description": "A collection of utility functions for contexts."
        },
        {
          "href": "https://github.com/nikogura/dbt",
          "title": "dbt",
          "description": "A framework for running self-updating signed binaries from a central, trusted repository."
        },
        {
          "href": "https://github.com/vrecan/death",
          "title": "Death",
          "description": "Managing go application shutdown with signals."
        },
        {
          "href": "https://github.com/ulule/deepcopier",
          "title": "Deepcopier",
          "description": "Simple struct copying for Go."
        },
        {
          "href": "https://github.com/derekparker/delve",
          "title": "delve",
          "description": "Go debugger."
        },
        {
          "href": "https://github.com/kirillDanshin/dlog",
          "title": "dlog",
          "description": "Compile-time controlled logger to make your release smaller without removing debug calls."
        },
        {
          "href": "https://github.com/cristianoliveira/ergo",
          "title": "ergo",
          "description": "The management of multiple local services running over different ports made easy."
        },
        {
          "href": "https://github.com/nullne/evaluator",
          "title": "evaluator",
          "description": "Evaluate an expression dynamicly based on s-expression. It's simple and easy to extend."
        },
        {
          "href": "https://github.com/h2non/filetype",
          "title": "filetype",
          "description": "Small package to infer the file type checking the magic numbers signature."
        },
        {
          "href": "https://github.com/yaronsumel/filler",
          "title": "filler",
          "description": "small utility to fill structs using \"fill\" tag."
        },
        {
          "href": "https://github.com/gookit/filter",
          "title": "filter",
          "description": "provide filtering, sanitizing, and conversion of Go data."
        },
        {
          "href": "https://github.com/junegunn/fzf",
          "title": "fzf",
          "description": "Command-line fuzzy finder written in Go."
        },
        {
          "href": "https://github.com/maxcnunes/gaper",
          "title": "gaper",
          "description": "Builds and restarts a Go project when it crashes or some watched file changes."
        },
        {
          "href": "https://github.com/go-playground/generate",
          "title": "generate",
          "description": "runs go generate recursively on a specified path or environment variable and can filter by regex."
        },
        {
          "href": "https://github.com/antham/ghokin",
          "title": "ghokin",
          "description": "Parallelized formatter with no external dependencies for gherkin (cucumber, behat...)."
        },
        {
          "href": "https://github.com/git-time-metric/gtm",
          "title": "git-time-metric",
          "description": "Simple, seamless, lightweight time tracking for Git."
        },
        {
          "href": "https://github.com/asticode/go-astitodo",
          "title": "go-astitodo",
          "description": "Parse TODOs in your GO code."
        },
        {
          "href": "https://github.com/wendigo/go-bind-plugin",
          "title": "go-bind-plugin",
          "description": "go:generate tool for wrapping symbols exported by golang plugins (1.8 only)."
        },
        {
          "href": "https://github.com/gabstv/go-bsdiff",
          "title": "go-bsdiff",
          "description": "Pure Go bsdiff and bspatch libraries and CLI tools."
        },
        {
          "href": "https://github.com/Eun/go-convert",
          "title": "go-convert",
          "description": "Package go-convert enbles you to convert a value into another type."
        },
        {
          "href": "https://github.com/ungerik/go-dry",
          "title": "go-dry",
          "description": "DRY (don't repeat yourself) package for Go."
        },
        {
          "href": "https://github.com/thoas/go-funk",
          "title": "go-funk",
          "description": "Modern Go utility library which provides helpers (map, find, contains, filter, chunk, reverse, ...)."
        },
        {
          "href": "https://github.com/Talento90/go-health",
          "title": "go-health",
          "description": "Health package simplifies the way you add health check to your services."
        },
        {
          "href": "https://github.com/mozillazg/go-httpheader",
          "title": "go-httpheader",
          "description": "Go library for encoding structs into Header fields."
        },
        {
          "href": "https://github.com/mvmaasakkers/go-problemdetails",
          "title": "go-problemdetails",
          "description": "Go package for working with Problem Details."
        },
        {
          "href": "https://github.com/beefsack/go-rate",
          "title": "go-rate",
          "description": "Timed rate limiter for Go."
        },
        {
          "href": "https://github.com/ikeikeikeike/go-sitemap-generator",
          "title": "go-sitemap-generator",
          "description": "XML Sitemap generator written in Go."
        },
        {
          "href": "https://github.com/sadlil/go-trigger",
          "title": "go-trigger",
          "description": "Go-lang global event triggerer, Register Events with an id and trigger the event from anywhere from your project."
        },
        {
          "href": "https://github.com/carlescere/goback",
          "title": "goback",
          "description": "Go simple exponential backoff package."
        },
        {
          "href": "https://github.com/VividCortex/godaemon",
          "title": "godaemon",
          "description": "Utility to write daemons."
        },
        {
          "href": "https://github.com/dropbox/godropbox",
          "title": "godropbox",
          "description": "Common libraries for writing Go services/applications from Dropbox."
        },
        {
          "href": "https://github.com/cosiner/gohper",
          "title": "gohper",
          "description": "Various tools/modules help for development."
        },
        {
          "href": "https://github.com/msempere/golarm",
          "title": "golarm",
          "description": "Fire alarms with system events."
        },
        {
          "href": "https://github.com/mlimaloureiro/golog",
          "title": "golog",
          "description": "Easy and lightweight CLI tool to time track your tasks."
        },
        {
          "href": "https://github.com/bndr/gopencils",
          "title": "gopencils",
          "description": "Small and simple package to easily consume REST APIs."
        },
        {
          "href": "https://github.com/michiwend/goplaceholder",
          "title": "goplaceholder",
          "description": "a small golang lib to generate placeholder images."
        },
        {
          "href": "https://github.com/philipjkim/goreadability",
          "title": "goreadability",
          "description": "Webpage summary extractor using Facebook Open Graph and arc90's readability."
        },
        {
          "href": "https://github.com/goreleaser/goreleaser",
          "title": "goreleaser",
          "description": "Deliver Go binaries as fast and easily as possible."
        },
        {
          "href": "https://github.com/wgliang/goreporter",
          "title": "goreporter",
          "description": "Golang tool that does static analysis, unit testing, code review and generate code quality report."
        },
        {
          "href": "https://github.com/linxGnu/goseaweedfs",
          "title": "goseaweedfs",
          "description": "SeaweedFS client library with almost full features."
        },
        {
          "href": "https://github.com/ik5/gostrutils",
          "title": "gostrutils",
          "description": "Collections of string manipulation and conversion functions."
        },
        {
          "href": "https://github.com/subosito/gotenv",
          "title": "gotenv",
          "description": "Load environment variables from .env or any io.Reader in Go."
        },
        {
          "href": "https://github.com/tenntenn/gpath",
          "title": "gpath",
          "description": "Library to simplify access struct fields with Go's expression in reflection."
        },
        {
          "href": "https://github.com/novalagung/gubrak",
          "title": "gubrak",
          "description": "Golang utility library with syntactic sugar. It's like lodash, but for golang."
        },
        {
          "href": "https://github.com/miguelpragier/handy",
          "title": "handy",
          "description": "Many utilities and helpers like string handlers/formatters and validators."
        },
        {
          "href": "https://github.com/htcat/htcat",
          "title": "htcat",
          "description": "Parallel and Pipelined HTTP GET Utility."
        },
        {
          "href": "https://github.com/github/hub",
          "title": "hub",
          "description": "wrap git commands with additional functionality to interact with github from the terminal."
        },
        {
          "href": "https://github.com/afex/hystrix-go",
          "title": "hystrix-go",
          "description": "Implements Hystrix patterns of programmer-defined fallbacks aka circuit breaker."
        },
        {
          "href": "https://github.com/immortal/immortal",
          "title": "immortal",
          "description": "*nix cross-platform (OS agnostic) supervisor."
        },
        {
          "href": "https://github.com/mengzhuo/intrinsic",
          "title": "intrinsic",
          "description": "Use x86 SIMD without writing any assembly code."
        },
        {
          "href": "https://github.com/clevergo/jsend",
          "title": "jsend",
          "description": "JSend's implementation writen in Go."
        },
        {
          "href": "https://github.com/gsamokovarov/jump",
          "title": "jump",
          "description": "Jump helps you navigate faster by learning your habits."
        },
        {
          "href": "https://github.com/wesovilabs/koazee",
          "title": "koazee",
          "description": "Library inspired in Lazy evaluation and functional programming that takes the hassle out of working with arrays."
        },
        {
          "href": "https://github.com/mennanov/limiters",
          "title": "limiters",
          "description": "Rate limiters for distributed applications in Golang with configurable back-ends and distributed locks."
        },
        {
          "href": "https://github.com/jaschaephraim/lrserver",
          "title": "lrserver",
          "description": "LiveReload server for Go."
        },
        {
          "href": "https://github.com/minio/mc",
          "title": "mc",
          "description": "Minio Client provides minimal tools to work with Amazon S3 compatible cloud storage and filesystems."
        },
        {
          "href": "https://github.com/imdario/mergo",
          "title": "mergo",
          "description": "Helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements."
        },
        {
          "href": "https://github.com/zRedShift/mimemagic",
          "title": "mimemagic",
          "description": "Pure Go ultra performant MIME sniffing library/utility."
        },
        {
          "href": "https://github.com/aofei/mimesniffer",
          "title": "mimesniffer",
          "description": "A MIME type sniffer for Go."
        },
        {
          "href": "https://github.com/gabriel-vasile/mimetype",
          "title": "mimetype",
          "description": "Package for MIME type detection based on magic numbers."
        },
        {
          "href": "https://github.com/tdewolff/minify",
          "title": "minify",
          "description": "Fast minifiers for HTML, CSS, JS, XML, JSON and SVG file formats."
        },
        {
          "href": "https://github.com/icza/minquery",
          "title": "minquery",
          "description": "MongoDB / mgo.v2 query that supports efficient pagination (cursors to continue listing documents where we left off)."
        },
        {
          "href": "https://github.com/tj/mmake",
          "title": "mmake",
          "description": "Modern Make."
        },
        {
          "href": "https://github.com/StabbyCutyou/moldova",
          "title": "moldova",
          "description": "Utility for generating random data based on an input template."
        },
        {
          "href": "https://github.com/davrodpin/mole",
          "title": "mole",
          "description": "cli app to easily create ssh tunnels."
        },
        {
          "href": "https://github.com/linxGnu/mssqlx",
          "title": "mssqlx",
          "description": "Database client library, proxy for any master slave, master master structures. Lightweight and auto balancing in mind."
        },
        {
          "href": "https://github.com/VividCortex/multitick",
          "title": "multitick",
          "description": "Multiplexor for aligned tickers."
        },
        {
          "href": "https://github.com/inancgumus/myhttp",
          "title": "myhttp",
          "description": "Simple API to make HTTP GET requests with timeout support."
        },
        {
          "href": "https://github.com/xta/okrun",
          "title": "okrun",
          "description": "go run error steamroller."
        },
        {
          "href": "https://github.com/btnguyen2k/olaf",
          "title": "olaf",
          "description": "Twitter Snowflake implemented in Go."
        },
        {
          "href": "https://github.com/adelowo/onecache",
          "title": "onecache",
          "description": "Caching library with support for multiple backend stores (Redis, Memcached, filesystem etc)."
        },
        {
          "href": "https://github.com/maruel/panicparse",
          "title": "panicparse",
          "description": "Groups similar goroutines and colorizes stack dump."
        },
        {
          "href": "https://github.com/alexpantyukhin/go-pattern-match",
          "title": "pattern-match",
          "description": "Pattern matching libray."
        },
        {
          "href": "https://github.com/peco/peco",
          "title": "peco",
          "description": "Simplistic interactive filtering tool."
        },
        {
          "href": "https://github.com/arthurkushman/pgo",
          "title": "pgo",
          "description": "Convenient functions for PHP community."
        },
        {
          "href": "https://github.com/VividCortex/pm",
          "title": "pm",
          "description": "Process (i.e. goroutine) manager with an HTTP API."
        },
        {
          "href": "https://github.com/gotidy/ptr",
          "title": "ptr",
          "description": "Package that provide functions for simplified creation of pointers from constants of basic types."
        },
        {
          "href": "https://github.com/is5/r",
          "title": "r",
          "description": "Python-like range() experience for Go."
        },
        {
          "href": "https://github.com/zpatrick/rclient",
          "title": "rclient",
          "description": "Readable, flexible, simple-to-use client for REST APIs."
        },
        {
          "href": "https://github.com/tockins/realize",
          "title": "realize",
          "description": "Go build system with file watchers and live reload. Run, build and watch file changes with custom paths."
        },
        {
          "href": "https://github.com/ssgreg/repeat",
          "title": "repeat",
          "description": "Go implementation of different backoff strategies useful for retrying operations and heartbeating."
        },
        {
          "href": "https://github.com/mozillazg/request",
          "title": "request",
          "description": "Go HTTP Requests for Humans™."
        },
        {
          "href": "https://github.com/abo/rerate",
          "title": "rerate",
          "description": "Redis-based rate counter and rate limiter for Go."
        },
        {
          "href": "https://github.com/ivpusic/rerun",
          "title": "rerun",
          "description": "Recompiling and rerunning go apps when source changes."
        },
        {
          "href": "https://github.com/edermanoel94/rest-go",
          "title": "rest-go",
          "description": "A package that provide many helpful methods for working with rest api."
        },
        {
          "href": "https://github.com/kamilsk/retry",
          "title": "retry",
          "description": "The most advanced functional mechanism to perform actions repetitively until successful."
        },
        {
          "href": "https://github.com/percolate/retry",
          "title": "retry",
          "description": "A simple but highly configurable retry package for Go."
        },
        {
          "href": "https://github.com/thedevsaddam/retry",
          "title": "retry",
          "description": "Simple and easy retry mechanism package for Go."
        },
        {
          "href": "https://github.com/shafreeck/retry",
          "title": "retry",
          "description": "A pretty simple library to ensure your work to be done."
        },
        {
          "href": "https://github.com/rafaeljesus/retry-go",
          "title": "retry-go",
          "description": "Retrying made simple and easy for golang."
        },
        {
          "href": "https://github.com/VividCortex/robustly",
          "title": "robustly",
          "description": "Runs functions resiliently, catching and restarting panics."
        },
        {
          "href": "https://github.com/blockloop/scan",
          "title": "scan",
          "description": "Scan golang sql.Rows directly to structs, slices, or primitive types."
        },
        {
          "href": "https://github.com/syntaqx/serve",
          "title": "serve",
          "description": "A static http server anywhere you need."
        },
        {
          "href": "https://github.com/ztrue/shutdown",
          "title": "shutdown",
          "description": "App shutdown hooks for os.Signal handling."
        },
        {
          "href": "https://github.com/chrispassas/silk",
          "title": "silk",
          "description": "Read silk netflow files."
        },
        {
          "href": "https://github.com/psampaz/slice",
          "title": "slice",
          "description": "Type-safe functions for common Go slice operations."
        },
        {
          "href": "https://github.com/Henry-Sarabia/sliceconv",
          "title": "sliceconv",
          "description": "Slice conversion between primitive types."
        },
        {
          "href": "https://github.com/leaanthony/slicer",
          "title": "slicer",
          "description": "Makes working with slices easier."
        },
        {
          "href": "https://github.com/jfcg/sorty",
          "title": "sorty",
          "description": "Fast Concurrent / Parallel Sorting."
        },
        {
          "href": "https://github.com/briandowns/spinner",
          "title": "spinner",
          "description": "Go package to easily provide a terminal spinner with options."
        },
        {
          "href": "https://github.com/jmoiron/sqlx",
          "title": "sqlx",
          "description": "provides a set of extensions on top of the excellent built-in database/sql package."
        },
        {
          "href": "https://github.com/asdine/storm",
          "title": "Storm",
          "description": "Simple and powerful toolkit for BoltDB."
        },
        {
          "href": "https://github.com/PumpkinSeed/structs",
          "title": "structs",
          "description": "Implement simple functions to manipulate structs."
        },
        {
          "href": "https://github.com/go-task/task",
          "title": "Task",
          "description": "simple \"Make\" alternative."
        },
        {
          "href": "https://github.com/cyruzin/tome",
          "title": "tome",
          "description": "Tome was designed to paginate simple RESTful APIs."
        },
        {
          "href": "https://github.com/viant/toolbox",
          "title": "toolbox",
          "description": "Slice, map, multimap, struct, function, data conversion utilities. Service router, macro evaluator, tokenizer."
        },
        {
          "href": "https://github.com/alxrm/ugo",
          "title": "ugo",
          "description": "ugo is slice toolbox with concise syntax for Go."
        },
        {
          "href": "https://github.com/esemplastic/unis",
          "title": "UNIS",
          "description": "Common Architecture™ for String Utilities in Go."
        },
        {
          "href": "https://github.com/knq/usql",
          "title": "usql",
          "description": "usql is a universal command-line interface for SQL databases."
        },
        {
          "href": "https://github.com/shomali11/util",
          "title": "util",
          "description": "Collection of useful utility functions. (strings, concurrency, manipulations, ...)."
        },
        {
          "href": "https://github.com/asciimoo/wuzz",
          "title": "wuzz",
          "description": "Interactive cli tool for HTTP inspection."
        },
        {
          "href": "https://github.com/monmohan/xferspdy",
          "title": "xferspdy",
          "description": "Xferspdy provides binary diff and patch library in golang."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "UUID",
      "subtitle": "Libraries for working with UUIDs.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/jakehl/goid",
          "title": "goid",
          "description": "Generate and Parse RFC4122 compliant V4 UUIDs."
        },
        {
          "href": "https://github.com/aidarkhanov/nanoid",
          "title": "nanoid",
          "description": "A tiny and efficient Go unique string ID generator."
        },
        {
          "href": "https://github.com/muyo/sno",
          "title": "sno",
          "description": "Compact, sortable and fast unique IDs with embedded metadata."
        },
        {
          "href": "https://github.com/oklog/ulid",
          "title": "ulid",
          "description": "Go implementation of ULID (Universally Unique Lexicographically Sortable Identifier)."
        },
        {
          "href": "https://gitlab.com/skilstak/code/go/uniq",
          "title": "uniq",
          "description": "No hassle safe, fast unique identifiers with commands."
        },
        {
          "href": "https://github.com/agext/uuid",
          "title": "uuid",
          "description": "Generate, encode, and decode UUIDs v1 with fast or cryptographic-quality random node identifier."
        },
        {
          "href": "https://github.com/gofrs/uuid",
          "title": "uuid",
          "description": "Implementation of Universally Unique Identifier (UUID). Supports both creation and parsing of UUIDs. Actively maintained fork of satori uuid."
        },
        {
          "href": "https://github.com/edwingeng/wuid",
          "title": "wuid",
          "description": "An extremely fast unique number generator, 10-135 times faster than UUID."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Validation",
      "subtitle": "Libraries for validation.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/osamingo/checkdigit",
          "title": "checkdigit",
          "description": "Provide check digit algorithms (Luhn, Verhoeff, Damm) and calculators (ISBN, EAN, JAN, UPC, etc.)."
        },
        {
          "href": "https://github.com/guiferpa/gody",
          "title": "gody",
          "description": ":balloon: A lightweight struct validator for Go."
        },
        {
          "href": "https://github.com/twharmon/govalid",
          "title": "govalid",
          "description": "Fast, tag-based validation for structs."
        },
        {
          "href": "https://github.com/asaskevich/govalidator",
          "title": "govalidator",
          "description": "Validators and sanitizers for strings, numerics, slices and structs."
        },
        {
          "href": "https://github.com/thedevsaddam/govalidator",
          "title": "govalidator",
          "description": "Validate Golang request data with simple rules. Highly inspired by Laravel's request validation."
        },
        {
          "href": "https://github.com/faceair/jio",
          "title": "jio",
          "description": "jio is a json schema validator similar to joi ."
        },
        {
          "href": "https://github.com/go-ozzo/ozzo-validation",
          "title": "ozzo-validation",
          "description": "Supports validation of various data types (structs, strings, maps, slices, etc.) with configurable and extensible validation rules specified in usual code constructs instead of struct tags."
        },
        {
          "href": "https://github.com/thazelart/terraform-validator",
          "title": "terraform-validator",
          "description": "A norms and conventions validator for Terraform."
        },
        {
          "href": "https://github.com/gookit/validate",
          "title": "validate",
          "description": "Go package for data validation and filtering. support validate Map, Struct, Request(Form, JSON, url.Values, Uploaded Files) data and more features."
        },
        {
          "href": "https://github.com/gobuffalo/validate",
          "title": "validate",
          "description": "This package provides a framework for writing validations for Go applications."
        },
        {
          "href": "https://github.com/go-playground/validator",
          "title": "validator",
          "description": "Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Version Control",
      "subtitle": "Libraries for version control.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/rjeczalik/gh",
          "title": "gh",
          "description": "Scriptable server and net/http middleware for GitHub Webhooks."
        },
        {
          "href": "https://github.com/libgit2/git2go",
          "title": "git2go",
          "description": "Go bindings for libgit2."
        },
        {
          "href": "https://github.com/src-d/go-git",
          "title": "go-git",
          "description": "highly extensible Git implementation in pure Go."
        },
        {
          "href": "https://github.com/sourcegraph/go-vcs",
          "title": "go-vcs",
          "description": "manipulate and inspect VCS repositories in Go."
        },
        {
          "href": "https://github.com/src-d/hercules",
          "title": "hercules",
          "description": "gaining advanced insights from Git repository history."
        },
        {
          "href": "https://github.com/beyang/hgo",
          "title": "hgo",
          "description": "Hgo is a collection of Go packages providing read-access to local Mercurial repositories."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Video",
      "subtitle": "Libraries for manipulating video.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/3d0c/gmf",
          "title": "gmf",
          "description": "Go bindings for FFmpeg av* libraries."
        },
        {
          "href": "https://github.com/asticode/go-astisub",
          "title": "go-astisub",
          "description": "Manipulate subtitles in GO (.srt, .stl, .ttml, .webvtt, .ssa/.ass, teletext, .smi, etc.)."
        },
        {
          "href": "https://github.com/asticode/go-astits",
          "title": "go-astits",
          "description": "Parse and demux MPEG Transport Streams (.ts) natively in GO."
        },
        {
          "href": "https://github.com/quangngotan95/go-m3u8",
          "title": "go-m3u8",
          "description": "Parser and generator library for Apple m3u8 playlists."
        },
        {
          "href": "https://github.com/unki2aut/go-mpd",
          "title": "go-mpd",
          "description": "Parser and generator library for MPEG-DASH manifest files."
        },
        {
          "href": "https://github.com/giorgisio/goav",
          "title": "goav",
          "description": "Comphrensive Go bindings for FFmpeg."
        },
        {
          "href": "https://github.com/ziutek/gst",
          "title": "gst",
          "description": "Go bindings for GStreamer."
        },
        {
          "href": "https://github.com/wargarblgarbl/libgosubs",
          "title": "libgosubs",
          "description": "Subtitle format support for go. Supports .srt, .ttml, and .ass."
        },
        {
          "href": "https://github.com/adrg/libvlc-go",
          "title": "libvlc-go",
          "description": "Go bindings for libvlc 2.X/3.X/4.X (used by the VLC media player)."
        },
        {
          "href": "https://github.com/grafov/m3u8",
          "title": "m3u8",
          "description": "Parser and generator library of M3U8 playlists for Apple HLS."
        },
        {
          "href": "https://github.com/korandiz/v4l",
          "title": "v4l",
          "description": "Video capture library for Linux, written in Go."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Web Frameworks",
      "subtitle": "Full stack web frameworks.",
      "subsections": [
        {
          "title": "Middlewares",
          "subsections": [],
          "links": [
            {
              "href": "https://github.com/posener/client-timing",
              "title": "client-timing",
              "description": "An HTTP client for Server-Timing header."
            },
            {
              "href": "https://github.com/rs/cors",
              "title": "CORS",
              "description": "Easily add CORS capabilities to your API."
            },
            {
              "href": "https://github.com/rs/formjson",
              "title": "formjson",
              "description": "Transparently handle JSON input as a standard form POST."
            },
            {
              "href": "https://github.com/mitchellh/go-server-timing",
              "title": "go-server-timing",
              "description": "Add/parse Server-Timing header."
            },
            {
              "href": "https://github.com/ulule/limiter",
              "title": "Limiter",
              "description": "Dead simple rate limit middleware for Go."
            },
            {
              "href": "https://github.com/philippgille/ln-paywall",
              "title": "ln-paywall",
              "description": "Go middleware for monetizing APIs on a per-request basis with the Lightning Network (Bitcoin)."
            },
            {
              "href": "https://github.com/didip/tollbooth",
              "title": "Tollbooth",
              "description": "Rate limit HTTP request handler."
            },
            {
              "href": "https://github.com/sebest/xff",
              "title": "XFF",
              "description": "Handle X-Forwarded-For header and friends."
            },
            {
              "href": "https://github.com/justinas/alice",
              "title": "alice",
              "description": "Painless middleware chaining for Go."
            },
            {
              "href": "https://github.com/codemodus/catena",
              "title": "catena",
              "description": "http.Handler wrapper catenation (same API as \"chain\")."
            },
            {
              "href": "https://github.com/codemodus/chain",
              "title": "chain",
              "description": "Handler wrapper chaining with scoped data (net/context-based \"middleware\")."
            },
            {
              "href": "https://github.com/go-on/wrap",
              "title": "go-wrap",
              "description": "Small middlewares package for net/http."
            },
            {
              "href": "https://github.com/alioygur/gores",
              "title": "gores",
              "description": "Go package that handles HTML, JSON, XML and etc. responses. Useful for RESTful APIs."
            },
            {
              "href": "https://github.com/carbocation/interpose",
              "title": "interpose",
              "description": "Minimalist net/http middleware for golang."
            },
            {
              "href": "https://github.com/stephens2424/muxchain",
              "title": "muxchain",
              "description": "Lightweight middleware for net/http."
            },
            {
              "href": "https://github.com/urfave/negroni",
              "title": "negroni",
              "description": "Idiomatic HTTP middleware for Golang."
            },
            {
              "href": "https://github.com/unrolled/render",
              "title": "render",
              "description": "Go package for easily rendering JSON, XML, and HTML template responses."
            },
            {
              "href": "https://github.com/thedevsaddam/renderer",
              "title": "renderer",
              "description": "Simple, lightweight and faster response (JSON, JSONP, XML, YAML, HTML, File) rendering package for Go."
            },
            {
              "href": "https://github.com/InVisionApp/rye",
              "title": "rye",
              "description": "Tiny Go middleware library (with canned Middlewares) that supports JWT, CORS, Statsd, and Go 1.7 context."
            },
            {
              "href": "https://github.com/thoas/stats",
              "title": "stats",
              "description": "Go middleware that stores various information about your web application."
            }
          ]
        },
        {
          "title": "Routers",
          "subsections": [],
          "links": [
            {
              "href": "https://github.com/gernest/alien",
              "title": "alien",
              "description": "Lightweight and fast http router from outer space."
            },
            {
              "href": "https://github.com/GuilhermeCaruso/bellt",
              "title": "bellt",
              "description": "A simple Go HTTP router."
            },
            {
              "href": "https://github.com/go-zoo/bone",
              "title": "Bone",
              "description": "Lightning Fast HTTP Multiplexer."
            },
            {
              "href": "https://github.com/claygod/Bxog",
              "title": "Bxog",
              "description": "Simple and fast HTTP router for Go. It works with routes of varying difficulty, length and nesting. And he knows how to create a URL from the received parameters."
            },
            {
              "href": "https://github.com/go-chi/chi",
              "title": "chi",
              "description": "Small, fast and expressive HTTP router built on net/context."
            },
            {
              "href": "https://github.com/buaazp/fasthttprouter",
              "title": "fasthttprouter",
              "description": "High performance router forked from httprouter . The first router fit for fasthttp ."
            },
            {
              "href": "https://github.com/razonyang/fastrouter",
              "title": "FastRouter",
              "description": "a fast, flexible HTTP router written in Go."
            },
            {
              "href": "https://github.com/gocraft/web",
              "title": "gocraft/web",
              "description": "Mux and middleware package in Go."
            },
            {
              "href": "https://github.com/goji/goji",
              "title": "Goji",
              "description": "Goji is a minimalistic and flexible HTTP request multiplexer with support for net/context ."
            },
            {
              "href": "https://github.com/goroute/route",
              "title": "goroute",
              "description": "Simple yet powerful HTTP request multiplexer."
            },
            {
              "href": "https://github.com/vardius/gorouter",
              "title": "GoRouter",
              "description": "GoRouter is a Server/API micro framwework, HTTP request router, multiplexer, mux that provides request router with middleware supporting net/context ."
            },
            {
              "href": "https://github.com/gowww/router",
              "title": "gowww/router",
              "description": "Lightning fast HTTP router fully compatible with the net/http.Handler interface."
            },
            {
              "href": "https://github.com/julienschmidt/httprouter",
              "title": "httprouter",
              "description": "High performance router. Use this and the standard http handlers to form a very high performance web framework."
            },
            {
              "href": "https://github.com/dimfeld/httptreemux",
              "title": "httptreemux",
              "description": "High-speed, flexible tree-based HTTP router for Go. Inspiration from httprouter."
            },
            {
              "href": "https://github.com/go-playground/lars",
              "title": "lars",
              "description": "Is a lightweight, fast and extensible zero allocation HTTP router for Go used to create customizable frameworks."
            },
            {
              "href": "https://github.com/gorilla/mux",
              "title": "mux",
              "description": "Powerful URL router and dispatcher for golang."
            },
            {
              "href": "https://github.com/go-ozzo/ozzo-routing",
              "title": "ozzo-routing",
              "description": "An extremely fast Go (golang) HTTP router that supports regular expression route matching. Comes with full support for building RESTful APIs."
            },
            {
              "href": "https://github.com/go-playground/pure",
              "title": "pure",
              "description": "Is a lightweight HTTP router that sticks to the std \"net/http\" implementation."
            },
            {
              "href": "https://github.com/VividCortex/siesta",
              "title": "Siesta",
              "description": "Composable framework to write middleware and handlers."
            },
            {
              "href": "https://github.com/husobee/vestigo",
              "title": "vestigo",
              "description": "Performant, stand-alone, HTTP compliant URL Router for go web applications."
            },
            {
              "href": "https://github.com/nbari/violetear",
              "title": "violetear",
              "description": "Go HTTP router."
            },
            {
              "href": "https://github.com/rs/xmux",
              "title": "xmux",
              "description": "High performance muxer based on httprouter with net/context support."
            },
            {
              "href": "https://github.com/xujiajun/gorouter",
              "title": "xujiajun/gorouter",
              "description": "A simple and fast HTTP router for Go."
            }
          ]
        }
      ],
      "links": [
        {
          "href": "https://aahframework.org",
          "title": "aah",
          "description": "Scalable, performant, rapid development Web framework for Go."
        },
        {
          "href": "https://github.com/aerogo/aero",
          "title": "Aero",
          "description": "High-performance web framework for Go, reaches top scores in Lighthouse."
        },
        {
          "href": "https://github.com/aofei/air",
          "title": "Air",
          "description": "An ideally refined web framework for Go."
        },
        {
          "href": "https://github.com/appist/appy",
          "title": "appy",
          "description": "An opinionated productive web framework that helps scaling business easier."
        },
        {
          "href": "https://github.com/nsheremet/banjo",
          "title": "Banjo",
          "description": "Very simple and fast web framework for Go."
        },
        {
          "href": "https://github.com/astaxie/beego",
          "title": "Beego",
          "description": "beego is an open-source, high-performance web framework for the Go programming language."
        },
        {
          "href": "http://gobuffalo.io",
          "title": "Buffalo",
          "description": "Bringing the productivity of Rails to Go!"
        },
        {
          "href": "https://github.com/labstack/echo",
          "title": "Echo",
          "description": "High performance, minimalist Go web framework."
        },
        {
          "href": "https://github.com/gofiber/fiber",
          "title": "Fiber",
          "description": "An Express.js inspired web framework build on Fasthttp."
        },
        {
          "href": "https://github.com/zpatrick/fireball",
          "title": "Fireball",
          "description": "More \"natural\" feeling web framework."
        },
        {
          "href": "https://github.com/i-love-flamingo/flamingo",
          "title": "Flamingo",
          "description": "Framework for pluggable web projects. Including a concept for modules and offering features for DI, Configareas, i18n, template engines, graphql, observability, security, events, routing & reverse routing etc."
        },
        {
          "href": "https://github.com/i-love-flamingo/flamingo-commerce",
          "title": "Flamingo Commerce",
          "description": "Providing e-commerce features using clean architecture like DDD and ports and adapters, that you can use to build flexible e-commerce applications."
        },
        {
          "href": "https://github.com/gin-gonic/gin",
          "title": "Gin",
          "description": "Gin is a web framework written in Go! It features a martini-like API with much better performance, up to 40 times faster. If you need performance and good productivity."
        },
        {
          "href": "https://github.com/xxjwxc/ginrpc",
          "title": "Ginrpc",
          "description": "Gin parameter automatic binding tool,gin rpc tools."
        },
        {
          "href": "https://github.com/NYTimes/gizmo",
          "title": "Gizmo",
          "description": "Microservice toolkit used by the New York Times."
        },
        {
          "href": "https://github.com/ant0ine/go-json-rest",
          "title": "go-json-rest",
          "description": "Quick and easy way to setup a RESTful JSON API."
        },
        {
          "href": "https://github.com/ungerik/go-rest",
          "title": "go-rest",
          "description": "Small and evil REST framework for Go."
        },
        {
          "href": "https://github.com/goadesign/goa",
          "title": "Goa",
          "description": "Goa provides a holistic approach for developing remote APIs and microservices in Go."
        },
        {
          "href": "https://github.com/goa-go/goa",
          "title": "goa",
          "description": "goa is just like koajs for golang, it is a flexible, light, high-performance and extensible web framework based on middleware."
        },
        {
          "href": "https://github.com/fulldump/golax",
          "title": "Golax",
          "description": "A non Sinatra fast HTTP framework with support for Google custom methods, deep interceptors, recursion and more."
        },
        {
          "href": "https://github.com/dinever/golf",
          "title": "Golf",
          "description": "Golf is a fast, simple and lightweight micro-web framework for Go. It comes with powerful features and has no dependencies other than the Go Standard Library."
        },
        {
          "href": "https://github.com/rainycape/gondola",
          "title": "Gondola",
          "description": "The web framework for writing faster sites, faster."
        },
        {
          "href": "https://github.com/mustafaakin/gongular",
          "title": "gongular",
          "description": "Fast Go web framework with input mapping/validation and (DI) Dependency Injection."
        },
        {
          "href": "https://github.com/twharmon/goweb",
          "title": "goweb",
          "description": "Web framework with routing, websockets, logging, middleware, static file server (optional gzip), and automatic TLS."
        },
        {
          "href": "https://github.com/System-Glitch/goyave",
          "title": "Goyave",
          "description": "Feature-complete web framework aimed at clean code and fast development, with powerful built-in functionalities."
        },
        {
          "href": "https://github.com/hidevopsio/hiboot",
          "title": "hiboot",
          "description": "hiboot is a high performance web application framework with auto configuration and dependency injection support."
        },
        {
          "href": "https://github.com/go-macaron/macaron",
          "title": "Macaron",
          "description": "Macaron is a high productive and modular design web framework in Go."
        },
        {
          "href": "https://github.com/paulbellamy/mango",
          "title": "mango",
          "description": "Mango is a modular web-application framework for Go, inspired by Rack, and PEP333."
        },
        {
          "href": "https://github.com/claygod/microservice",
          "title": "Microservice",
          "description": "The framework for the creation of microservices, written in Golang."
        },
        {
          "href": "https://github.com/ivpusic/neo",
          "title": "neo",
          "description": "Neo is minimal and fast Go Web Framework with extremely simple API."
        },
        {
          "href": "https://github.com/beatlabs/patron",
          "title": "patron",
          "description": "Patron is a microservice framework following best cloud practices with a focus on productivity."
        },
        {
          "href": "https://github.com/resoursea/api",
          "title": "Resoursea",
          "description": "REST framework for quickly writing resource based services."
        },
        {
          "href": "http://rest-layer.io",
          "title": "REST Layer",
          "description": "Framework to build REST/GraphQL API on top of databases with mostly configuration over code."
        },
        {
          "href": "https://github.com/revel/revel",
          "title": "Revel",
          "description": "High-productivity web framework for the Go language."
        },
        {
          "href": "https://github.com/goanywhere/rex",
          "title": "rex",
          "description": "Rex is a library for modular development built upon gorilla/mux, fully compatible with net/http ."
        },
        {
          "href": "https://github.com/gookit/rux",
          "title": "rux",
          "description": "Simple and fast web framework for build golang HTTP applications."
        },
        {
          "href": "https://github.com/lunny/tango",
          "title": "tango",
          "description": "Micro & pluggable web framework for Go."
        },
        {
          "href": "https://github.com/rcrowley/go-tigertonic",
          "title": "tigertonic",
          "description": "Go framework for building JSON web services inspired by Dropwizard."
        },
        {
          "href": "https://github.com/uadmin/uadmin",
          "title": "uAdmin",
          "description": "Fully featured web framework for Golang, inspired by Django."
        },
        {
          "href": "https://github.com/gernest/utron",
          "title": "utron",
          "description": "Lightweight MVC framework for Go(Golang)."
        },
        {
          "href": "https://github.com/aisk/vox",
          "title": "vox",
          "description": "A golang web framework for humans, inspired by Koa heavily."
        },
        {
          "href": "https://github.com/bnkamalesh/webgo",
          "title": "WebGo",
          "description": "A micro-framework to build web apps; with handler chaining, middleware and context injection. With standard library compliant HTTP handlers(i.e. http.HandlerFunc)."
        },
        {
          "href": "https://github.com/yarf-framework/yarf",
          "title": "YARF",
          "description": "Fast micro-framework designed to build REST APIs and web services in a fast and simple way."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "Windows",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/gonutz/d3d9",
          "title": "d3d9",
          "description": "Go bindings for Direct3D9."
        },
        {
          "href": "https://github.com/go-ole/go-ole",
          "title": "go-ole",
          "description": "Win32 OLE implementation for golang."
        },
        {
          "href": "https://github.com/MonaxGT/gosddl",
          "title": "gosddl",
          "description": "Converter from SDDL-string to user-friendly JSON. SDDL consist of four part: Owner, Primary Group, DACL, SACL."
        }
      ]
    },
    {
      "group": "Awesome Go",
      "title": "XML",
      "subtitle": "Libraries and tools for manipulating XML.",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/xml-comp/xml-comp",
          "title": "XML-Comp",
          "description": "Simple command line XML comparer that generates diffs of folders, files and tags."
        },
        {
          "href": "https://github.com/sbabiv/xml2map",
          "title": "xml2map",
          "description": "XML to MAP converter written Golang."
        },
        {
          "href": "https://github.com/shabbyrobe/xmlwriter",
          "title": "xmlwriter",
          "description": "Procedural XML generation API based on libxml2's xmlwriter module."
        },
        {
          "href": "https://github.com/antchfx/xpath",
          "title": "xpath",
          "description": "XPath package for Go."
        },
        {
          "href": "https://github.com/antchfx/xquery",
          "title": "xquery",
          "description": "XQuery lets you extract data from HTML/XML documents using XPath expression."
        },
        {
          "href": "https://github.com/miku/zek",
          "title": "zek",
          "description": "Generate a Go struct from XML."
        }
      ]
    },
    {
      "group": "Tools",
      "title": "Code Analysis",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/bradleyfalzon/apicompat",
          "title": "apicompat",
          "description": "Checks recent changes to a Go project for backwards incompatible changes."
        },
        {
          "href": "https://github.com/mibk/dupl",
          "title": "dupl",
          "description": "Tool for code clone detection."
        },
        {
          "href": "https://github.com/kisielk/errcheck",
          "title": "errcheck",
          "description": "Errcheck is a program for checking for unchecked errors in Go programs."
        },
        {
          "href": "https://github.com/davecheney/gcvis",
          "title": "gcvis",
          "description": "Visualise Go program GC trace data in real time."
        },
        {
          "href": "https://github.com/qiniu/checkstyle",
          "title": "go-checkstyle",
          "description": "checkstyle is a style check tool like java checkstyle. This tool inspired by java checkstyle, golint. The style referred to some points in Go Code Review Comments."
        },
        {
          "href": "https://github.com/roblaszczak/go-cleanarch",
          "title": "go-cleanarch",
          "description": "go-cleanarch was created to validate Clean Architecture rules, like a The Dependency Rule and interaction between packages in your Go projects."
        },
        {
          "href": "https://github.com/go-critic/go-critic",
          "title": "go-critic",
          "description": "source code linter that brings checks that are currently not implemented in other linters."
        },
        {
          "href": "https://github.com/psampaz/go-mod-outdated",
          "title": "go-mod-outdated",
          "description": "An easy way to find outdated dependencies of your Go projects."
        },
        {
          "href": "https://github.com/firstrow/go-outdated",
          "title": "go-outdated",
          "description": "Console application that displays outdated packages."
        },
        {
          "href": "https://github.com/yuroyoro/goast-viewer",
          "title": "goast-viewer",
          "description": "Web based Golang AST visualizer."
        },
        {
          "href": "http://gocover.io/",
          "title": "GoCover.io",
          "description": "GoCover.io offers the code coverage of any golang package as a service."
        },
        {
          "href": "https://godoc.org/golang.org/x/tools/cmd/goimports",
          "title": "goimports",
          "description": "Tool to fix (add, remove) your Go imports automatically."
        },
        {
          "href": "https://golangci.com/",
          "title": "GolangCI",
          "description": "GolangCI is an automated Golang code review service for GitHub pull requests. Service is open source and it's free for open source projects."
        },
        {
          "href": "https://github.com/segmentio/golines",
          "title": "golines",
          "description": "Formatter that automatically shortens long lines in Go code."
        },
        {
          "href": "https://github.com/golang/lint",
          "title": "GoLint",
          "description": "Golint is a linter for Go source code."
        },
        {
          "href": "http://go-lint.appspot.com/",
          "title": "Golint online",
          "description": "Lints online Go source files on GitHub, Bitbucket and Google Project Hosting using the golint package."
        },
        {
          "href": "https://github.com/jfeliu007/goplantuml",
          "title": "GoPlantUML",
          "description": "Library and CLI that generates text plantump class diagram containing information about structures and interfaces with the relationship among them."
        },
        {
          "href": "https://sourcegraph.com/github.com/sqs/goreturns",
          "title": "goreturns",
          "description": "Adds zero-value return statements to match the func return types."
        },
        {
          "href": "https://github.com/dominikh/go-tools/tree/master/cmd/gosimple",
          "title": "gosimple",
          "description": "gosimple is a linter for Go source code that specialises on simplifying code."
        },
        {
          "href": "https://github.com/shurcooL/gostatus",
          "title": "gostatus",
          "description": "Command line tool, shows the status of repositories that contain Go packages."
        },
        {
          "href": "https://github.com/surullabs/lint",
          "title": "lint",
          "description": "Run linters as part of go test."
        },
        {
          "href": "https://github.com/z7zmey/php-parser",
          "title": "php-parser",
          "description": "A Parser for PHP written in Go."
        },
        {
          "href": "https://github.com/dominikh/go-tools/tree/master/cmd/staticcheck",
          "title": "staticcheck",
          "description": "staticcheck is go vet on steroids, applying a ton of static analysis checks you might be used to from tools like ReSharper for C#."
        },
        {
          "href": "https://github.com/verygoodsoftwarenotvirus/tarp",
          "title": "tarp",
          "description": "tarp finds functions and methods without direct unit tests in Go source code."
        },
        {
          "href": "https://github.com/augmentable-dev/tickgit",
          "title": "tickgit",
          "description": "CLI and go package for surfacing code comment TODOs (in any language) and applying a git blame to identify the author."
        },
        {
          "href": "https://github.com/mdempsky/unconvert",
          "title": "unconvert",
          "description": "Remove unnecessary type conversions from Go source."
        },
        {
          "href": "https://github.com/dominikh/go-tools/tree/master/cmd/unused",
          "title": "unused",
          "description": "unused checks Go code for unused constants, variables, functions and types."
        },
        {
          "href": "https://github.com/mccoyst/validate",
          "title": "validate",
          "description": "Automatically validates struct fields with tags."
        }
      ]
    },
    {
      "group": "Tools",
      "title": "Editor Plugins",
      "subsections": [],
      "links": [
        {
          "href": "https://plugins.jetbrains.com/plugin/9568-go",
          "title": "Go plugin for JetBrains IDEs",
          "description": "Go plugin for JetBrains IDEs."
        },
        {
          "href": "https://github.com/theia-ide/go-language-server",
          "title": "go-language-server",
          "description": "A wrapper to turn the VSCode go extension into a language server supporting the language-server-protocol."
        },
        {
          "href": "https://github.com/dominikh/go-mode.el",
          "title": "go-mode",
          "description": "Go mode for GNU/Emacs."
        },
        {
          "href": "https://github.com/joefitzgerald/go-plus",
          "title": "go-plus",
          "description": "Go (Golang) Package For Atom That Adds Autocomplete, Formatting, Syntax Checking, Linting and Vetting."
        },
        {
          "href": "https://github.com/nsf/gocode",
          "title": "gocode",
          "description": "Autocompletion daemon for the Go programming language."
        },
        {
          "href": "https://marketplace.visualstudio.com/items?itemName=MaxMedia.go-prof",
          "title": "goprofiling",
          "description": "This extension adds benchmark profiling support for the Go language to VS Code."
        },
        {
          "href": "https://github.com/DisposaBoy/GoSublime",
          "title": "GoSublime",
          "description": "Golang plugin collection for the text editor SublimeText 3 providing code completion and other IDE-like features."
        },
        {
          "href": "https://github.com/hexdigest/gounit-vim",
          "title": "gounit-vim",
          "description": "Vim plugin for generating Go tests based on the function's or method's signature."
        },
        {
          "href": "https://github.com/theia-ide/theia-go-extension",
          "title": "theia-go-extension",
          "description": "Go language support for the Theia IDE."
        },
        {
          "href": "https://github.com/rjohnsondev/vim-compiler-go",
          "title": "vim-compiler-go",
          "description": "Vim plugin to highlight syntax errors on save."
        },
        {
          "href": "https://github.com/fatih/vim-go",
          "title": "vim-go",
          "description": "Go development plugin for Vim."
        },
        {
          "href": "https://github.com/Microsoft/vscode-go",
          "title": "vscode-go",
          "description": "Extension for Visual Studio Code (VS Code) which provides support for the Go language."
        },
        {
          "href": "https://github.com/eaburns/Watch",
          "title": "Watch",
          "description": "Runs a command in an acme win on file changes."
        }
      ]
    },
    {
      "group": "Tools",
      "title": "Go Generate Tools",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/usk81/generic",
          "title": "generic",
          "description": "flexible data type for Go."
        },
        {
          "href": "https://github.com/cheekybits/genny",
          "title": "genny",
          "description": "Elegant generics for Go."
        },
        {
          "href": "https://github.com/Parquery/gocontracts",
          "title": "gocontracts",
          "description": "brings design-by-contract to Go by synchronizing the code with the documentation."
        },
        {
          "href": "http://github.com/bouk/gonerics",
          "title": "gonerics",
          "description": "Idiomatic Generics in Go."
        },
        {
          "href": "https://github.com/cweill/gotests",
          "title": "gotests",
          "description": "Generate Go tests from your source code."
        },
        {
          "href": "https://github.com/hexdigest/gounit",
          "title": "gounit",
          "description": "Generate Go tests using your own templates."
        },
        {
          "href": "https://github.com/DylanMeeus/hasgo",
          "title": "hasgo",
          "description": "Generate Haskell inspired functions for your slices."
        },
        {
          "href": "https://github.com/opennota/re2dfa",
          "title": "re2dfa",
          "description": "Transform regular expressions into finite state machines and output Go source code."
        },
        {
          "href": "https://xuri.me/toml-to-go",
          "title": "TOML-to-Go",
          "description": "Translates TOML into a Go type in the browser instantly."
        },
        {
          "href": "https://github.com/xuri/xgen",
          "title": "xgen",
          "description": "XSD (XML Schema Definition) parser and Go/C/Java/Rust/TypeScript code generator."
        }
      ]
    },
    {
      "group": "Tools",
      "title": "Go Tools",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/songgao/colorgo",
          "title": "colorgo",
          "description": "Wrapper around go command for colorized go build output."
        },
        {
          "href": "https://github.com/KyleBanks/depth",
          "title": "depth",
          "description": "Visualize dependency trees of any package by analyzing imports."
        },
        {
          "href": "https://getgb.io/",
          "title": "gb",
          "description": "An easy to use project based build tool for the Go programming language."
        },
        {
          "href": "https://github.com/axelspringer/generator-go-lang",
          "title": "generator-go-lang",
          "description": "A Yeoman generator to get new Go projects started."
        },
        {
          "href": "https://go-gilbert.github.io",
          "title": "gilbert",
          "description": "Build system and task runner for Go projects."
        },
        {
          "href": "https://github.com/TrueFurby/go-callvis",
          "title": "go-callvis",
          "description": "Visualize call graph of your Go program using dot format."
        },
        {
          "href": "https://github.com/pieterclaerhout/go-james",
          "title": "go-james",
          "description": "Go project skeleton creator, builds and tests your projects without the manual setup."
        },
        {
          "href": "https://github.com/skelterjohn/go-pkg-complete",
          "title": "go-pkg-complete",
          "description": "Bash completion for go and wgo."
        },
        {
          "href": "https://github.com/go-swagger/go-swagger",
          "title": "go-swagger",
          "description": "Swagger 2.0 implementation for go. Swagger is a simple yet powerful representation of your RESTful API."
        },
        {
          "href": "https://github.com/tylerwince/godbg",
          "title": "godbg",
          "description": "Implementation of Rusts dbg! macro for quick and easy debugging during development."
        },
        {
          "href": "https://github.com/dustinblackman/gomodrun/",
          "title": "gomodrun",
          "description": "Go tool that executes and caches binaries included in go.mod files."
        },
        {
          "href": "https://github.com/psampaz/gothanks",
          "title": "gothanks",
          "description": "GoThanks automatically stars your go.mod github dependencies, sending this way some love to their maintainers."
        },
        {
          "href": "https://github.com/OctoLinker/browser-extension",
          "title": "OctoLinker",
          "description": "Navigate through go files efficiently with the OctoLinker browser extension for GitHub."
        },
        {
          "href": "https://github.com/kyoh86/richgo",
          "title": "richgo",
          "description": "Enrich go test outputs with text decorations."
        },
        {
          "href": "https://github.com/galeone/rts",
          "title": "rts",
          "description": "RTS: response to struct. Generates Go structs from server responses."
        }
      ]
    },
    {
      "group": "Tools",
      "title": "Software Packages",
      "subtitle": "Software written in Go.",
      "subsections": [
        {
          "title": "DevOps Tools",
          "subsections": [],
          "links": [
            {
              "href": "https://github.com/smira/aptly",
              "title": "aptly",
              "description": "aptly is a Debian repository management tool."
            },
            {
              "href": "https://github.com/xuri/aurora",
              "title": "aurora",
              "description": "Cross-platform web-based Beanstalkd queue server console."
            },
            {
              "href": "https://github.com/soniah/awsenv",
              "title": "awsenv",
              "description": "Small binary that loads Amazon (AWS) environment variables for a profile."
            },
            {
              "href": "https://github.com/dave/blast",
              "title": "Blast",
              "description": "A simple tool for API load testing and batch jobs."
            },
            {
              "href": "https://github.com/codesenberg/bombardier",
              "title": "bombardier",
              "description": "Fast cross-platform HTTP benchmarking tool."
            },
            {
              "href": "https://github.com/bosun-monitor/bosun",
              "title": "bosun",
              "description": "Time Series Alerting Framework."
            },
            {
              "href": "https://github.com/centerorbit/depcharge",
              "title": "DepCharge",
              "description": "Helps orchestrating the execution of commands across the many dependencies in larger projects."
            },
            {
              "href": "https://github.com/ozankasikci/dockerfile-generator",
              "title": "Dockerfile-Generator",
              "description": "A go library and an executable that produces valid Dockerfiles using various input channels."
            },
            {
              "href": "https://github.com/liudng/dogo",
              "title": "dogo",
              "description": "Monitoring changes in the source file and automatically compile and run (restart)."
            },
            {
              "href": "https://github.com/appleboy/drone-jenkins",
              "title": "drone-jenkins",
              "description": "Trigger downstream Jenkins jobs using a binary, docker or Drone CI."
            },
            {
              "href": "https://github.com/appleboy/drone-scp",
              "title": "drone-scp",
              "description": "Copy files and artifacts via SSH using a binary, docker or Drone CI."
            },
            {
              "href": "https://github.com/chrismckenzie/dropship",
              "title": "Dropship",
              "description": "Tool for deploying code via cdn."
            },
            {
              "href": "https://github.com/appleboy/easyssh-proxy",
              "title": "easyssh-proxy",
              "description": "Golang package for easy remote execution through SSH and SCP downloading via ProxyCommand ."
            },
            {
              "href": "https://github.com/mkchoi212/fac",
              "title": "fac",
              "description": "Command-line user interface to fix git merge conflicts."
            },
            {
              "href": "https://github.com/gaia-pipeline/gaia",
              "title": "gaia",
              "description": "Build powerful pipelines in any programming language."
            },
            {
              "href": "https://github.com/go-gitea/gitea",
              "title": "Gitea",
              "description": "Fork of Gogs, entirely community driven."
            },
            {
              "href": "https://git.jonasfranz.software/JonasFranzDEV/gitea-github-migrator",
              "title": "gitea-github-migrator",
              "description": "Migrate all your GitHub repositories, issues, milestones and labels to your Gitea instance."
            },
            {
              "href": "https://github.com/go-furnace/go-furnace",
              "title": "go-furnace",
              "description": "Hosting solution written in Go. Deploy your Application with ease on AWS, GCP or DigitalOcean."
            },
            {
              "href": "https://github.com/sanbornm/go-selfupdate",
              "title": "go-selfupdate",
              "description": "Enable your Go applications to self update."
            },
            {
              "href": "https://github.com/cryptojuice/gobrew",
              "title": "gobrew",
              "description": "gobrew lets you easily switch between multiple versions of go."
            },
            {
              "href": "https://github.com/sirnewton01/godbg",
              "title": "godbg",
              "description": "Web-based gdb front-end application."
            },
            {
              "href": "https://gogs.io/",
              "title": "Gogs",
              "description": "A Self Hosted Git Service in the Go Programming Language."
            },
            {
              "href": "https://github.com/inconshreveable/gonative",
              "title": "gonative",
              "description": "Tool which creates a build of Go that can cross compile to all platforms while still using the Cgo-enabled versions of the stdlib packages."
            },
            {
              "href": "https://github.com/ahmetalpbalkan/govvv",
              "title": "govvv",
              "description": "“go build” wrapper to easily add version information into Go binaries."
            },
            {
              "href": "https://github.com/mitchellh/gox",
              "title": "gox",
              "description": "Dead simple, no frills Go cross compile tool."
            },
            {
              "href": "https://github.com/laher/goxc",
              "title": "goxc",
              "description": "build tool for Go, with a focus on cross-compiling and packaging."
            },
            {
              "href": "https://github.com/yaronsumel/grapes",
              "title": "grapes",
              "description": "Lightweight tool designed to distribute commands over ssh with ease."
            },
            {
              "href": "https://github.com/moovweb/gvm",
              "title": "GVM",
              "description": "GVM provides an interface to manage Go versions."
            },
            {
              "href": "https://github.com/rakyll/hey",
              "title": "Hey",
              "description": "Hey is a tiny program that sends some load to a web application."
            },
            {
              "href": "https://github.com/jenkins-zh/jenkins-cli",
              "title": "jcli",
              "description": "Jenkins CLI allows you manage your Jenkins as an easy way."
            },
            {
              "href": "https://github.com/ajvb/kala",
              "title": "kala",
              "description": "Simplistic, modern, and performant job scheduler."
            },
            {
              "href": "https://github.com/cswank/kcli",
              "title": "kcli",
              "description": "Command line tool for inspecting kafka topics/partitions/messages."
            },
            {
              "href": "https://github.com/kubernetes/kubernetes",
              "title": "kubernetes",
              "description": "Container Cluster Manager from Google."
            },
            {
              "href": "https://github.com/ivanilves/lstags",
              "title": "lstags",
              "description": "Tool and API to sync Docker images across different registries."
            },
            {
              "href": "https://github.com/timdp/lwc",
              "title": "lwc",
              "description": "A live-updating version of the UNIX wc command."
            },
            {
              "href": "https://github.com/xwjdsh/manssh",
              "title": "manssh",
              "description": "manssh is a command line tool for managing your ssh alias config easily."
            },
            {
              "href": "https://github.com/moby/moby",
              "title": "Moby",
              "description": "Collaborative project for the container ecosystem to assemble container-based systems."
            },
            {
              "href": "https://github.com/emicklei/mora",
              "title": "Mora",
              "description": "REST server for accessing MongoDB documents and meta data."
            },
            {
              "href": "https://github.com/ostrost/ostent",
              "title": "ostent",
              "description": "collects and displays system metrics and optionally relays to Graphite and/or InfluxDB."
            },
            {
              "href": "https://github.com/mitchellh/packer",
              "title": "Packer",
              "description": "Packer is a tool for creating identical machine images for multiple platforms from a single source configuration."
            },
            {
              "href": "https://github.com/bengadbois/pewpew",
              "title": "Pewpew",
              "description": "Flexible HTTP command line stress tester."
            },
            {
              "href": "https://github.com/pomerium/pomerium",
              "title": "Pomerium",
              "description": "Pomerium is an identity-aware access proxy."
            },
            {
              "href": "https://github.com/alouche/rodent",
              "title": "Rodent",
              "description": "Rodent helps you manage Go versions, projects and track dependencies."
            },
            {
              "href": "https://github.com/oxyno-zeta/s3-proxy",
              "title": "s3-proxy",
              "description": "S3 Proxy with GET, PUT and DELETE methods and authentication (OpenID Connect and Basic Auth)."
            },
            {
              "href": "https://github.com/rlmcpherson/s3gof3r",
              "title": "s3gof3r",
              "description": "Small utility/library optimized for high speed transfer of large objects into and out of Amazon S3."
            },
            {
              "href": "https://github.com/scaleway/scaleway-cli",
              "title": "Scaleway-cli",
              "description": "Manage BareMetal Servers from Command Line (as easily as with Docker)."
            },
            {
              "href": "https://github.com/bitfield/script",
              "title": "script",
              "description": "Making it easy to write shell-like scripts in Go for DevOps and system administration tasks."
            },
            {
              "href": "https://github.com/ChristopherRabotin/sg",
              "title": "sg",
              "description": "Benchmarks a set of HTTP endpoints (like ab), with possibility to use the response code and data between each call for specific server stress based on its previous response."
            },
            {
              "href": "https://github.com/TimothyYe/skm",
              "title": "skm",
              "description": "SKM is a simple and powerful SSH Keys Manager, it helps you to manage your multiple SSH keys easily!"
            },
            {
              "href": "https://github.com/sanathp/statusok",
              "title": "StatusOK",
              "description": "Monitor your Website and REST APIs.Get Notified through Slack, E-mail when your server is down or response time is more than expected."
            },
            {
              "href": "https://github.com/dikhan/terraform-provider-openapi",
              "title": "terraform-provider-openapi",
              "description": "Terraform provider plugin that dynamically configures itself at runtime based on an OpenAPI document (formerly known as swagger file) containing the definitions of the APIs exposed."
            },
            {
              "href": "https://github.com/containous/traefik",
              "title": "traefik",
              "description": "Reverse proxy and load balancer with support for multiple backends."
            },
            {
              "href": "https://github.com/ovh/utask",
              "title": "uTask",
              "description": "Automation engine that models and executes business processes declared in yaml."
            },
            {
              "href": "https://github.com/tsenart/vegeta",
              "title": "Vegeta",
              "description": "HTTP load testing tool and library. It's over 9000!"
            },
            {
              "href": "https://github.com/adnanh/webhook",
              "title": "webhook",
              "description": "Tool which allows user to create HTTP endpoints (hooks) that execute commands on the server."
            },
            {
              "href": "https://wide.b3log.org/login",
              "title": "Wide",
              "description": "Web-based IDE for Teams using Golang."
            },
            {
              "href": "https://github.com/masterzen/winrm-cli",
              "title": "winrm-cli",
              "description": "Cli tool to remotely execute commands on Windows machines."
            }
          ]
        },
        {
          "title": "Other Software",
          "subsections": [],
          "links": [
            {
              "href": "https://github.com/crufter/borg",
              "title": "borg",
              "description": "Terminal based search engine for bash snippets."
            },
            {
              "href": "https://github.com/tejo/boxed",
              "title": "boxed",
              "description": "Dropbox based blog engine."
            },
            {
              "href": "https://github.com/rafael-santiago/cherry",
              "title": "Cherry",
              "description": "Tiny webchat server in Go."
            },
            {
              "href": "https://github.com/gocircuit/circuit",
              "title": "Circuit",
              "description": "Circuit is a programmable platform-as-a-service (PaaS) and/or Infrastructure-as-a-Service (IaaS), for management, discovery, synchronization and orchestration of services and hosts comprising cloud applications."
            },
            {
              "href": "https://github.com/tylertreat/Comcast",
              "title": "Comcast",
              "description": "Simulate bad network connections."
            },
            {
              "href": "https://github.com/kelseyhightower/confd",
              "title": "confd",
              "description": "Manage local application configuration files using templates and data from etcd or consul."
            },
            {
              "href": "https://github.com/schollz/croc",
              "title": "croc",
              "description": "Easily and securely send files or folders from one computer to another."
            },
            {
              "href": "http://www.docker.com/",
              "title": "Docker",
              "description": "Open platform for distributed applications for developers and sysadmins."
            },
            {
              "href": "https://github.com/documize/community",
              "title": "Documize",
              "description": "Modern wiki software that integrates data from SaaS tools."
            },
            {
              "href": "https://github.com/scryinfo/dp",
              "title": "dp",
              "description": "Through SDK for data exchange with blockchain, developers can get easy access to DAPP development."
            },
            {
              "href": "https://github.com/odeke-em/drive",
              "title": "drive",
              "description": "Google Drive client for the commandline."
            },
            {
              "href": "https://github.com/gilbertchen/duplicacy",
              "title": "Duplicacy",
              "description": "A cross-platform network and cloud backup tool based on the idea of lock-free deduplication."
            },
            {
              "href": "https://github.com/Antonito/gfile",
              "title": "gfile",
              "description": "Securely transfer files between two computers, without any third party, over WebRTC."
            },
            {
              "href": "https://github.com/shurcooL/Go-Package-Store",
              "title": "Go Package Store",
              "description": "App that displays updates for the Go packages in your GOPATH."
            },
            {
              "href": "https://github.com/Sioro-Neoku/go-peerflix",
              "title": "go-peerflix",
              "description": "Video streaming torrent client."
            },
            {
              "href": "https://github.com/Humpheh/goboy",
              "title": "GoBoy",
              "description": "Nintendo Game Boy Color emulator written in Go."
            },
            {
              "href": "https://github.com/goccmack/gocc",
              "title": "gocc",
              "description": "Gocc is a compiler kit for Go written in Go."
            },
            {
              "href": "https://github.com/diankong/GoDocTooltip",
              "title": "GoDocTooltip",
              "description": "Chrome extension for Go Doc sites, which shows function description as tooltip at function list."
            },
            {
              "href": "https://jetbrains.com/go",
              "title": "GoLand",
              "description": "Full featured cross-platform Go IDE."
            },
            {
              "href": "https://github.com/buger/gor",
              "title": "Gor",
              "description": "Http traffic replication tool, for replaying traffic from production to stage/dev environments in real-time."
            },
            {
              "href": "http://gohugo.io/",
              "title": "hugo",
              "description": "Fast and Modern Static Website Engine."
            },
            {
              "href": "https://github.com/thestrukture/ide",
              "title": "ide",
              "description": "Browser accessible IDE. Designed for Go with Go."
            },
            {
              "href": "https://github.com/dimiro1/ipe",
              "title": "ipe",
              "description": "Open source Pusher server implementation compatible with Pusher client libraries written in GO."
            },
            {
              "href": "https://github.com/assafmo/joincap",
              "title": "joincap",
              "description": "Command-line utility for merging multiple pcap files together."
            },
            {
              "href": "https://jujucharms.com/",
              "title": "Juju",
              "description": "Cloud-agnostic service deployment and orchestration - supports EC2, Azure, Openstack, MAAS and more."
            },
            {
              "href": "https://github.com/jeffail/leaps",
              "title": "Leaps",
              "description": "Pair programming service using Operational Transforms."
            },
            {
              "href": "https://github.com/yunabe/lgo",
              "title": "lgo",
              "description": "Interactive Go programming with Jupyter. It supports code completion, code inspection and 100% Go compatibility."
            },
            {
              "href": "http://limetext.org/",
              "title": "limetext",
              "description": "Lime Text is a powerful and elegant text editor primarily developed in Go that aims to be a Free and open-source software successor to Sublime Text."
            },
            {
              "href": "https://github.com/visualfc/liteide",
              "title": "LiteIDE",
              "description": "LiteIDE is a simple, open source, cross-platform Go IDE."
            },
            {
              "href": "https://github.com/quii/mockingjay-server",
              "title": "mockingjay",
              "description": "Fake HTTP servers and consumer driven contracts from one configuration file. You can also make the server randomly misbehave to help do more realistic performance tests."
            },
            {
              "href": "https://github.com/mehrdadrad/mylg",
              "title": "myLG",
              "description": "Command Line Network Diagnostic tool written in Go."
            },
            {
              "href": "https://github.com/unix4fun/naclpipe",
              "title": "naclpipe",
              "description": "Simple NaCL EC25519 based crypto pipe tool written in Go."
            },
            {
              "href": "https://github.com/fogleman/nes",
              "title": "nes",
              "description": "Nintendo Entertainment System (NES) emulator written in Go."
            },
            {
              "href": "https://github.com/noraesae/orange-cat",
              "title": "orange-cat",
              "description": "Markdown previewer written in Go."
            },
            {
              "href": "https://github.com/gulien/orbit",
              "title": "Orbit",
              "description": "A simple tool for running commands and generating files from templates."
            },
            {
              "href": "https://github.com/pointlander/peg",
              "title": "peg",
              "description": "Peg, Parsing Expression Grammar, is an implementation of a Packrat parser generator."
            },
            {
              "href": "https://github.com/restic/restic",
              "title": "restic",
              "description": "De-duplicating backup program."
            },
            {
              "href": "https://github.com/boyter/scc",
              "title": "scc",
              "description": "Sloc Cloc and Code, a very fast accurate code counter with complexity calculations and COCOMO estimates."
            },
            {
              "href": "https://github.com/chrislusf/seaweedfs",
              "title": "Seaweed File System",
              "description": "Fast, Simple and Scalable Distributed File System with O(1) disk seek."
            },
            {
              "href": "https://github.com/msoap/shell2http",
              "title": "shell2http",
              "description": "Executing shell commands via http server (for prototyping or remote control)."
            },
            {
              "href": "https://github.com/intelsdi-x/snap",
              "title": "snap",
              "description": "Powerful telemetry framework."
            },
            {
              "href": "https://github.com/lucasgomide/snitch",
              "title": "Snitch",
              "description": "Simple way to notify your team and many tools when someone has deployed any application via Tsuru."
            },
            {
              "href": "https://github.com/pressly/sup",
              "title": "Stack Up",
              "description": "Stack Up, a super simple deployment tool - just Unix - think of it like 'make' for a network of servers."
            },
            {
              "href": "https://syncthing.net/",
              "title": "syncthing",
              "description": "Open, decentralized file synchronization tool and protocol."
            },
            {
              "href": "https://github.com/crazcalm/term-quiz",
              "title": "term-quiz",
              "description": "Quizzes for your terminal."
            },
            {
              "href": "https://github.com/shopify/toxiproxy",
              "title": "toxiproxy",
              "description": "Proxy to simulate network and system conditions for automated tests."
            },
            {
              "href": "https://tsuru.io/",
              "title": "tsuru",
              "description": "Extensible and open source Platform as a Service software."
            },
            {
              "href": "https://github.com/VerizonDigital/vflow",
              "title": "vFlow",
              "description": "High-performance, scalable and reliable IPFIX, sFlow and Netflow collector."
            },
            {
              "href": "https://github.com/wellington/wellington",
              "title": "wellington",
              "description": "Sass project management tool, extends the language with sprite functions (like Compass)."
            }
          ]
        }
      ],
      "links": []
    },
    {
      "group": "Resources",
      "title": "Benchmarks",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/davecheney/autobench",
          "title": "autobench",
          "description": "Framework to compare the performance between different Go versions."
        },
        {
          "href": "https://github.com/mrLSD/go-benchmark-app",
          "title": "go-benchmark-app",
          "description": "Powerful HTTP-benchmark tool mixed with Аb, Wrk, Siege tools. Gathering statistics and various parameters for benchmarks and comparison results."
        },
        {
          "href": "https://github.com/tylertreat/go-benchmarks",
          "title": "go-benchmarks",
          "description": "Few miscellaneous Go microbenchmarks. Compare some language features to alternative approaches."
        },
        {
          "href": "https://github.com/julienschmidt/go-http-routing-benchmark",
          "title": "go-http-routing-benchmark",
          "description": "Go HTTP request router benchmark and comparison."
        },
        {
          "href": "https://github.com/smallnest/go-web-framework-benchmark",
          "title": "go-web-framework-benchmark",
          "description": "Go web framework benchmark."
        },
        {
          "href": "https://github.com/alecthomas/go_serialization_benchmarks",
          "title": "go_serialization_benchmarks",
          "description": "Benchmarks of Go serialization methods."
        },
        {
          "href": "https://github.com/PuerkitoBio/gocostmodel",
          "title": "gocostmodel",
          "description": "Benchmarks of common basic operations for the Go language."
        },
        {
          "href": "https://github.com/tyler-smith/golang-sql-benchmark",
          "title": "golang-sql-benchmark",
          "description": "Collection of benchmarks for popular Go database/SQL utilities."
        },
        {
          "href": "https://github.com/feyeleanor/GoSpeed",
          "title": "gospeed",
          "description": "Go micro-benchmarks for calculating the speed of language constructs."
        },
        {
          "href": "https://github.com/jimrobinson/kvbench",
          "title": "kvbench",
          "description": "Key/Value database benchmark."
        },
        {
          "href": "https://github.com/atemerev/skynet",
          "title": "skynet",
          "description": "Skynet 1M threads microbenchmark."
        },
        {
          "href": "https://github.com/fawick/speedtest-resize",
          "title": "speedtest-resize",
          "description": "Compare various Image resize algorithms for the Go language."
        }
      ]
    },
    {
      "group": "Resources",
      "title": "Conferences",
      "subsections": [],
      "links": [
        {
          "href": "http://www.capitalgolang.com",
          "title": "Capital Go",
          "description": "Washington, D.C., USA."
        },
        {
          "href": "http://www.dotgo.eu",
          "title": "dotGo",
          "description": "Paris, France."
        },
        {
          "href": "http://gocon.connpass.com/",
          "title": "GoCon",
          "description": "Tokyo, Japan."
        },
        {
          "href": "https://www.godays.io/",
          "title": "GoDays",
          "description": "Berlin, Germany."
        },
        {
          "href": "http://golab.io/",
          "title": "GoLab",
          "description": "Florence, Italy."
        },
        {
          "href": "http://golanguk.com/",
          "title": "GolangUK",
          "description": "London, UK."
        },
        {
          "href": "http://gopherchina.org",
          "title": "GopherChina",
          "description": "Shanghai, China."
        },
        {
          "href": "http://www.gophercon.com/",
          "title": "GopherCon",
          "description": "Denver, USA."
        },
        {
          "href": "https://gophercon.com.au/",
          "title": "GopherCon Australia",
          "description": "Sydney, Australia."
        },
        {
          "href": "https://gopherconbr.org",
          "title": "GopherCon Brazil",
          "description": "Florianópolis, BR."
        },
        {
          "href": "https://gophercon.is/",
          "title": "GopherCon Europe",
          "description": "Berlin, Germany."
        },
        {
          "href": "https://www.gophercon.in/",
          "title": "GopherCon India",
          "description": "Pune, India."
        },
        {
          "href": "https://www.gophercon.org.il/",
          "title": "GopherCon Israel",
          "description": "Tel Aviv, Israel."
        },
        {
          "href": "https://www.gophercon-russia.ru",
          "title": "GopherCon Russia",
          "description": "Moscow, Russia."
        },
        {
          "href": "https://gophercon.sg",
          "title": "GopherCon Singapore",
          "description": "Mapletree Business City, Singapore."
        },
        {
          "href": "https://gophercon.vn/",
          "title": "GopherCon Vietnam",
          "description": "Ho Chi Minh City, Vietnam."
        },
        {
          "href": "http://gothamgo.com/",
          "title": "GothamGo",
          "description": "New York City, USA."
        },
        {
          "href": "https://goway.io/",
          "title": "GoWayFest",
          "description": "Minsk, Belarus."
        }
      ]
    },
    {
      "group": "Resources",
      "title": "E-Books",
      "subsections": [],
      "links": [
        {
          "href": "https://leanpub.com/GoNotebook/read",
          "title": "A Go Developer's Notebook"
        },
        {
          "href": "http://www.golang-book.com/",
          "title": "An Introduction to Programming in Go"
        },
        {
          "href": "https://www.gitbook.com/book/astaxie/build-web-application-with-golang/details",
          "title": "Build Web Application with Golang"
        },
        {
          "href": "https://www.gitbook.com/book/codegangsta/building-web-apps-with-go/details",
          "title": "Building Web Apps With Go"
        },
        {
          "href": "https://go101.org",
          "title": "Go 101",
          "description": "A book focusing on Go syntax/semantics and all kinds of details."
        },
        {
          "href": "http://golangbootcamp.com",
          "title": "Go Bootcamp"
        },
        {
          "href": "https://github.com/thedevsir/gosuccinctly",
          "title": "Go Succinctly",
          "description": "in Persian."
        },
        {
          "href": "https://github.com/dariubs/GoBooks",
          "title": "GoBooks",
          "description": "A curated list of Go books."
        },
        {
          "href": "https://www.miek.nl/downloads/Go/Learning-Go-latest.pdf",
          "title": "Learning Go"
        },
        {
          "href": "https://jan.newmarch.name/go/",
          "title": "Network Programming With Go"
        },
        {
          "href": "http://www.gopl.io/",
          "title": "The Go Programming Language"
        },
        {
          "href": "https://github.com/polaris1119/The-Golang-Standard-Library-by-Example",
          "title": "The Golang Standard Library by Example (Chinese)"
        },
        {
          "href": "https://github.com/thewhitetulip/web-dev-golang-anti-textbook/",
          "title": "Web Application with Go the Anti-Textbook"
        },
        {
          "href": "https://compilerbook.com",
          "title": "Writing A Compiler In Go"
        },
        {
          "href": "https://interpreterbook.com",
          "title": "Writing An Interpreter In Go"
        }
      ]
    },
    {
      "group": "Resources",
      "title": "Gophers",
      "subsections": [],
      "links": [
        {
          "href": "https://github.com/MariaLetta/free-gophers-pack",
          "title": "Free Gophers Pack",
          "description": "Gopher graphics pack by Maria Letta with illustrations and emotional characters in vector and raster."
        },
        {
          "href": "https://github.com/keygx/Go-gopher-Vector",
          "title": "Go-gopher-Vector",
          "description": "Go gopher Vector Data [.ai, .svg]."
        },
        {
          "href": "https://github.com/GolangUA/gopher-logos",
          "title": "gopher-logos",
          "description": "adorable gopher logos."
        },
        {
          "href": "https://github.com/tenntenn/gopher-stickers",
          "title": "gopher-stickers"
        },
        {
          "href": "https://github.com/golang-samples/gopher-vector",
          "title": "gopher-vector"
        },
        {
          "href": "https://github.com/shalakhin/gophericons",
          "title": "gophericons"
        },
        {
          "href": "https://github.com/matryer/gopherize.me",
          "title": "gopherize.me",
          "description": "Gopherize yourself."
        },
        {
          "href": "https://github.com/ashleymcnamara/gophers",
          "title": "gophers",
          "description": "Gopher artworks by Ashley McNamara."
        },
        {
          "href": "https://github.com/egonelbre/gophers",
          "title": "gophers",
          "description": "Free gophers."
        },
        {
          "href": "https://github.com/rogeralsing/gophers",
          "title": "gophers",
          "description": "random gopher graphics."
        },
        {
          "href": "https://github.com/sillecelik/go-gopher",
          "title": "gophers",
          "description": "Gopher amigurumi toy pattern."
        }
      ]
    },
    {
      "group": "Resources",
      "title": "Meetups",
      "subsections": [],
      "links": [
        {
          "href": "https://www.meetup.com/Basel-Go-Meetup/",
          "title": "Basel Go Meetup"
        },
        {
          "href": "https://www.meetup.com/golang-users-berlin/",
          "title": "Berlin Golang"
        },
        {
          "href": "https://www.meetup.com/Brisbane-Golang-Meetup/",
          "title": "Brisbane Gophers"
        },
        {
          "href": "https://www.meetup.com/Canberra-Gophers/",
          "title": "Canberra Gophers"
        },
        {
          "href": "https://www.meetup.com/golanguagenewyork/",
          "title": "Go Language NYC"
        },
        {
          "href": "https://www.meetup.com/Go-London-User-Group/",
          "title": "Go London User Group"
        },
        {
          "href": "https://www.meetup.com/go-toronto/",
          "title": "Go Toronto"
        },
        {
          "href": "https://www.meetup.com/Go-Users-Group-Atlanta/",
          "title": "Go User Group Atlanta"
        },
        {
          "href": "https://www.meetup.com/GoBandung/",
          "title": "GoBandung"
        },
        {
          "href": "https://www.meetup.com/gobridge/",
          "title": "GoBridge, San Francisco, CA"
        },
        {
          "href": "https://www.meetup.com/GoCracow/",
          "title": "GoCracow - Krakow, Poland"
        },
        {
          "href": "https://www.meetup.com/GoJakarta/",
          "title": "GoJakarta"
        },
        {
          "href": "https://www.meetup.com/golang-amsterdam/",
          "title": "Golang Amsterdam"
        },
        {
          "href": "https://www.meetup.com/Golang-Argentina/",
          "title": "Golang Argentina"
        },
        {
          "href": "https://www.meetup.com/BaltimoreGolang/",
          "title": "Golang Baltimore, MD"
        },
        {
          "href": "https://www.meetup.com/Golang-Bangalore/",
          "title": "Golang Bangalore"
        },
        {
          "href": "https://www.meetup.com/go-belo-horizonte/",
          "title": "Golang Belo Horizonte - Brazil"
        },
        {
          "href": "https://www.meetup.com/bostongo/",
          "title": "Golang Boston"
        },
        {
          "href": "https://www.meetup.com/Golang-Bulgaria/",
          "title": "Golang Bulgaria"
        },
        {
          "href": "https://www.meetup.com/Cardiff-Go-Meetup/",
          "title": "Golang Cardiff, UK"
        },
        {
          "href": "https://www.meetup.com/Go-Cph/",
          "title": "Golang Copenhagen"
        },
        {
          "href": "https://www.meetup.com/GolangCWB/",
          "title": "Golang Curitiba - Brazil"
        },
        {
          "href": "https://www.meetup.com/Golang-DC/",
          "title": "Golang DC, Arlington, VA"
        },
        {
          "href": "https://www.meetup.com/golang-dorset/",
          "title": "Golang Dorset, UK"
        },
        {
          "href": "https://www.meetup.com/Golang-Estonia/",
          "title": "Golang Estonia"
        },
        {
          "href": "https://www.meetup.com/Gurgaon-Go-Meetup/",
          "title": "Golang Gurgaon, India"
        },
        {
          "href": "https://www.meetup.com/Go-User-Group-Hamburg/",
          "title": "Golang Hamburg - Germany"
        },
        {
          "href": "https://www.meetup.com/Go-Israel/",
          "title": "Golang Israel"
        },
        {
          "href": "https://www.meetup.com/Joinville-Go-Meetup/",
          "title": "Golang Joinville - Brazil"
        },
        {
          "href": "https://www.meetup.com/GDG-Golang-Korea/",
          "title": "Golang Korea"
        },
        {
          "href": "https://www.meetup.com/Golang-Peru/",
          "title": "Golang Lima - Peru"
        },
        {
          "href": "https://www.meetup.com/Golang-Lyon/",
          "title": "Golang Lyon"
        },
        {
          "href": "https://www.meetup.com/fr-FR/Golang-Marseille/",
          "title": "Golang Marseille"
        },
        {
          "href": "https://www.meetup.com/golang-mel/",
          "title": "Golang Melbourne"
        },
        {
          "href": "https://www.meetup.com/Golang-Mountain-View/",
          "title": "Golang Mountain View"
        },
        {
          "href": "https://www.meetup.com/nycgolang/",
          "title": "Golang New York"
        },
        {
          "href": "https://www.meetup.com/en-AU/Golang-North-East/",
          "title": "Golang North East"
        },
        {
          "href": "https://www.meetup.com/Golang-Paris/",
          "title": "Golang Paris"
        },
        {
          "href": "https://www.meetup.com/Golang-Pune/",
          "title": "Golang Pune"
        },
        {
          "href": "https://www.meetup.com/golangsg/",
          "title": "Golang Singapore"
        },
        {
          "href": "https://www.meetup.com/Go-Stockholm/",
          "title": "Golang Stockholm"
        },
        {
          "href": "https://www.meetup.com/golang-syd/",
          "title": "Golang Sydney, AU"
        },
        {
          "href": "https://www.meetup.com/golangbr/",
          "title": "Golang São Paulo - Brazil"
        },
        {
          "href": "https://www.meetup.com/golang-taipei-meetup/",
          "title": "Golang Taipei"
        },
        {
          "href": "https://www.meetup.com/golangvan/",
          "title": "Golang Vancouver, BC"
        },
        {
          "href": "https://www.meetup.com/GolangKazan/",
          "title": "Golang Казань"
        },
        {
          "href": "https://www.meetup.com/Golang-Moscow/",
          "title": "Golang Москва"
        },
        {
          "href": "https://www.meetup.com/Golang-Peter/",
          "title": "Golang Питер"
        },
        {
          "href": "https://www.meetup.com/golangsf",
          "title": "GoSF - San Francisco, CA"
        },
        {
          "href": "https://www.meetup.com/Istanbul-Golang/",
          "title": "Istanbul Golang"
        },
        {
          "href": "https://www.meetup.com/golang/",
          "title": "Seattle Go Programmers"
        },
        {
          "href": "https://www.meetup.com/uagolang/",
          "title": "Ukrainian Golang User Groups"
        },
        {
          "href": "https://www.meetup.com/utahgophers/",
          "title": "Utah Go User Group"
        },
        {
          "href": "https://www.meetup.com/Women-Who-Go/",
          "title": "Women Who Go - San Francisco, CA"
        }
      ]
    },
    {
      "group": "Resources",
      "title": "Social Media",
      "subsections": [
        {
          "title": "Twitter",
          "subsections": [],
          "links": [
            {
              "href": "https://twitter.com/golang",
              "title": "@golang"
            },
            {
              "href": "https://twitter.com/golang_news",
              "title": "@golang_news"
            },
            {
              "href": "https://twitter.com/golangch",
              "title": "@golangch"
            },
            {
              "href": "https://twitter.com/golangflow",
              "title": "@golangflow"
            },
            {
              "href": "https://twitter.com/golangweekly",
              "title": "@golangweekly"
            }
          ]
        },
        {
          "title": "Reddit",
          "subsections": [],
          "links": [
            {
              "href": "https://www.reddit.com/r/golang/",
              "title": "r/golang"
            }
          ]
        }
      ],
      "links": []
    },
    {
      "group": "Resources",
      "title": "Websites",
      "subsections": [
        {
          "title": "Tutorials",
          "subsections": [],
          "links": [
            {
              "href": "http://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/",
              "title": "50 Shades of Go",
              "description": "Traps, Gotchas, and Common Mistakes for New Golang Devs."
            },
            {
              "href": "https://snipcart.com/blog/golang-ecommerce-ponzu-cms-demo?utm_term=golang-ecommerce-ponzu-cms-demo",
              "title": "A Guide to Golang E-Commerce",
              "description": "Building a Golang site for e-commerce (demo included)."
            },
            {
              "href": "http://tour.golang.org/",
              "title": "A Tour of Go",
              "description": "Interactive tour of Go."
            },
            {
              "href": "https://github.com/astaxie/build-web-application-with-golang",
              "title": "Build web application with Golang",
              "description": "Golang ebook intro how to build a web app with golang."
            },
            {
              "href": "https://semaphoreci.com/community/tutorials/building-and-testing-a-rest-api-in-go-with-gorilla-mux-and-postgresql",
              "title": "Building and Testing a REST API in Go with Gorilla Mux and PostgreSQL",
              "description": "We’ll write an API with the help of the powerful Gorilla Mux."
            },
            {
              "href": "https://semaphoreci.com/community/tutorials/building-go-web-applications-and-microservices-using-gin",
              "title": "Building Go Web Applications and Microservices Using Gin",
              "description": "Get familiar with Gin and find out how it can help you reduce boilerplate code and build a request handling pipeline."
            },
            {
              "href": "https://medium.com/@rocketlaunchr.cloud/caching-slow-database-queries-1085d308a0c9",
              "title": "Caching Slow Database Queries",
              "description": "How to cache slow database queries."
            },
            {
              "href": "https://medium.com/@rocketlaunchr.cloud/canceling-mysql-in-go-827ed8f83b30",
              "title": "Canceling MySQL",
              "description": "How to cancel MySQL queries."
            },
            {
              "href": "https://github.com/miguelmota/ethereum-development-with-go-book",
              "title": "Ethereum Development with Go",
              "description": "A little e-book on Ethereum Development with Go."
            },
            {
              "href": "http://gameswithgo.org/",
              "title": "Games With Go",
              "description": "A video series teaching programming and game development."
            },
            {
              "href": "https://gobyexample.com/",
              "title": "Go By Example",
              "description": "Hands-on introduction to Go using annotated example programs."
            },
            {
              "href": "https://github.com/a8m/go-lang-cheat-sheet",
              "title": "Go Cheat Sheet",
              "description": "Go's reference card."
            },
            {
              "href": "http://go-database-sql.org/",
              "title": "Go database/sql tutorial",
              "description": "Introduction to database/sql."
            },
            {
              "href": "https://itunes.apple.com/us/app/go-playground/id1437518275?ls=1&mt=8",
              "title": "Go Playground for iOS",
              "description": "Interactively edit & play Go snippets on your mobile device."
            },
            {
              "href": "https://tutorialedge.net/golang/go-webassembly-tutorial/",
              "title": "Go WebAssembly Tutorial - Building a Simple Calculator"
            },
            {
              "href": "https://github.com/tmrts/go-patterns",
              "title": "go-patterns",
              "description": "Curated list of Go design patterns, recipes and idioms."
            },
            {
              "href": "https://github.com/miguelmota/golang-for-nodejs-developers",
              "title": "Golang for Node.js Developers",
              "description": "Examples of Golang compared to Node.js for learning."
            },
            {
              "href": "https://golangbot.com/learn-golang-series/",
              "title": "Golangbot",
              "description": "Tutorials to get started with programming in Go."
            },
            {
              "href": "https://golangcode.com/",
              "title": "GolangCode",
              "description": "Collection of code snippets and tutorials to help tackle every day issues."
            },
            {
              "href": "https://hackr.io/tutorials/learn-golang",
              "title": "Hackr.io",
              "description": "Learn Go from the best online golang tutorials submitted & voted by the golang programming community."
            },
            {
              "href": "https://semaphoreci.com/community/tutorials/how-to-use-godog-for-behavior-driven-development-in-go",
              "title": "How to Use Godog for Behavior-driven Development in Go",
              "description": "Get started with Godog — a Behavior-driven development framework for building and testing Go applications."
            },
            {
              "href": "https://github.com/quii/learn-go-with-tests",
              "title": "Learn Go with TDD",
              "description": "Learn Go with test-driven development."
            },
            {
              "href": "https://milapneupane.com.np/2019/07/06/learning-golang-from-zero-to-hero/",
              "title": "Learning Golang - From zero to hero",
              "description": "Getting started with golang for beginner."
            },
            {
              "href": "https://www.youtube.com/packagemain",
              "title": "package main",
              "description": "YouTube channel about Programming in Go."
            },
            {
              "href": "https://www.coursera.org/specializations/google-golang",
              "title": "Programming with Google Go",
              "description": "Coursera Specialization to learn about Go from scratch."
            },
            {
              "href": "https://medium.com/@martinolsansky/webassembly-with-golang-is-fun-b243c0e34f02",
              "title": "The world’s easiest introduction to WebAssembly with Golang"
            },
            {
              "href": "https://github.com/mkaz/working-with-go",
              "title": "Working with Go",
              "description": "Intro to go for experienced programmers."
            },
            {
              "href": "http://yourbasic.org/golang",
              "title": "Your basic Go",
              "description": "Huge collection of tutorials and how to's."
            }
          ]
        }
      ],
      "links": [
        {
          "href": "https://go.libhunt.com",
          "title": "Awesome Go @LibHunt",
          "description": "Your go-to Go Toolbox."
        },
        {
          "href": "https://github.com/lukasz-madon/awesome-remote-job",
          "title": "Awesome Remote Job",
          "description": "Curated list of awesome remote jobs. A lot of them are looking for Go hackers."
        },
        {
          "href": "https://github.com/bayandin/awesome-awesomeness",
          "title": "awesome-awesomeness",
          "description": "List of other amazingly awesome lists."
        },
        {
          "href": "https://www.codingame.com/",
          "title": "CodinGame",
          "description": "Learn Go by solving interactive tasks using small games as practical examples."
        },
        {
          "href": "http://blog.golang.org",
          "title": "Go Blog",
          "description": "The official Go blog."
        },
        {
          "href": "http://golang-challenge.org/",
          "title": "Go Challenge",
          "description": "Learn Go by solving problems and getting feedback from Go experts."
        },
        {
          "href": "https://hashnode.com/n/go",
          "title": "Go Community on Hashnode",
          "description": "Community of Gophers on Hashnode."
        },
        {
          "href": "https://forum.golangbridge.org",
          "title": "Go Forum",
          "description": "Forum to discuss Go."
        },
        {
          "href": "https://www.goin5minutes.com/",
          "title": "Go In 5 Minutes",
          "description": "5 minute screencasts focused on getting one thing done."
        },
        {
          "href": "https://github.com/golang/go/wiki/Projects",
          "title": "Go Projects",
          "description": "List of projects on the Go community wiki."
        },
        {
          "href": "https://goreportcard.com",
          "title": "Go Report Card",
          "description": "A report card for your Go package."
        },
        {
          "href": "https://go.dev/",
          "title": "go.dev",
          "description": "A hub for Go developers."
        },
        {
          "href": "https://github.com/ninedraft/gocryforhelp",
          "title": "gocryforhelp",
          "description": "Collection of Go projects that needs help. Good place to start your open-source way in Go."
        },
        {
          "href": "https://godoc.org/",
          "title": "godoc.org",
          "description": "Documentation for open source Go packages."
        },
        {
          "href": "https://golangjob.xyz",
          "title": "Golang Developer Jobs",
          "description": "Developer Jobs exclusivly for Golang related Roles."
        },
        {
          "href": "https://golangflow.io",
          "title": "Golang Flow",
          "description": "Post Updates, News, Packages and more."
        },
        {
          "href": "https://golangnews.com",
          "title": "Golang News",
          "description": "Links and news about Go programming."
        },
        {
          "href": "https://github.com/mholt/golang-graphics",
          "title": "golang-graphics",
          "description": "Collection of Go images, graphics, and art."
        },
        {
          "href": "https://groups.google.com/forum/#!forum/golang-nuts",
          "title": "golang-nuts",
          "description": "Go mailing list."
        },
        {
          "href": "https://plus.google.com/communities/114112804251407510571",
          "title": "Google Plus Community",
          "description": "The Google+ community for #golang enthusiasts."
        },
        {
          "href": "https://invite.slack.golangbridge.org",
          "title": "Gopher Community Chat",
          "description": "Join Our New Slack Community For Gophers ( Understand how it came )."
        },
        {
          "href": "https://gophercises.com/",
          "title": "Gophercises",
          "description": "Free coding exercises for budding gophers."
        },
        {
          "href": "https://gowalker.org",
          "title": "gowalker.org",
          "description": "Go Project API documentation."
        },
        {
          "href": "https://m-zajac.github.io/json2go",
          "title": "json2go",
          "description": "Advanced JSON to Go struct conversion - online tool."
        },
        {
          "href": "https://www.youtube.com/c/justforfunc",
          "title": "justforfunc",
          "description": "Youtube channel dedicated to Go programming language tips and tricks, hosted by  Francesc Campoy @francesc ."
        },
        {
          "href": "https://madewithgolang.com/?ref=awesome-go",
          "title": "Made with Golang"
        },
        {
          "href": "https://www.reddit.com/r/golang",
          "title": "r/Golang",
          "description": "News about Go."
        },
        {
          "href": "https://studygolang.com",
          "title": "studygolang",
          "description": "The community of studygolang in China."
        },
        {
          "href": "https://github.com/trending?l=go",
          "title": "Trending Go repositories on GitHub today",
          "description": "Good place to find new Go libraries."
        },
        {
          "href": "https://tutorialedge.net/course/golang/",
          "title": "TutorialEdge - Golang"
        }
      ]
    }
  ]
}